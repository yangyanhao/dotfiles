2012-08-03 11:22:10	-->	johnhamelink (~JohnHamel@ks393762.kimsufi.com) has joined ##c++
2012-08-03 11:22:10	--	Topic for ##c++ is "ISO/IEC 14882:2011 (a.k.a. C++11) is PUBLISHED!!  || Can't speak? Identify to NickServ || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/ || other channels: ##c++-basic, ##c++-general, ##c++-social, ##iso-c++ || we don't do homework"
2012-08-03 11:22:10	--	Topic set by Eelis (~Eelis@unaffiliated/eelis) on Sat, 03 Sep 2011 19:59:56
2012-08-03 11:22:10	--	Nicks ##c++: [aarch AAYUSH acrocity adnap Adran Adrinael Agiofws ahf aib Airells akiress alamar alanjf alastair AlbireoX alek_br_ alelos Alice3 AllenJB Alxandr ambroff_ an0maly an0xx An_Ony_Moose anaconda Anasazi anatolys Andon andres ansiwen apoc Apocalypse archangelpetro archypetro Areks arnabkd arnoldB aroga arpd Arttu arun arvind_khadri asakura ashfagg assertsmart Aster atubbs average_drifter awx Azzkikr b1rkh0ff b_jonas BabyGotBook badone Bamieater BanderOS Bao base84 basic6 bastih bastii battlehands Bavo bburhans Beetny Beket Belgarion0 Bigcheese Biolunar Bish_ blackace blast_hardcheese BlastHardcheese blenny blo Bloodust bloony BoAnd bolosaur bolt BombStrike bone bool_ BoomBox BountyX boxofrox bps Brklyn_ bryno BSDBlack BSWolf bvs Bwild C00re caleb_9_ Carbonflux caveat- ccube cdash004 cdidd Cecen cfairles ChadStud1uffin chalcedony CharlieM75 chayin cheese1756 chenwj Chestal ChevyCowboy15 chewyDelicious ChibaPet chrisbuchholz ciaranm cic cinalyc cirrus] cl0ud clang classix clipon comawhite coppro cortana2 Cr8 crib cribert- Criztian crl cruxeternus curfont cursedm00n cut^e cyberspace- cYmen d-old d3x0r d4de damir__ Danikar Danio dansan dardevelin darkc0met daryl dau davicost1 DavidChenware davv3 DaZ dbr DeadSix27 Deathzor decltype DeeTah Defaultti DeltaHeavy demi` Derpy2 det dethredic devaholic DevWouter dflurker_ dgiagio dh dijital1 dindinx dinesh_ dirtydawg djinni` Dolan_pls Domi donwilliam doodle77 dorkosaurus Dotti Dreadnaught drgreenthumb drinkycrow dropdrive dross_ dumont DustyDingo du|dx_ dv_ dvide dvoid dys e1z0 edlinde edoceo` edr efjboss ejls Element9 elliottcable em enkomax envi EoN` EPIK ericP ernini Erryx et eusto evanz evelyette Ex explodus f47h3r FabTG fasta felipe fhd fighterjet findiggle fisted Flannel Fleck flux foo357 foor Forge_ forrestv Fratyr FriarTech FriskyKat froggey Fuuzetsu Fuxx gaten geeeek gemelen gencha Gentle GeorgeH GeorgeJ gerrrt gg7 gibberish glenfe glenfern gnathan87 Godslastering Goopyo Gorroth GrecKo_ Greg44 gregj Griwes groupcat gry gsvolt Guest90058 guifre gusnan hackkitten HaltingState haxi hayander hays heatxsink heiner heinrich5991 Helios HerzogDeXtEr HilltopView Hopkinz houmles hrnt hubbe3 Hydrant hyperair hyperboreean i7c icedtea iceisfun ido IHateHavingToReg Ikarus ikonia iLogical incognito_ ineb ingenious inkjetunito int0x27h Internet13 Irishmanluke ironzorg isbric ivan\ iZeR izhak j`ey jakoch jamesn Jannevaa jantje Jarvis javierHund Jaxan jayne JCBCIV jem777 jesuisuntorrent jfe jhoepken jhunold jimster jlen jo`` Joefish joel_falcou johnhamelink JonathanD jonnyli1125 Josef__K jott jrdnn jrgill jrickman JSharpe jsullivan_ julmae- julmuri jweinberg K1rk k299 K3|Chris kakashi_ Kaltiz kalven KaneTW Kartagis Kartrohm Kasreyn kavakava kchodorow kcj keltvek KernelMustard kerrick kevin__ keyvan Kicer86 KindOne klip kloeri Knio knittl KoVadim Krabbe kranthi KrzaQ kszatan ktch ktos kumelk kuplatupsu kuros kurti Kuukunen L3thal_ lahwran LAMMJohnson lanemeyer larks Lasher` levi501d libertas lilalinux Lillia7 Lirrec LjL loglaunch lolwat LordShiva loxley LRN luki- Lycanthropist lyindArk M-ou-se m3thyl mac^_ Maccer maddoc maddog_ madmoose makissy mama MaNI maplesoft marga martiert Martin8412 Martty Matthias|PC maum maw maxorator McMAGIC--Copy megaTherion melba mertsas mexlex mgaunard mgq mikalv mikroflops Minoulefou mishehu MissionCritical mitsuhiko Mnabil moeSeth Mogget molgrum molqr MonkeyMichael morfin Mosu Motig mousetrap mrcan mrh mrkotfw MrKronus msk muep mulvane Munnu muteki mwas Mws myrkraverk n00b201 Nach0z nahhh nahmaste naquad nauman navatwo nchaimov neersighted nemesit nenolod Neo17 Neptu nero netmind netrino neunon neurodamage Nibato Nickeeh_ nierob Nightmare Nik05 nikki93 nikoJ NimeshNeema NinjaPenguin nocture noflex noj nolyc nots nrd ntrb ntx nullslash nutron o] o^nd Obfuscate obs Obvious Octal_ ofan Olipro omni5cience orafu orbitz Orginator ormaaj Orphis OxDeadC0de Ozm pa Palmik pandantic parcs` PARLIAMENT patson paullik peanuter peper petteyg pgas pheredhel phr phschwartz PigFlu Pilate pilgrum piotr pippijn piti pix1 plouffe polysix portuguese Posterdati Praise pretty_function primepie_ Programmer_ pspace pticochon pucko pwned qdii Qub1t r126l r3m1 radiofree Rafusek Rajko rangergord Rapp Raziel_ rchatsiri rcj_ rcxdude rdpate rdragon ReachingFarr redec reels reko_t rendar RePaste Repentinus retornam rexou rhl rhodesd rhythmx Richard_Cavell richardwhiuk riotz Rix rmunoz rmunoz_ robbyoconnor robert_ robink RockstarRaccoon roflin roivas RokerHRO roland Rolz ross` rstrong Rubix ruediger rush2end rvchangue ryanakca s0und saati SaBer sacho SAHChandler sakurazaki sam samek samii_ SanguineAnomaly Sausage scharan Schoentoon schroedinbug Scub SecretAgent segy Seion semeion Seppoz Sergonium serious_jack SeySayux sh4wn shades ShawnWhite shintah showbott Shuba Silex silverwind silverwolf sirdancealot7 Skywing SlashLife Slide-O-Mix snarkyboojum SNiLD snuggl Soap__ solrize sorressean soulcake Spark_ spb sphenxes SphericalCow sporous spq` SpX squig standoo Starfire stepnem stfn Stormhawk straterra struct Stryyker sudokode SugarCube suiside sujeet sunfun SunnyD suppahsrv suy sweet_kid symm- synapt syo systemfault szr tapas Targen Tasky tayne tazle telexicon teotwaki Terminus- termos The_Coolest TheBeerinator TheCommieDUck TheFuzzball thelamb TheNull theprocrastin8r thief Tiffy Timbo TinoDidriksen TMAndersson TMM tmyklebu Toes_ tomaw TomyLobo torsan_ toytoy trapni trey trigen Trin tswett ttvd TuTizz tuxdev Tuxist Twey txomon|home tzarc uman unreal urlgrabber UukGoblin V-ille vchang vdv vektor vener VeXocide ville Vinnie_win vjn voidcoder volk voot545 vsayer vskaddanki W0rmDrink w3pm walmis wbooze wd40s weeb1e_ Wiz126 wobr wobster woggle wolfbyte wordToDaBird[Lap WormDrink wormphlegm wting wuj xandy XAVeRY xConMz xcvd Xethron xiliax xilo xiphiasx_ xivix Xjs|moonshine xnavor xunie-laptop xxtjaxx Y_Ichiro yamamushi_ yan_ ybit yeltzooo7 yhager Yonkie yorick Youka younder Younos yroeht ysbeer Yustme zariux zeleni_zub Zharf ZoB Zol ZsoL zyphex Zyrkon zyrtech z|Andy]
2012-08-03 11:22:10	--	Channel ##c++: 758 nicks (0 ops, 0 halfops, 0 voices, 758 normals)
2012-08-03 11:22:25	--	Mode ##c++ [+CPcflnpt #overflow 850]
2012-08-03 11:22:25	--	Channel created on Sat, 15 Sep 2001 04:15:35
2012-08-03 11:22:52	-->	Rutix (~rutix@188-142-5-156.FTTH.ispfabriek.nl) has joined ##c++
2012-08-03 11:22:52	<--	Rutix (~rutix@188-142-5-156.FTTH.ispfabriek.nl) has quit (Changing host)
2012-08-03 11:22:52	-->	Rutix (~rutix@unaffiliated/rutix) has joined ##c++
2012-08-03 11:23:28	<--	aarch (~z@ip-39.viapori.fi) has quit (Ping timeout: 245 seconds)
2012-08-03 11:24:12	Domi	how does that work?
2012-08-03 11:24:18	Domi	do you have an article on that?
2012-08-03 11:24:42	<--	LordShiva (~Shiva@unaffiliated/lordshiva) has quit (Ping timeout: 248 seconds)
2012-08-03 11:25:00	-->	LordShiva (~Shiva@212.200.54.115) has joined ##c++
2012-08-03 11:25:35	-->	the|forever|kid (kvirc@117.198.39.106) has joined ##c++
2012-08-03 11:26:02	-->	spobat (~lib@p5B2DE2DF.dip.t-dialin.net) has joined ##c++
2012-08-03 11:26:13	the|forever|kid	how do i compile ngspice on windows
2012-08-03 11:26:19	-->	dhruvasagar (~dhruvasag@122.167.80.117) has joined ##c++
2012-08-03 11:26:52	Bloodust	offtopic
2012-08-03 11:27:17	ville	the|forever|kid: carefully
2012-08-03 11:28:03	-->	altin (~altin@46.19.230.21) has joined ##c++
2012-08-03 11:28:03	<--	altin (~altin@46.19.230.21) has quit (Changing host)
2012-08-03 11:28:03	-->	altin (~altin@flossk/altin) has joined ##c++
2012-08-03 11:29:02	-->	Vert (~quassel@vlan116.pact.srf.ac.uk) has joined ##c++
2012-08-03 11:29:13	-->	xormor (~xormor@87-95-27-167.bb.dnainternet.fi) has joined ##c++
2012-08-03 11:29:24	the|forever|kid	hmm......
2012-08-03 11:29:30	<--	arvind_khadri (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Ping timeout: 248 seconds)
2012-08-03 11:30:52	-->	Progster (~blah@pool-173-56-20-26.nycmny.fios.verizon.net) has joined ##c++
2012-08-03 11:31:18	-->	arvind_khadri (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2012-08-03 11:33:27	<--	m3thyl (~m3th@cpe-76-169-228-195.socal.res.rr.com) has quit (Remote host closed the connection)
2012-08-03 11:33:31	-->	mire_ (~mire@85.222.222.254) has joined ##c++
2012-08-03 11:34:04	<--	Carbonflux (~BOB@71-212-119-112.tukw.qwest.net) has quit (Quit: Lumen est solum textura opus)
2012-08-03 11:34:18	<--	altin (~altin@flossk/altin) has quit (Ping timeout: 245 seconds)
2012-08-03 11:35:21	-->	m3thyl (~m3th@cpe-76-169-228-195.socal.res.rr.com) has joined ##c++
2012-08-03 11:38:57	<--	maplesoft (~maplesoft@175.110.67.3) has quit (Ping timeout: 246 seconds)
2012-08-03 11:39:23	-->	litb (~litb@pD9F9320A.dip.t-dialin.net) has joined ##c++
2012-08-03 11:39:28	litb	hello ALL folks
2012-08-03 11:39:51	melba	HIIIIIIIIIIIIII
2012-08-03 11:40:44	<--	the|forever|kid (kvirc@117.198.39.106) has quit (Read error: Connection reset by peer)
2012-08-03 11:41:02	-->	the|forever|kid (kvirc@117.198.39.106) has joined ##c++
2012-08-03 11:41:57	<--	maum (~maum@210.119.60.152) has quit (Remote host closed the connection)
2012-08-03 11:42:07	<--	voidcoder (~androirc@82-171-102-39.ip.telfort.nl) has quit (Read error: Connection reset by peer)
2012-08-03 11:42:58	<--	nemesit (~nemesit@fbivpn.informatik.uni-hamburg.de) has quit (Quit: Leaving...)
2012-08-03 11:43:10	-->	phe (~phe@wikimedia/phe) has joined ##c++
2012-08-03 11:43:14	<--	the|forever|kid (kvirc@117.198.39.106) has left ##c++
2012-08-03 11:43:19	-->	shundread (~shundread@a91-155-237-147.elisa-laajakaista.fi) has joined ##c++
2012-08-03 11:43:28	<--	jhunold (~hunold@p5B3166EE.dip.t-dialin.net) has quit
2012-08-03 11:44:31	-->	Patteh (~BOB@cpc9-hari15-2-0-cust297.20-2.cable.virginmedia.com) has joined ##c++
2012-08-03 11:45:15	<--	mikroflops (~yogurt@h-34-21.a238.priv.bahnhof.se) has quit (Ping timeout: 244 seconds)
2012-08-03 11:45:19	<--	mgaunard (~mgaunard@2a01:e35:8a4f:ffa0:8ce1:8a3a:8567:1647) has quit (Ping timeout: 246 seconds)
2012-08-03 11:46:18	-->	maum (~maum@210.119.60.152) has joined ##c++
2012-08-03 11:46:29	-->	roxlu_ (~roxlu@92.254.21.69) has joined ##c++
2012-08-03 11:46:30	roxlu_	hi
2012-08-03 11:46:44	roxlu_	Im mixing C/C++ and I've got a main.cpp which includes some C headers (in extern "C" {} blocks). But as soon as I include <vector> I get errors like error: `::mktime' has not been declared
2012-08-03 11:47:04	-->	voidcoder (~androirc@82-171-102-39.ip.telfort.nl) has joined ##c++
2012-08-03 11:47:07	<--	Chestal (~thilo@141.99.42.43) has quit (Ping timeout: 240 seconds)
2012-08-03 11:47:24	roxlu_	Google shows me some other people have had this problem. And it looks like a name clash with ctime and size_t, but I'm wondering how to fix this
2012-08-03 11:47:25	-->	mikroflops (~yogurt@h-34-21.a238.priv.bahnhof.se) has joined ##c++
2012-08-03 11:48:06	-->	L3thal (~quassel@41.44.136.28) has joined ##c++
2012-08-03 11:48:06	<--	voidcoder (~androirc@82-171-102-39.ip.telfort.nl) has quit (Client Quit)
2012-08-03 11:48:25	-->	voidcoder (~androirc@82-171-102-39.ip.telfort.nl) has joined ##c++
2012-08-03 11:49:13	-->	Chestal (~thilo@141.99.42.43) has joined ##c++
2012-08-03 11:49:54	-->	canihazit (aintelliny@cable-prv-fe63dd00-113.dhcp.inet.fi) has joined ##c++
2012-08-03 11:50:09	-->	Zcvzyvw_ (~nooblet@182.54.161.8) has joined ##c++
2012-08-03 11:50:12	-->	lib_ (~lib@p5B2DE2DF.dip.t-dialin.net) has joined ##c++
2012-08-03 11:50:13	-->	shintah| (~oer894n@m37-2-208-20.cust.tele2.se) has joined ##c++
2012-08-03 11:50:40	-->	glenfe_ (~glen@c-76-28-199-49.hsd1.wa.comcast.net) has joined ##c++
2012-08-03 11:50:50	<--	L3thal_ (~quassel@41.44.152.200) has quit (Ping timeout: 248 seconds)
2012-08-03 11:51:41	<--	Youka (~youka@dslb-088-069-129-220.pools.arcor-ip.net) has quit (Ping timeout: 244 seconds)
2012-08-03 11:51:41	<--	battlehands (battlehand@cpe-24-243-3-73.satx.res.rr.com) has quit (Ping timeout: 244 seconds)
2012-08-03 11:51:58	-->	pk47 (~pk47@pcfr33.physik.uni-freiburg.de) has joined ##c++
2012-08-03 11:52:00	-->	Lillia7_ (~lillia7@6abb386d.t-net.ne.jp) has joined ##c++
2012-08-03 11:52:20	-->	toytoy_ (~toytoy@49.145.103.151) has joined ##c++
2012-08-03 11:52:49	-->	Patfeesh|SC2 (~BOB@cpc9-hari15-2-0-cust297.20-2.cable.virginmedia.com) has joined ##c++
2012-08-03 11:52:52	-->	battlehands (battlehand@cpe-24-243-3-73.satx.res.rr.com) has joined ##c++
2012-08-03 11:53:16	-->	tapas_ (~tapas@static.231.2.63.178.clients.your-server.de) has joined ##c++
2012-08-03 11:53:35	-->	GrecKo (~quassel@ks26322.kimsufi.com) has joined ##c++
2012-08-03 11:53:38	-->	nierob_ (JNowacki@nat/trolltech/session) has joined ##c++
2012-08-03 11:53:43	<--	rdragon (~asd345@75.85.169.182) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:43	<--	glenfe (~glen@unaffiliated/glenfe) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:43	<--	nchaimov (~nchaimov@c-71-59-194-22.hsd1.or.comcast.net) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:43	<--	foo357 (88a3cb06@gateway/web/freenode/ip.136.163.203.6) has quit (Ping timeout: 245 seconds)
2012-08-03 11:53:43	<--	HilltopView (4c1ed23d@gateway/web/freenode/ip.76.30.210.61) has quit (Ping timeout: 245 seconds)
2012-08-03 11:53:44	<--	Stryyker (stryyke1@about/windows/staff/stryyker) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:44	<--	marga (~marga@nereida.gnuservers.com.ar) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:44	<--	ShawnWhite (~capnrat@62.116.219.97) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:44	<--	jesuisuntorrent (~imatorren@c75.152.27-202.clta.globetrotter.net) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:44	<--	average_drifter (~un_golan@188.26.210.56) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:44	<--	roxlu_ (~roxlu@92.254.21.69) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	Patteh (~BOB@cpc9-hari15-2-0-cust297.20-2.cable.virginmedia.com) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	xormor (~xormor@87-95-27-167.bb.dnainternet.fi) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	Airells (~as@avi122.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	vsayer (~vsayer@c-98-207-60-159.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	KoVadim (~Vadim@kostina.tenet.odessa.ua) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	atubbs (~atubbs@ool-43560858.dyn.optonline.net) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	telexicon (~telexicon@unaffiliated/chowmeined) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	d3x0r (~d3x0r@ip70-173-44-149.lv.lv.cox.net) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	BoAnd (~BoAnd@0805ds3-abc.0.fullrate.dk) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	chewyDelicious (~nooblet@182.54.161.8) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	mulvane (~mulvane@freebsd/user/mulvane) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	f47h3r (~f47h3r@unaffiliated/f47h3r) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	ChibaPet (~ChibaPet@fsf/member/chibapet) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	ReachingFarr (~ReachingF@esl.cs.colorado.edu) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	r126l (~ruwin126@120.142.67.254) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	Nik05 (~Nik05@nb-fmf82.fmnsedu.rug.nl) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	Irishmanluke (~lbb29@dunx1.irt.drexel.edu) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:45	<--	shundread (~shundread@a91-155-237-147.elisa-laajakaista.fi) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	phe (~phe@wikimedia/phe) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	spobat (~lib@p5B2DE2DF.dip.t-dialin.net) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	haxi (~anonycul@lan31-1-81-56-82-105.fbx.proxad.net) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	jrickman (~jrickman@unaffiliated/jrickman) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	shintah (~oer894n@m37-2-208-20.cust.tele2.se) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	NinjaPenguin (~nnscript@cable-prv-fe63dd00-113.dhcp.inet.fi) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	reels (~reels@p5B071DA1.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	pilgrum (~pilgrum@cpe-66-74-181-240.socal.res.rr.com) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	torsan_ (~torsan@173.227.63.254) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	kerrick (~kerrick@rrcs-97-79-174-130.sw.biz.rr.com) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	fisted (~fisted@unaffiliated/fisted) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	HerzogDeXtEr (~Flex@i59F6CFE9.versanet.de) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	dardevelin (~dardeveli@a81-84-114-53.cpe.netcabo.pt) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	FabTG (~ftg@192.233.0.109.rev.sfr.net) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	fighterjet (~fsm@95.211.13.35) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	Programmer_ (~khaotic@unaffiliated/khaotic) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	sporous (~sporous@antispammeta/bot/irssi/sporous) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	gerrrt (~gert@84-50-202-129-dsl.est.estpak.ee) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	radiofree (~radiofree@50-57-85-40.static.cloud-ips.com) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	GeorgeH (~George@c-69-141-105-145.hsd1.nj.comcast.net) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	du|dx_ (~du|dx@184-227-48-25.pools.spcsdns.net) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:45	<--	Dolan_pls (~Maser@unaffiliated/maser) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:46	<--	BlastHardcheese (chris@pdpc/supporter/active/blasthardcheese) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:46	<--	tapas (~tapas@static.231.2.63.178.clients.your-server.de) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:46	<--	Martty (~martty@unaffiliated/martty) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:46	-->	rdragno (~asd345@75.85.169.182) has joined ##c++
2012-08-03 11:53:46	-->	torsan (~torsan@173.227.63.254) has joined ##c++
2012-08-03 11:53:46	-->	ReachingFarr (~ReachingF@esl.cs.colorado.edu) has joined ##c++
2012-08-03 11:53:47	--	shintah| is now known as shintah
2012-08-03 11:53:53	-->	GeorgeH_ (~George@c-69-141-105-145.hsd1.nj.comcast.net) has joined ##c++
2012-08-03 11:53:54	-->	L3thal__ (~quassel@41.44.136.28) has joined ##c++
2012-08-03 11:53:54	--	gnathan87 is now known as gnathan
2012-08-03 11:53:54	<--	MissionCritical (~MissionCr@58-6-187-178.dyn.iinet.net.au) has quit (Excess Flood)
2012-08-03 11:53:55	<--	GrecKo_ (~quassel@ks26322.kimsufi.com) has quit (Read error: Connection reset by peer)
2012-08-03 11:53:55	qdii	roxlu_, could you show us the log of the compilation?
2012-08-03 11:53:55	qdii	as well as the sources, if not too long
2012-08-03 11:53:55	-->	Youka2 (~youka@dslb-088-069-129-220.pools.arcor-ip.net) has joined ##c++
2012-08-03 11:53:55	-->	ineb_ (~ineb@flnb-5f770859.pool.mediaWays.net) has joined ##c++
2012-08-03 11:53:56	-->	gert (~gert@84-50-202-129-dsl.est.estpak.ee) has joined ##c++
2012-08-03 11:53:56	<--	L3thal (~quassel@41.44.136.28) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	mikroflops (~yogurt@h-34-21.a238.priv.bahnhof.se) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	toytoy (~toytoy@unaffiliated/t0yt0y) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	nierob (JNowacki@nat/trolltech/x-ilgegbatrojezbmo) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	ineb (~ineb@flnb-5f770859.pool.mediaWays.net) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	zeleni_zub (~zz@195.178.42.82) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	Mnabil (~sabayonus@41.234.70.40) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	Lillia7 (~lillia7@6abb386d.t-net.ne.jp) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	darkc0met (darkcomet@gateway/shell/trekweb.org/x-ybwufjqyzffeypwx) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	evelyette (~eleanor@BSN-95-233-106.dsl.siol.net) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	wting (~wting@ps95950.dreamhost.com) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	Twey (~Twey@unaffiliated/twey) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	Bwild (~irc@netblock-75-79-22-130.dslextreme.com) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	phschwartz (piken@nat/hpccsystems.com/x-wrmlhqmbfzzgeuqt) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	szr (~s_r@unaffiliated/szr) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	K1rk (~Kirk@kirkisawesome.excelsior.epecweb.com) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	txomon|home (~txomon@unaffiliated/txomon) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	teotwaki (~slau@Maemo/community/contributor/crashanddie) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	ofan (~ofan@unaffiliated/ofan) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	Nach0z (~nach0z@unaffiliated/nach0z) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	<--	trigen (~MSX@devvers.tweaknet.net) has quit (Ping timeout: 244 seconds)
2012-08-03 11:53:56	-->	Stryyker (stryyke1@ppp118-208-238-183.lns20.hba2.internode.on.net) has joined ##c++
2012-08-03 11:53:56	<--	Stryyker (stryyke1@ppp118-208-238-183.lns20.hba2.internode.on.net) has quit (Changing host)
2012-08-03 11:53:56	-->	Stryyker (stryyke1@about/windows/staff/stryyker) has joined ##c++
2012-08-03 11:53:56	<--	arvind_khadri (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:56	<--	jem777 (~jem@ti0021a380-dhcp0217.bb.online.no) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:56	<--	archypetro (~hagrid@unaffiliated/archangelpetro) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:56	<--	lolwat (~lolwat@60.103.125.91.dyn.plus.net) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:56	<--	moeSeth (u1029@gateway/web/irccloud.com/x-azryduwgqywopbpy) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:56	<--	dijital1 (~bob@pdpc/supporter/active/dijital1) has quit (Ping timeout: 240 seconds)
2012-08-03 11:53:56	-->	ShawnWhite (~capnrat@62.116.219.97) has joined ##c++
2012-08-03 11:53:56	-->	BoAnd (~BoAnd@0805ds3-abc.0.fullrate.dk) has joined ##c++
2012-08-03 11:53:57	-->	atubbs (~atubbs@ool-43560858.dyn.optonline.net) has joined ##c++
2012-08-03 11:53:57	-->	fighterjet (~fsm@95.211.13.35) has joined ##c++
2012-08-03 11:53:57	-->	nchaimov (~nchaimov@c-71-59-194-22.hsd1.or.comcast.net) has joined ##c++
2012-08-03 11:53:57	-->	pilgrum (~pilgrum@cpe-66-74-181-240.socal.res.rr.com) has joined ##c++
2012-08-03 11:53:57	-->	sporous (~sporous@antispammeta/bot/irssi/sporous) has joined ##c++
2012-08-03 11:53:57	-->	telexicon (~telexicon@unaffiliated/chowmeined) has joined ##c++
2012-08-03 11:54:02	<--	donwilliam (~donwillia@x1-6-00-24-b2-9f-a5-e0.k1073.webspeed.dk) has quit (Ping timeout: 244 seconds)
2012-08-03 11:54:02	<--	efjboss (~nova@kumo.kassala.de) has quit (Ping timeout: 244 seconds)
2012-08-03 11:54:03	-->	marga (~marga@nereida.gnuservers.com.ar) has joined ##c++
2012-08-03 11:54:05	<--	foor (~user@124.254.4.91) has left ##c++ ("ERC Version 5.3 (IRC client for Emacs)")
2012-08-03 11:54:07	<--	nullslash (~nullslash@pdpc/supporter/student/nullslash) has quit (Ping timeout: 240 seconds)
2012-08-03 11:54:07	<--	xxtjaxx (~xxtjaxx@kde/developer/marschke) has quit (Ping timeout: 240 seconds)
2012-08-03 11:54:07	<--	reko_t (reko@reko.soldat.fi) has quit (Ping timeout: 240 seconds)
2012-08-03 11:54:09	-->	Irishmanluke (~lbb29@144.118.24.33) has joined ##c++
2012-08-03 11:54:11	-->	f47h3r (~f47h3r@69.26.207.101) has joined ##c++
2012-08-03 11:54:11	-->	BlastHardcheese (chris@pdpc/supporter/active/blasthardcheese) has joined ##c++
2012-08-03 11:54:11	-->	Nach0z (~nach0z@c-67-191-194-41.hsd1.ga.comcast.net) has joined ##c++
2012-08-03 11:54:12	-->	efjboss (~nova@kumo.kassala.de) has joined ##c++
2012-08-03 11:54:14	-->	reko_t (reko@reko.soldat.fi) has joined ##c++
2012-08-03 11:54:16	-->	Programmer_ (~khaotic@unaffiliated/khaotic) has joined ##c++
2012-08-03 11:54:17	-->	wting (~wting@ps95950.dreamhost.com) has joined ##c++
2012-08-03 11:54:18	-->	donwilliam (~donwillia@x1-6-00-24-b2-9f-a5-e0.k1073.webspeed.dk) has joined ##c++
2012-08-03 11:54:18	-->	mulvane (~mulvane@freebsd/user/mulvane) has joined ##c++
2012-08-03 11:54:21	-->	vsayer (~vsayer@c-98-207-60-159.hsd1.ca.comcast.net) has joined ##c++
2012-08-03 11:54:22	-->	Bwild (~irc@netblock-75-79-22-130.dslextreme.com) has joined ##c++
2012-08-03 11:54:22	-->	szr (~s_r@unaffiliated/szr) has joined ##c++
2012-08-03 11:54:23	-->	ChibaPet (~ChibaPet@cocytus.blisses.org) has joined ##c++
2012-08-03 11:54:23	<--	ChibaPet (~ChibaPet@cocytus.blisses.org) has quit (Changing host)
2012-08-03 11:54:23	-->	ChibaPet (~ChibaPet@fsf/member/chibapet) has joined ##c++
2012-08-03 11:54:23	-->	du|dx (~du|dx@184-227-48-25.pools.spcsdns.net) has joined ##c++
2012-08-03 11:54:23	-->	kerrick (~kerrick@rrcs-97-79-174-130.sw.biz.rr.com) has joined ##c++
2012-08-03 11:54:25	-->	xormor (~xormor@87-95-27-167.bb.dnainternet.fi) has joined ##c++
2012-08-03 11:54:27	-->	jrickman (~jrickman@h7.48.91.75.dynamic.ip.windstream.net) has joined ##c++
2012-08-03 11:54:30	<--	pilgrum (~pilgrum@cpe-66-74-181-240.socal.res.rr.com) has quit (Client Quit)
2012-08-03 11:54:32	-->	roxlu (~roxlu@92.254.21.69) has joined ##c++
2012-08-03 11:54:33	-->	average_drifter (~un_golan@188.26.210.56) has joined ##c++
2012-08-03 11:54:35	-->	trigen (~MSX@2001:0:5ef5:79fd:38c3:34a5:2bd6:7949) has joined ##c++
2012-08-03 11:54:37	-->	radiofree (~radiofree@50-57-85-40.static.cloud-ips.com) has joined ##c++
2012-08-03 11:54:38	-->	Nik05 (~Nik05@nb-fmf82.fmnsedu.rug.nl) has joined ##c++
2012-08-03 11:54:40	-->	r126l (~ruwin126@120.142.67.254) has joined ##c++
2012-08-03 11:54:40	-->	haxi (~anonycul@lan31-1-81-56-82-105.fbx.proxad.net) has joined ##c++
2012-08-03 11:54:44	-->	MulleDK19 (~MulleDK19@31.185.89.154) has joined ##c++
2012-08-03 11:54:49	-->	xxtjaxx (~xxtjaxx@dl360.ein-elch.de) has joined ##c++
2012-08-03 11:54:51	<--	kcj (~casey@unaffiliated/kcj) has quit (Excess Flood)
2012-08-03 11:54:55	-->	Martty (~martty@lion.puttynuts.com) has joined ##c++
2012-08-03 11:55:03	<--	toytoy_ (~toytoy@49.145.103.151) has quit (Changing host)
2012-08-03 11:55:03	-->	toytoy_ (~toytoy@unaffiliated/t0yt0y) has joined ##c++
2012-08-03 11:55:04	<--	nierob_ (JNowacki@nat/trolltech/session) has quit (Changing host)
2012-08-03 11:55:04	-->	nierob_ (JNowacki@nat/trolltech/x-fttcwfmzqsaityus) has joined ##c++
2012-08-03 11:55:04	-->	jesuisuntorrent (~imatorren@c75.152.27-202.clta.globetrotter.net) has joined ##c++
2012-08-03 11:55:07	-->	K1rk (~Kirk@kirkisawesome.excelsior.epecweb.com) has joined ##c++
2012-08-03 11:55:09	<--	jrickman (~jrickman@h7.48.91.75.dynamic.ip.windstream.net) has quit (Changing host)
2012-08-03 11:55:09	-->	jrickman (~jrickman@unaffiliated/jrickman) has joined ##c++
2012-08-03 11:55:12	-->	nullslash (~nullslash@cpe-24-90-157-7.nyc.res.rr.com) has joined ##c++
2012-08-03 11:55:12	-->	darkc0met (darkcomet@gateway/shell/trekweb.org/x-fqdkutiecdjxiwqg) has joined ##c++
2012-08-03 11:55:12	<--	xxtjaxx (~xxtjaxx@dl360.ein-elch.de) has quit (Changing host)
2012-08-03 11:55:12	-->	xxtjaxx (~xxtjaxx@kde/developer/marschke) has joined ##c++
2012-08-03 11:55:12	-->	Airells (~as@avi122.neoplus.adsl.tpnet.pl) has joined ##c++
2012-08-03 11:55:13	-->	Yaweh (~Maser@cpe-76-180-210-184.buffalo.res.rr.com) has joined ##c++
2012-08-03 11:55:13	--	Yaweh is now known as Dolan_pls
2012-08-03 11:55:15	<--	nullslash (~nullslash@cpe-24-90-157-7.nyc.res.rr.com) has quit (Changing host)
2012-08-03 11:55:15	-->	nullslash (~nullslash@pdpc/supporter/student/nullslash) has joined ##c++
2012-08-03 11:55:16	<--	Dolan_pls (~Maser@cpe-76-180-210-184.buffalo.res.rr.com) has quit (Changing host)
2012-08-03 11:55:16	-->	Dolan_pls (~Maser@unaffiliated/maser) has joined ##c++
2012-08-03 11:55:17	-->	FabTG (~ftg@192.233.0.109.rev.sfr.net) has joined ##c++
2012-08-03 11:55:17	--	toytoy_ is now known as toytoy
2012-08-03 11:55:19	-->	szr- (~s_r@unaffiliated/szr) has joined ##c++
2012-08-03 11:55:19	<--	szr- (~s_r@unaffiliated/szr) has quit (Read error: Connection reset by peer)
2012-08-03 11:55:22	-->	reels (~reels@p5B071DA1.dip0.t-ipconnect.de) has joined ##c++
2012-08-03 11:55:22	-->	teotwaki (~slau@Maemo/community/contributor/crashanddie) has joined ##c++
2012-08-03 11:55:28	-->	phe (~phe@wikimedia/phe) has joined ##c++
2012-08-03 11:55:32	-->	KoVadim (~Vadim@195.138.64.24) has joined ##c++
2012-08-03 11:55:39	-->	evelyette (~eleanor@BSN-95-233-106.dsl.siol.net) has joined ##c++
2012-08-03 11:55:43	-->	Mnabil (~sabayonus@41.234.70.40) has joined ##c++
2012-08-03 11:55:44	-->	dardevelin (~dardeveli@a81-84-114-53.cpe.netcabo.pt) has joined ##c++
2012-08-03 11:55:45	-->	shundread (~shundread@a91-155-237-147.elisa-laajakaista.fi) has joined ##c++
2012-08-03 11:55:46	<--	caveat- (hoax@gateway/shell/bshellz.net/x-axphbeaauqkamzgy) has quit (Quit: leaving)
2012-08-03 11:55:52	-->	ofan (~ofan@unaffiliated/ofan) has joined ##c++
2012-08-03 11:55:56	-->	jem777 (~jem@ti0021a380-dhcp0217.bb.online.no) has joined ##c++
2012-08-03 11:56:04	-->	phschwartz (piken@nat/hpccsystems.com/x-ozrbwjkstjksscei) has joined ##c++
2012-08-03 11:56:21	-->	kcj (~casey@unaffiliated/kcj) has joined ##c++
2012-08-03 11:56:24	-->	HerzogDeXtEr (~Flex@i59F6CFE9.versanet.de) has joined ##c++
2012-08-03 11:56:28	-->	kkimlabs (~kkimlabs@VPNRASA-WLAN-01.NATPOOL.NYU.EDU) has joined ##c++
2012-08-03 11:56:31	-->	Nephro (~Dmitry@80.233.231.12) has joined ##c++
2012-08-03 11:56:42	-->	txomon|home (~txomon@unaffiliated/txomon) has joined ##c++
2012-08-03 11:57:01	-->	caveat- (hoax@gateway/shell/bshellz.net/x-sjrwykccmbwddvxw) has joined ##c++
2012-08-03 11:57:41	<--	Obfuscate (~keii@ip98-176-16-175.sd.sd.cox.net) has quit (Read error: Operation timed out)
2012-08-03 11:57:55	<--	m3thyl (~m3th@cpe-76-169-228-195.socal.res.rr.com) has quit (Remote host closed the connection)
2012-08-03 11:57:58	-->	fisted (~fisted@unaffiliated/fisted) has joined ##c++
2012-08-03 11:58:11	-->	m3thyl (~m3th@cpe-76-169-228-195.socal.res.rr.com) has joined ##c++
2012-08-03 11:58:16	-->	dijital1 (~bob@pdpc/supporter/active/dijital1) has joined ##c++
2012-08-03 11:58:29	<--	Patfeesh|SC2 (~BOB@cpc9-hari15-2-0-cust297.20-2.cable.virginmedia.com) has quit
2012-08-03 11:58:38	<--	Neptu (~Neptu@c-af90e255.113-1-64736c14.cust.bredbandsbolaget.se) has quit (Remote host closed the connection)
2012-08-03 11:58:57	-->	Twey (~Twey@unaffiliated/twey) has joined ##c++
2012-08-03 11:59:34	-->	mgaunard_ (~mgaunard@193.55.24.4) has joined ##c++
2012-08-03 12:00:58	<--	kkimlabs (~kkimlabs@VPNRASA-WLAN-01.NATPOOL.NYU.EDU) has quit (Ping timeout: 248 seconds)
2012-08-03 12:02:36	<--	caveat- (hoax@gateway/shell/bshellz.net/x-sjrwykccmbwddvxw) has quit (Quit: leaving)
2012-08-03 12:03:15	-->	caveat- (hoax@gateway/shell/bshellz.net/x-iiqomfaglosashbd) has joined ##c++
2012-08-03 12:04:07	litb	added a new troll question http://stackoverflow.com/questions/11794318/how-to-avoid-voida-cast-causing-side-effects
2012-08-03 12:05:24	<--	mire_ (~mire@85.222.222.254) has quit (Ping timeout: 248 seconds)
2012-08-03 12:06:01	<--	nchaimov (~nchaimov@c-71-59-194-22.hsd1.or.comcast.net) has quit (Read error: Connection reset by peer)
2012-08-03 12:06:04	-->	MulleDK20 (~MulleDK19@31.185.89.154) has joined ##c++
2012-08-03 12:06:25	-->	telexicon_ (~telexicon@c-67-160-124-195.hsd1.wa.comcast.net) has joined ##c++
2012-08-03 12:06:38	-->	nchaimov (~nchaimov@c-71-59-194-22.hsd1.or.comcast.net) has joined ##c++
2012-08-03 12:07:28	<--	MulleDK19 (~MulleDK19@31.185.89.154) has quit (Ping timeout: 244 seconds)
2012-08-03 12:07:37	-->	MissionCritical (~MissionCr@unaffiliated/missioncritical) has joined ##c++
2012-08-03 12:07:47	-->	HerzogDeXtEr1 (~Flex@i59F6CFE9.versanet.de) has joined ##c++
2012-08-03 12:07:48	ville	 what's so troll about that?
2012-08-03 12:08:09	<--	libertas (1200@41.230.28.37.rev.vodafone.pt) has quit (Ping timeout: 255 seconds)
2012-08-03 12:08:37	<--	HerzogDeXtEr (~Flex@i59F6CFE9.versanet.de) has quit (Ping timeout: 240 seconds)
2012-08-03 12:09:01	<--	telexicon (~telexicon@unaffiliated/chowmeined) has quit (Ping timeout: 244 seconds)
2012-08-03 12:09:03	-->	moeSeth (u1029@gateway/web/irccloud.com/x-hcmghjelvnnuszga) has joined ##c++
2012-08-03 12:09:14	litb	ville, http://gcc.gnu.org/bugzilla/show_bug.cgi?id=54165
2012-08-03 12:09:51	-->	libertas (1200@210.218.28.37.rev.vodafone.pt) has joined ##c++
2012-08-03 12:10:09	-->	funktronic (~funktroni@unaffiliated/funktronic) has joined ##c++
2012-08-03 12:10:24	<--	m3thyl (~m3th@cpe-76-169-228-195.socal.res.rr.com) has quit (Remote host closed the connection)
2012-08-03 12:10:46	<--	Airells (~as@avi122.neoplus.adsl.tpnet.pl) has quit (Changing host)
2012-08-03 12:10:47	-->	Airells (~as@unaffiliated/airells) has joined ##c++
2012-08-03 12:10:47	tapas_	omg
2012-08-03 12:10:51	ville	litb: seems funny that it is specced like that
2012-08-03 12:11:02	-->	m3thyl (~m3th@76.169.228.195) has joined ##c++
2012-08-03 12:11:07	litb	hmm
2012-08-03 12:11:32	<--	Airells (~as@unaffiliated/airells) has quit (Quit: Airells)
2012-08-03 12:11:37	-->	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has joined ##c++
2012-08-03 12:11:49	<--	caveat- (hoax@gateway/shell/bshellz.net/x-iiqomfaglosashbd) has quit (Quit: leaving)
2012-08-03 12:12:38	<--	donwilliam (~donwillia@x1-6-00-24-b2-9f-a5-e0.k1073.webspeed.dk) has quit (Ping timeout: 245 seconds)
2012-08-03 12:12:46	Bigcheese	litb: orly?
2012-08-03 12:13:04	-->	mikroflops (~yogurt@h-34-21.a238.priv.bahnhof.se) has joined ##c++
2012-08-03 12:13:07	Bigcheese	Also
2012-08-03 12:13:18	ville	litb: or that bug report is also a troll because there is no reference to the standard?
2012-08-03 12:13:19	-->	Airells (~as@unaffiliated/airells) has joined ##c++
2012-08-03 12:13:20	-->	karakedi (~eAC53C340@unaffiliated/orphan) has joined ##c++
2012-08-03 12:13:31	litb	Bigcheese will now come up with clang testcases
2012-08-03 12:13:36	tapas_	is the new standard available publically?
2012-08-03 12:13:39	Bigcheese	I need to post my question about char*.
2012-08-03 12:13:41	ville	tapas_: sort of
2012-08-03 12:13:43	-->	zeleni_zub (~zz@195.178.42.82) has joined ##c++
2012-08-03 12:13:45	ville	!give tapas_ std
2012-08-03 12:13:46	nolyc	tapas_: ISO restricts distribution of C++ standards and recent drafts. You can buy C++11 at http://tinyurl.com/isocxx11 for ~290 EUR, or C++03 at http://tinyurl.com/isocxx03 for 30 USD. The least outdated freely available draft is n3242, downloadable at http://tinyurl.com/4hsj7sd .
2012-08-03 12:13:49	<--	mulvane (~mulvane@freebsd/user/mulvane) has quit (Excess Flood)
2012-08-03 12:13:54	ville	!draft
2012-08-03 12:13:55	nolyc	http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3376.pdf
2012-08-03 12:13:57	litb	Bigcheese, hold on, gcc has funny bugs there
2012-08-03 12:14:01	tapas_	ville: ty
2012-08-03 12:14:12	Bigcheese	I still don't understand how you can do file IO with it...
2012-08-03 12:14:13	litb	char *x =  0 + "oh boy";   // accepts this
2012-08-03 12:14:16	ville	tapas_: n3242 is before the standard, n3376 is after the standard.
2012-08-03 12:14:21	-->	caveat- (hoax@gateway/shell/bshellz.net/x-xclznnyajdaqviui) has joined ##c++
2012-08-03 12:14:27	-->	mulvane (~mulvane@mulicar.com) has joined ##c++
2012-08-03 12:14:27	<--	mulvane (~mulvane@mulicar.com) has quit (Changing host)
2012-08-03 12:14:27	-->	mulvane (~mulvane@freebsd/user/mulvane) has joined ##c++
2012-08-03 12:14:48	litb	ohh i thought you was about to post such things now
2012-08-03 12:14:52	litb	i'm disappointed :(
2012-08-03 12:14:58	Bigcheese	:P
2012-08-03 12:15:10	Bigcheese	The set of values that a signed char can represent is allowed to be less than an unsigned char.
2012-08-03 12:15:19	Bigcheese	Kind of ;
2012-08-03 12:15:21	Bigcheese	;/*
2012-08-03 12:15:38	Bigcheese	Although apparently all file IO is about "characters"
2012-08-03 12:15:39	maum	how to set the file name in fopen() ? file name  will be 1_test.txt ...2_test.txt  so it contains flexible number.
2012-08-03 12:15:40	xormor	Bigcheese, -1,-2, -3
2012-08-03 12:16:02	Bigcheese	xormor: sign and magnitude.
2012-08-03 12:16:11	litb	Bigcheese, do you have this in mind? http://stackoverflow.com/questions/277655/why-do-c-streams-use-char-instead-of-unsigned-char
2012-08-03 12:16:13	Bigcheese	There's no such thing as an integral type -1
2012-08-03 12:16:17	xormor	Bigcheese, a-ha.
2012-08-03 12:16:26	xormor	Bigcheese, yes :)
2012-08-03 12:16:28	Bigcheese	litb: yeah.
2012-08-03 12:16:32	Bigcheese	-0*
2012-08-03 12:16:35	xormor	Bigcheese, now I understood what you mean :)
2012-08-03 12:16:38	litb	great, now you don't have to ask anymore xD
2012-08-03 12:16:43	-->	Astus (~Astus@79.117.191.227) has joined ##c++
2012-08-03 12:16:45	SaBer	ville: I though n3337 was the latest before the standard
2012-08-03 12:17:28	Bigcheese	litb: the answer is not good.
2012-08-03 12:17:43	Bigcheese	It punts it off to the implementation.
2012-08-03 12:17:52	Bigcheese	I care about what makes it portable.
2012-08-03 12:17:56	 *	litb is running in circles waiting for Bigcheese's comments
2012-08-03 12:17:58	Bigcheese	Because honestly I don't think it is.
2012-08-03 12:18:00	ville	SaBer: n3290 became the standard and was removed from being available.
2012-08-03 12:18:11	ville	SaBer: that's the way I recall it anyway.
2012-08-03 12:18:35	SaBer	ville: yes, you are right 3337 is "too new"
2012-08-03 12:19:01	Bigcheese	litb: write 256 distict values to a file. Read those values back and print them.
2012-08-03 12:19:09	Bigcheese	How many distict values are printed?
2012-08-03 12:19:21	ville	15
2012-08-03 12:19:40	litb	256 on two's complement!
2012-08-03 12:19:41	-->	ircnode0 (qnguyen@kosh.org.aalto.fi) has joined ##c++
2012-08-03 12:19:44	Bigcheese	It is at least the size of the basic character set.
2012-08-03 12:19:54	<--	dhruvasagar (~dhruvasag@122.167.80.117) has quit (Ping timeout: 246 seconds)
2012-08-03 12:19:56	litb	or if char is unsigned xD
2012-08-03 12:20:29	litb	the spec requires char to have no traps
2012-08-03 12:20:38	-->	donwilliam (~donwillia@x1-6-00-24-b2-9f-a5-e0.k1073.webspeed.dk) has joined ##c++
2012-08-03 12:20:41	litb	so we are guaranteed to have at least 255 values I think
2012-08-03 12:20:59	Bigcheese	I don't see that.
2012-08-03 12:21:03	-->	dhruvasagar (~dhruvasag@122.167.80.117) has joined ##c++
2012-08-03 12:21:04	-->	Tidus- (~Tidus@50.7.20.83) has joined ##c++
2012-08-03 12:21:19	litb	for one complement and sign magnitude we have 255 different values at the worst.
2012-08-03 12:21:33	Bigcheese	The tighest requirement I see is that you have to be able to represent UTF-8
2012-08-03 12:21:39	<--	Tidus- (~Tidus@50.7.20.83) has quit (Client Quit)
2012-08-03 12:21:48	-->	Tidus- (~Tidus@50.7.20.83) has joined ##c++
2012-08-03 12:22:02	Bigcheese	Other than that the definition of a character is not really there...
2012-08-03 12:22:36	Bigcheese	litb: yeah, but the standard doesn't preclude other encodings.
2012-08-03 12:22:44	Bigcheese	representations*
2012-08-03 12:22:45	litb	only C does
2012-08-03 12:23:02	litb	i guess an impl that is compatible with c++ and not with C isn't practical
2012-08-03 12:23:04	litb	so we can ignore it
2012-08-03 12:23:24	Bigcheese	I don't like doing that :P
2012-08-03 12:23:41	Bigcheese	Oh wait, you asked that question.
2012-08-03 12:23:44	Bigcheese	lol
2012-08-03 12:23:54	litb	lulz
2012-08-03 12:23:57	<--	paullik (~paullik@unaffiliated/paullik) has quit (Read error: Operation timed out)
2012-08-03 12:24:00	<--	m3thyl (~m3th@76.169.228.195) has quit (Remote host closed the connection)
2012-08-03 12:24:29	-->	Patteh (~BOB@cpc9-hari15-2-0-cust297.20-2.cable.virginmedia.com) has joined ##c++
2012-08-03 12:24:55	Bigcheese	This just really annoys me.
2012-08-03 12:25:11	Bigcheese	Because something as simple as binary file io relies on implementation defined behaivor.
2012-08-03 12:25:23	<--	xunie-laptop (~karl@unaffiliated/xunie) has quit (Remote host closed the connection)
2012-08-03 12:26:23	-->	m3thyl (~m3th@76.169.228.195) has joined ##c++
2012-08-03 12:26:51	-->	djszapi (~lpapp@kde/developer/lpapp) has joined ##c++
2012-08-03 12:27:03	-->	iiyo (~iiyo@cpc1-linc6-0-0-cust736.12-1.cable.virginmedia.com) has joined ##c++
2012-08-03 12:27:04	Bigcheese	It's also funny that char, unsigned char, and signed char are three distict types.
2012-08-03 12:27:13	<--	karakedi (~eAC53C340@unaffiliated/orphan) has quit (Ping timeout: 245 seconds)
2012-08-03 12:27:20	<--	Patteh (~BOB@cpc9-hari15-2-0-cust297.20-2.cable.virginmedia.com) has quit (Client Quit)
2012-08-03 12:27:22	litb	indeed
2012-08-03 12:27:34	litb	and char is not a signed integral type
2012-08-03 12:27:42	litb	still it can be signed
2012-08-03 12:27:48	<--	joel_falcou (joel_falco@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Ping timeout: 248 seconds)
2012-08-03 12:27:52	djszapi	Hi! If I have a struct which does not have constructors and destructors explicitely defined, will I get an emptied struct back with MyStruct() by using the default constructor? I mean it is the same as "memset(MyStructVariableName, 0, sizeof(MyStructVariableName)); ?
2012-08-03 12:27:56	<--	m3thyl (~m3th@76.169.228.195) has quit (Read error: Connection reset by peer)
2012-08-03 12:27:56	ville	it's difficult to avoid both under- and over-specifying at times
2012-08-03 12:28:21	ville	so rather error on under-specifying?
2012-08-03 12:28:21	litb	djszapi, yes you will
2012-08-03 12:28:23	litb	!next
2012-08-03 12:28:24	nolyc	Another satisfied customer, next!
2012-08-03 12:28:29	-->	joel_falcou (joel_falco@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2012-08-03 12:28:36	b_jonas	djszapi: no.
2012-08-03 12:28:53	djszapi	yes or no then ? :o I have not looked into the standard about this yet.
2012-08-03 12:28:58	Bigcheese	no
2012-08-03 12:28:59	ville	djszapi: no
2012-08-03 12:29:07	b_jonas	djszapi: for two reasons
2012-08-03 12:29:10	Bigcheese	I understand, I don't even know how I would specify it.
2012-08-03 12:29:33	-->	m3thyl (~m3th@cpe-76-169-228-195.socal.res.rr.com) has joined ##c++
2012-08-03 12:29:56	-->	nor5trom (~nor5trom@unaffiliated/nor5trom) has joined ##c++
2012-08-03 12:30:00	b_jonas	djszapi: for one, the constructor of your object will call the constructor of any class-typed members, which could be different than memset zero-initialization eg. for a vector or other complicated object,
2012-08-03 12:30:42	djszapi	true
2012-08-03 12:30:50	ville	b_jonas: or aggregate types that will get a "random" value
2012-08-03 12:30:58	ville	agggregate? err
2012-08-03 12:31:03	ville	scalar rather
2012-08-03 12:31:14	Bigcheese	unspecified value!
2012-08-03 12:31:24	Bigcheese	btw
2012-08-03 12:31:29	<--	dethredic (~phil@24-52-247-237.cable.teksavvy.com) has quit (Read error: Connection reset by peer)
2012-08-03 12:31:57	Bigcheese	From my understanding, if you added a constructor with an initlist of member(), member2(), ..., that would 0 init them, right?
2012-08-03 12:31:58	-->	Baum (~Baum@aFrtWEg.dhcp.studentenwerk-bielefeld.de) has joined ##c++
2012-08-03 12:32:03	-->	dethredic (~phil@24-52-247-237.cable.teksavvy.com) has joined ##c++
2012-08-03 12:32:04	ville	sure
2012-08-03 12:32:16	-->	dalaing (~dalaing@203-206-241-15.dyn.iinet.net.au) has joined ##c++
2012-08-03 12:32:23	orbitz	ville: babaganush
2012-08-03 12:32:43	djszapi	b_jonas: second reason?
2012-08-03 12:33:16	ville	orbitz: hippie vegetarian
2012-08-03 12:33:53	<--	LordShiva (~Shiva@212.200.54.115) has quit (Ping timeout: 245 seconds)
2012-08-03 12:34:03	orbitz	ville: i went to a czech restaurant the other day and someone i was with ordered a vegetarian plate and the wiater made a face and she asked if it wasn't any good and he sighed and said "well....it doesn't have any meat in it..."
2012-08-03 12:34:11	b_jonas	I think the second reason is that the generated constructor might not initialize scalar members (such as numbers and pointers), but I'm not sure about this
2012-08-03 12:34:11	-->	LordShiva (~Shiva@212.200.54.115) has joined ##c++
2012-08-03 12:34:16	<--	W0rmDrink (~iwana@unaffiliated/wormdrink) has quit (Ping timeout: 255 seconds)
2012-08-03 12:34:16	djszapi	right, instead of MyStruct() I could do {0}.
2012-08-03 12:34:26	ville	hah
2012-08-03 12:34:37	ville	b_jonas: it doesn't
2012-08-03 12:35:14	Nephro	what was the proper C++ to do upcasts?
2012-08-03 12:35:21	ville	downcasts?
2012-08-03 12:35:25	orbitz	left casts
2012-08-03 12:35:32	Bigcheese	!cast_dammit_cast
2012-08-03 12:35:34	nolyc	template <typename T, typename T2> T cast_dammit_cast(T2 what){ return *((T*) &what); }
2012-08-03 12:35:34	b_jonas	backwards casts
2012-08-03 12:35:41	Nephro	stop it you :D
2012-08-03 12:35:43	orbitz	which way is your tree facing?
2012-08-03 12:35:59	Bigcheese	Actually.
2012-08-03 12:36:03	Bigcheese	That is wrong!
2012-08-03 12:36:09	Bigcheese	It needs addressof
2012-08-03 12:36:30	ville	Nephro: do you draw your tree like normal in computer science or like stupid nature?
2012-08-03 12:36:36	b_jonas	orbitz: which tree? the tree of classes derived from a class, or the tree of base classes of a class?
2012-08-03 12:37:08	-->	wu_lmao (~wu_lmao@unaffiliated/wu-lmao/x-9069391) has joined ##c++
2012-08-03 12:37:19	Nephro	I am passing around pointers to objects, but the pointer type is not objects, but it's parent's(sorry for my english today). I need to access child's method and I don't remember the proper way to do that
2012-08-03 12:37:28	ville	Nephro: upcasts don't really need anything explicit. there's an implicit conversion from derived* to base*
2012-08-03 12:37:36	ville	Nephro: so downcast
2012-08-03 12:38:00	Nephro	oh, so I screwed up that term, ok, so downcast then
2012-08-03 12:38:01	ville	Nephro: dynamic_cast and check for 0 return value
2012-08-03 12:38:07	Nephro	thank you
2012-08-03 12:38:22	ville	or if you use references dynamic_cast will throw on failure
2012-08-03 12:38:24	djszapi	I presume it is just a styling question, or are there serious technical reasons behind that decision if I have four instances for a structure, and I would like to /re/-initialize them to zero after having some operations with them.
2012-08-03 12:38:47	djszapi	1) 4 memsets 2) separate zeroMyStruct const and then a = b = c = d = zeroMyStruct;
2012-08-03 12:39:02	djszapi	const MyStruct zeroMyStruct = {0};
2012-08-03 12:39:38	Bigcheese	Is it a standard-layout structure?
2012-08-03 12:39:50	litb	i draw it right-facing. so it's like a dead nature tree
2012-08-03 12:40:05	et	why not left-facing?
2012-08-03 12:40:13	-->	W0rmDrink (~iwana@unaffiliated/wormdrink) has joined ##c++
2012-08-03 12:40:18	Nephro	ville, I didn't understand where do I check for the return value. The operator returns an object instance
2012-08-03 12:40:27	Bigcheese	litb: minecraft can do that now!
2012-08-03 12:40:30	<--	molqr (~m@proxy.iitk.ac.in) has quit (Quit: Leaving)
2012-08-03 12:40:32	-->	hz (~hz@unaffiliated/hz) has joined ##c++
2012-08-03 12:40:33	et	Nephro: you had pointers before
2012-08-03 12:40:36	litb	ohhhhhhhhhh
2012-08-03 12:40:38	ville	Nephro: it returns a pointer or a reference depending which you are using
2012-08-03 12:40:41	-->	diverdude (~bdi@80-62-117-146-mobile.dk.customer.tdc.net) has joined ##c++
2012-08-03 12:41:07	Nephro	oh, right, excuse me
2012-08-03 12:41:14	diverdude	Hello. Is there a recommended hashtable implementation for c++ ?
2012-08-03 12:41:21	<--	haxi (~anonycul@lan31-1-81-56-82-105.fbx.proxad.net) has quit (Read error: Operation timed out)
2012-08-03 12:41:23	ville	!give diverdude std::unordered_map
2012-08-03 12:41:24	nolyc	diverdude: http://en.cppreference.com/w/cpp/container/unordered_map
2012-08-03 12:41:31	ville	!give diverdude std::map
2012-08-03 12:41:33	nolyc	diverdude: http://en.cppreference.com/w/cpp/container/map
2012-08-03 12:41:44	djszapi	any opinions?
2012-08-03 12:42:02	-->	Sachiru (Sachiru@120.29.82.138) has joined ##c++
2012-08-03 12:42:12	-->	CMoH (~cipi@78.96.83.205) has joined ##c++
2012-08-03 12:42:13	<--	CMoH (~cipi@78.96.83.205) has quit (Changing host)
2012-08-03 12:42:13	-->	CMoH (~cipi@unaffiliated/c-moh) has joined ##c++
2012-08-03 12:42:14	Bigcheese	djszapi: I asked a question.
2012-08-03 12:42:41	diverdude	ville:  thx
2012-08-03 12:42:54	djszapi	Bigcheese: right, I have thought, you were not speaking to me without highlighting.
2012-08-03 12:42:54	<--	pk47 (~pk47@pcfr33.physik.uni-freiburg.de) has quit (Remote host closed the connection)
2012-08-03 12:42:57	djszapi	http://msdn.microsoft.com/en-us/library/windows/desktop/ms684342%28v=vs.85%29.aspx -> for instance
2012-08-03 12:43:18	Bigcheese	That is standard-layout.
2012-08-03 12:43:36	Bigcheese	Just use memset.
2012-08-03 12:43:46	djszapi	what do you mean by standard layout?
2012-08-03 12:44:01	-->	schtobia (~quassel@80.154.27.214) has joined ##c++
2012-08-03 12:44:01	<--	schtobia (~quassel@80.154.27.214) has quit (Changing host)
2012-08-03 12:44:01	-->	schtobia (~quassel@piratenpartei/BY/schtobia) has joined ##c++
2012-08-03 12:44:05	ville	it's a new 11 term
2012-08-03 12:44:16	ville	!standard layout
2012-08-03 12:44:20	ville	failure
2012-08-03 12:44:31	-->	baedert (~baedert@dslb-088-067-067-227.pools.arcor-ip.net) has joined ##c++
2012-08-03 12:45:00	-->	bitlord (~bitlord@unaffiliated/bitlord) has joined ##c++
2012-08-03 12:46:48	<--	msk (~chatzilla@123.201.60.114) has quit (Ping timeout: 245 seconds)
2012-08-03 12:47:25	izhak	!standard template
2012-08-03 12:47:32	djszapi	why memset and not {0} with separate const variable?
2012-08-03 12:48:59	<--	schtobia (~quassel@piratenpartei/BY/schtobia) has quit (Quit: Bye!)
2012-08-03 12:49:00	-->	scroverty (~billhainh@117.5.37.40) has joined ##c++
2012-08-03 12:49:04	-->	msk (~chatzilla@123.201.60.114) has joined ##c++
2012-08-03 12:49:48	Bigcheese	Because it's just... weird.
2012-08-03 12:50:14	-->	magellanicloud (~magellani@HSI-KBW-091-089-175-206.hsi2.kabel-badenwuerttemberg.de) has joined ##c++
2012-08-03 12:51:06	<--	msk (~chatzilla@123.201.60.114) has quit (Client Quit)
2012-08-03 12:51:16	<--	diverdude (~bdi@80-62-117-146-mobile.dk.customer.tdc.net) has quit (Ping timeout: 248 seconds)
2012-08-03 12:51:49	<--	Internet13 (~Internet1@cpc26-croy20-2-0-cust25.19-2.cable.virginmedia.com) has quit (Ping timeout: 246 seconds)
2012-08-03 12:51:51	-->	dj_pi (~asd@c-107-5-25-243.hsd1.mi.comcast.net) has joined ##c++
2012-08-03 12:51:52	-->	argoneus (~argoneus@unaffiliated/argoneus) has joined ##c++
2012-08-03 12:52:18	<--	Astus (~Astus@79.117.191.227) has quit (Quit: Astus)
2012-08-03 12:52:26	<--	b1rkh0ff (~b1rkh0ff@178.77.1.10) has quit (Ping timeout: 246 seconds)
2012-08-03 12:52:47	<--	e1z0 (~null@netlinux/founder/e1z0) has quit (Ping timeout: 246 seconds)
2012-08-03 12:52:54	-->	Internet13 (~Internet1@cpc26-croy20-2-0-cust25.19-2.cable.virginmedia.com) has joined ##c++
2012-08-03 12:53:01	Bigcheese	Wait, struct A {int a;}; struct B : A {int c;}; is not standard-layout?
2012-08-03 12:53:07	<--	struct (~struct__@host-2-60-242-127.pppoe.omsknet.ru) has quit
2012-08-03 12:53:12	-->	pragma- (~chaos@unaffiliated/pragma/x-109842) has joined ##c++
2012-08-03 12:53:46	Bigcheese	But struct A {int a;}; struct B : A {}; is.
2012-08-03 12:54:02	-->	Kulrak (~101001101@tlug/member/kulrak) has joined ##c++
2012-08-03 12:54:11	pragma-	I demand an opinion on http://article.gmane.org/gmane.comp.version-control.git/57918
2012-08-03 12:54:35	<--	Dreadnaught (~101001101@tlug/member/kulrak) has quit (Ping timeout: 260 seconds)
2012-08-03 12:54:37	Bigcheese	:old:
2012-08-03 12:54:49	Bigcheese	Also, Linus is a troll.
2012-08-03 12:55:35	<--	ChadStud1uffin (~jrunning@pool-96-255-97-252.washdc.fios.verizon.net) has quit (Ping timeout: 246 seconds)
2012-08-03 12:55:39	ville	s/linux/pragma/
2012-08-03 12:55:44	-->	e1z0 (~null@netlinux/founder/e1z0) has joined ##c++
2012-08-03 12:56:24	djszapi	Bigcheese: thanks :)
2012-08-03 12:56:27	<--	djszapi (~lpapp@kde/developer/lpapp) has left ##c++
2012-08-03 12:57:29	-->	KongoKong (~KongoKong@74.142.51.115) has joined ##c++
2012-08-03 12:57:46	-->	Rabenklaue (~Rabe@f050227157.adsl.alicedsl.de) has joined ##c++
2012-08-03 12:57:47	-->	ChadStud1uffin (~jrunning@pool-96-255-97-252.washdc.fios.verizon.net) has joined ##c++
2012-08-03 12:57:58	Rabenklaue	Hi, I've got a weird problem using lambdas: http://pastebin.com/Xq3PkTrR
2012-08-03 12:58:03	RePaste	Rabenklaue: The paste Xq3PkTrR has been moved to http://ideone.com/WgHYp (see http://tinyurl.com/yv88ul for why)
2012-08-03 12:58:12	-->	mire_ (~mire@85.222.222.254) has joined ##c++
2012-08-03 12:58:22	Bigcheese	!give Rabenklaue testcase
2012-08-03 12:58:24	nolyc	Rabenklaue: Paste your test case (tick the compile checkbox!) to http://ideone.com/ or http://codepad.org. Using a recommended paste site increases the chances someone will take a look at it. Do _not_ paste to the channel. See the testcase checklist at http://www.eelis.net/iso-c++/testcase.xhtml .
2012-08-03 12:58:48	Rabenklaue	gcc-Version 4.7.1 20120721 (prerelease) (GCC) (ArchLinux) - This worked a long time, but now (I think after upgrading g++) it looks like the lambda is lost...
2012-08-03 12:59:43	Rabenklaue	Bigcheese: codepad.org gives me Internal Server errors everytime I try to paste the code...
2012-08-03 13:00:03	ville	Rabenklaue: so you've no alternative, like the other link given?
2012-08-03 13:00:18	-->	j0hnsm1th (~jubei@41-133-165-11.dsl.mweb.co.za) has joined ##c++
2012-08-03 13:00:32	-->	szega095 (~szega095@catv-80-98-14-40.catv.broadband.hu) has joined ##c++
2012-08-03 13:00:42	Rabenklaue	ville: Didn't know about ideone. Sorry.
2012-08-03 13:00:52	<--	cirrus] (~Cirrus@unaffiliated/pur/x-3398080) has quit (Ping timeout: 248 seconds)
2012-08-03 13:01:05	-->	MrSassyPants (thephil@84-74-111-70.dclient.hispeed.ch) has joined ##c++
2012-08-03 13:01:24	Bigcheese	Ugg
2012-08-03 13:02:10	-->	arvind_khadri (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2012-08-03 13:02:12	Bigcheese	I can't seem to get the definition of a standard-layout class to fit into a single message.
2012-08-03 13:02:28	--	tapas_ is now known as tapas
2012-08-03 13:02:38	<--	LordShiva (~Shiva@212.200.54.115) has quit (Ping timeout: 245 seconds)
2012-08-03 13:02:41	melba	so where is ze geordi
2012-08-03 13:02:48	-->	Henke37 (~Henrik@90-230-202-243-no203.tbcn.telia.com) has joined ##c++
2012-08-03 13:03:00	Bigcheese	Waiting for Eelis to get a better server.
2012-08-03 13:03:20	-->	LordShiva (~Shiva@212.200.54.115) has joined ##c++
2012-08-03 13:03:30	Bigcheese	However clanh is there yo serve your every desire.
2012-08-03 13:03:44	Bigcheese	...
2012-08-03 13:04:32	-->	pixelblur (~pixelblur@bas10-toronto01-845462408.dsl.bell.ca) has joined ##c++
2012-08-03 13:04:41	<--	clang (~clang@adena.otakukingdom.com) has quit (Remote host closed the connection)
2012-08-03 13:04:52	-->	tarnor72306 (~tarnor@c83-253-224-249.bredband.comhem.se) has joined ##c++
2012-08-03 13:04:57	-->	clang (~clang@adena.otakukingdom.com) has joined ##c++
2012-08-03 13:05:07	Bigcheese	clang: -v
2012-08-03 13:05:10	clang	Clang 3.2 ((160456))
2012-08-03 13:05:25	Bigcheese	Now he is here to serve your every need.
2012-08-03 13:06:08	-->	complex (~litehode@static243-173-74.mimer.net) has joined ##c++
2012-08-03 13:06:57	<--	Griwes (~griwes@unaffiliated/griwes) has quit (Remote host closed the connection)
2012-08-03 13:06:59	<--	RockstarRaccoon (~cchristia@c-98-208-155-216.hsd1.fl.comcast.net) has quit (Quit: YOUR KIND WILL NEVER BE SAFE IN OTTERLAND, YOU HEAR?)
2012-08-03 13:07:03	-->	b1rkh0ff (~b1rkh0ff@178.77.2.48) has joined ##c++
2012-08-03 13:07:29	<--	Rabenklaue (~Rabe@f050227157.adsl.alicedsl.de) has quit (Quit: leaving)
2012-08-03 13:07:56	xormor	clang: --help
2012-08-03 13:07:58	clang	Mini-manual:  http://www.eelis.net/geordi/
2012-08-03 13:08:06	-->	ambro718 (~ambro@BSN-77-101-149.dsl.siol.net) has joined ##c++
2012-08-03 13:08:20	xormor	clang, main(){printf("hello");}
2012-08-03 13:08:22	clang	error: C++ requires a type specifier for all declarations
2012-08-03 13:08:42	xormor	clang, int main(void){printf("hello"); return 0;}
2012-08-03 13:08:44	clang	hello
2012-08-03 13:08:53	<--	Chestal (~thilo@141.99.42.43) has quit (Ping timeout: 245 seconds)
2012-08-03 13:08:58	et	the return 0 is implicit.
2012-08-03 13:09:03	xormor	clang, int main(void){printf("hello, %d",2+2); return 0;}
2012-08-03 13:09:06	clang	hello, 4
2012-08-03 13:09:14	xormor	clang, int main(void){printf("hello, %d",2+2+2+2); return 0;}
2012-08-03 13:09:16	clang	hello, 8
2012-08-03 13:09:21	-->	vsrao (~quassel@unaffiliated/vsrao) has joined ##c++
2012-08-03 13:09:22	xormor	clang, int main(void){printf("hello, %d",2+2+2); return 0;}
2012-08-03 13:09:22	<--	jonnyli1125 (~Jonny@S0106602ad072187d.vc.shawcable.net) has quit (Ping timeout: 255 seconds)
2012-08-03 13:09:25	clang	hello, 6
2012-08-03 13:09:42	et	nolyc: geordispam
2012-08-03 13:09:44	nolyc	DO NOT SPAM ##c++ WITH GEORDI. #geordi is a perfectly fine place to spam.
2012-08-03 13:09:47	gibberish	How to spot someone who doesn't read the manual.
2012-08-03 13:09:49	-->	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has joined ##c++
2012-08-03 13:09:49	<--	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has quit (Changing host)
2012-08-03 13:09:49	-->	sohail (~sohail@unaffiliated/sohail) has joined ##c++
2012-08-03 13:09:57	gibberish	And then make fun of the person.
2012-08-03 13:10:44	-->	Chestal (~thilo@141.99.42.43) has joined ##c++
2012-08-03 13:10:59	<--	basic6 (~philip@p549A3D9C.dip.t-dialin.net) has quit (Ping timeout: 246 seconds)
2012-08-03 13:11:54	-->	Griwes (~griwes@unaffiliated/griwes) has joined ##c++
2012-08-03 13:13:14	-->	japro (~japro@84-75-153-222.dclient.hispeed.ch) has joined ##c++
2012-08-03 13:13:30	-->	nemesit (~nemesit@fbivpn.informatik.uni-hamburg.de) has joined ##c++
2012-08-03 13:14:22	-->	Obfuscate (~keii@ip98-176-6-103.sd.sd.cox.net) has joined ##c++
2012-08-03 13:14:26	-->	schtobia (~quassel@80.154.27.214) has joined ##c++
2012-08-03 13:14:26	<--	schtobia (~quassel@80.154.27.214) has quit (Changing host)
2012-08-03 13:14:26	-->	schtobia (~quassel@piratenpartei/BY/schtobia) has joined ##c++
2012-08-03 13:15:26	-->	mdkess (~mdkess@6cb32252.cst.lightpath.net) has joined ##c++
2012-08-03 13:16:06	<--	dalaing (~dalaing@203-206-241-15.dyn.iinet.net.au) has left ##c++
2012-08-03 13:17:37	<--	dhruvasagar (~dhruvasag@122.167.80.117) has quit (Ping timeout: 240 seconds)
2012-08-03 13:18:38	-->	dhruvasagar (~dhruvasag@122.167.80.117) has joined ##c++
2012-08-03 13:19:02	<--	Seppoz (~Invincibl@unaffiliated/seppoz) has quit (Remote host closed the connection)
2012-08-03 13:19:31	<--	e1z0 (~null@netlinux/founder/e1z0) has quit (Read error: Connection reset by peer)
2012-08-03 13:21:51	<--	vsrao (~quassel@unaffiliated/vsrao) has quit (Remote host closed the connection)
2012-08-03 13:23:06	<--	arvind_khadri (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Ping timeout: 248 seconds)
2012-08-03 13:23:54	-->	arvind_khadri (~arvind@unaffiliated/arvind-khadri/x-2237230) has joined ##c++
2012-08-03 13:26:18	<--	Beetny (~Beetny@ppp118-208-53-254.lns20.bne1.internode.on.net) has quit (Ping timeout: 248 seconds)
2012-08-03 13:26:23	-->	Suchorski (regex@189-13-207-112.user.veloxzone.com.br) has joined ##c++
2012-08-03 13:29:29	-->	Magnet17 (~Neo@216-246-251-152.cpe.distributel.net) has joined ##c++
2012-08-03 13:31:37	<--	xormor (~xormor@87-95-27-167.bb.dnainternet.fi) has quit (Ping timeout: 240 seconds)
2012-08-03 13:32:08	-->	arossouw (~arossouw@196.36.203.18) has joined ##c++
2012-08-03 13:32:41	arossouw	c++ seems overwhelming, with things like when to choose composition over inheratance, correct codereuse
2012-08-03 13:33:05	wobster	no difference to other object-oriented langages
2012-08-03 13:33:12	arossouw	ok
2012-08-03 13:33:30	arossouw	guess its just a mindset change, coming from procedural
2012-08-03 13:33:54	-->	Hubarz (~opera@p5DD06C4D.dip.t-dialin.net) has joined ##c++
2012-08-03 13:33:58	arossouw	any recommendations on good books for getting oop concepts?
2012-08-03 13:34:13	<--	Octal_ (~quassel@static.25.237.9.5.clients.your-server.de) has quit (Ping timeout: 240 seconds)
2012-08-03 13:34:32	wobster	hm, experience does the trick. just code and see what works for you.
2012-08-03 13:34:38	arossouw	ok
2012-08-03 13:35:00	-->	Rajesh (~Rajesh@117.203.21.191) has joined ##c++
2012-08-03 13:35:11	wobster	of course there are books. but you won't get a good feel for things if you don't fail and succeed in practice.
2012-08-03 13:35:16	arossouw	also should you create many instances of objects, sometimes i see vectors on one object more practical
2012-08-03 13:35:19	<--	Rajesh (~Rajesh@117.203.21.191) has quit (Max SendQ exceeded)
2012-08-03 13:35:22	<--	tzarc (~tzarc@x251-66.tzarc.org) has quit (Ping timeout: 248 seconds)
2012-08-03 13:35:29	arossouw	ok
2012-08-03 13:35:55	ville	always go for the flat hierarchy
2012-08-03 13:36:00	arossouw	ok
2012-08-03 13:36:03	-->	Rajesh (~Rajesh@117.203.21.191) has joined ##c++
2012-08-03 13:36:14	--	Rajesh is now known as Guest54087
2012-08-03 13:36:45	-->	Octal_ (~quassel@static.25.237.9.5.clients.your-server.de) has joined ##c++
2012-08-03 13:37:06	wobster	arossouw, that is what experience teaches you: under- or overengineering easily happens when it comes to OOP and choosing the right level of abstraction
2012-08-03 13:37:09	-->	stratomarco (~marco@200.144.115.82) has joined ##c++
2012-08-03 13:37:13	<--	dj_pi (~asd@c-107-5-25-243.hsd1.mi.comcast.net) has quit (Ping timeout: 245 seconds)
2012-08-03 13:37:14	ville	and as with all generalizations... use your own judgement. I opt for flat hierarchy. others don't.
2012-08-03 13:37:33	arossouw	wobster: i see, thanks
2012-08-03 13:37:47	<--	Guest54087 (~Rajesh@117.203.21.191) has quit (Max SendQ exceeded)
2012-08-03 13:38:02	ville	others use inheritance to reuse a function or two, even though the type is never used through a base* in the program.
2012-08-03 13:38:07	wobster	arossouw, of course, there are also technical aspects that would make you favor one over the other. so all in all, take your time.
2012-08-03 13:38:12	arossouw	i'll just have to be patient, looks like will take many years to be good
2012-08-03 13:38:20	ville	10 years.
2012-08-03 13:38:22	wobster	absolutely
2012-08-03 13:38:31	-->	Guest54087 (~Rajesh@117.203.21.191) has joined ##c++
2012-08-03 13:39:31	-->	l_r (~anon@adsl-ull-140-43.42-151.net24.it) has joined ##c++
2012-08-03 13:39:36	arossouw	the little studying i have done with c++ has helped, see that i can think of better ways to do things and already applying it to python scripts
2012-08-03 13:40:58	<--	izhak (~izhak@213.87.240.98) has quit (Ping timeout: 245 seconds)
2012-08-03 13:41:44	arossouw	ville: 10 years seems very long
2012-08-03 13:41:46	-->	tzarc (~tzarc@x251-66.tzarc.org) has joined ##c++
2012-08-03 13:41:53	wobster	coming from python, why not practice OOP in that platform first?
2012-08-03 13:42:08	arossouw	ok, good idea
2012-08-03 13:42:46	-->	EoN (~EoN@unaffiliated/eon) has joined ##c++
2012-08-03 13:42:49	ville	!fs programm
2012-08-03 13:42:49	nolyc	Key search for "programm" (4 found): "Game programming", "copy and paste programming", "cprogramming.com", and "programmer"
2012-08-03 13:42:56	ville	!fs learn
2012-08-03 13:42:56	nolyc	Key search for "learn" (4 found): "learn", "learnc", "learning", and "notlearn"
2012-08-03 13:43:01	ville	!learning
2012-08-03 13:43:03	nolyc	'Learning Standard C++ as a New Language' by Bjarne Stroustrup: http://public.research.att.com/~bs/new_learning.pdf
2012-08-03 13:43:07	ville	hmph nope
2012-08-03 13:43:12	litb	!books
2012-08-03 13:43:14	nolyc	http://jcatki.no-ip.org/fncpp/Resources
2012-08-03 13:43:20	-->	maligree (~maligree@fedora/maligree) has joined ##c++
2012-08-03 13:43:35	-->	saulus (~saulus@marshall.informatik.rwth-aachen.de) has joined ##c++
2012-08-03 13:43:36	<--	saulus (~saulus@marshall.informatik.rwth-aachen.de) has quit (Changing host)
2012-08-03 13:43:36	-->	saulus (~saulus@unaffiliated/saulus) has joined ##c++
2012-08-03 13:43:59	-->	vocodork (vocoder@94-227-98-45.access.telenet.be) has joined ##c++
2012-08-03 13:44:03	-->	kayo (~kayo@201-8-8-144.user.veloxzone.com.br) has joined ##c++
2012-08-03 13:44:04	<--	kayo (~kayo@201-8-8-144.user.veloxzone.com.br) has quit (Changing host)
2012-08-03 13:44:04	-->	kayo (~kayo@opensuse/member/kayohf) has joined ##c++
2012-08-03 13:45:08	<--	EoN` (EoN@unaffiliated/eon) has quit (Ping timeout: 248 seconds)
2012-08-03 13:46:11	<--	reels (~reels@p5B071DA1.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2012-08-03 13:46:22	-->	dobby156 (~dobson@host90-152-3-218.ipv4.regusnet.com) has joined ##c++
2012-08-03 13:46:27	-->	yandong (~yandong@124.207.65.198) has joined ##c++
2012-08-03 13:47:29	-->	ShishKabab (~vincent@195.191.202.173) has joined ##c++
2012-08-03 13:47:33	<--	yandong (~yandong@124.207.65.198) has quit (Read error: Connection reset by peer)
2012-08-03 13:47:36	<--	dardevelin (~dardeveli@a81-84-114-53.cpe.netcabo.pt) has quit (Quit: Leaving)
2012-08-03 13:48:09	<--	HaltingState (~HaltingSt@cpe-76-169-228-195.socal.res.rr.com) has quit (Remote host closed the connection)
2012-08-03 13:48:44	<--	telexicon_ (~telexicon@c-67-160-124-195.hsd1.wa.comcast.net) has quit (Ping timeout: 244 seconds)
2012-08-03 13:49:13	arossouw	heard http://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612 , is a good book
2012-08-03 13:49:31	dobby156	!books
2012-08-03 13:49:33	nolyc	http://jcatki.no-ip.org/fncpp/Resources
2012-08-03 13:49:36	-->	HaltingState (~HaltingSt@cpe-76-169-228-195.socal.res.rr.com) has joined ##c++
2012-08-03 13:49:36	<--	HaltingState (~HaltingSt@cpe-76-169-228-195.socal.res.rr.com) has quit (Changing host)
2012-08-03 13:49:36	-->	HaltingState (~HaltingSt@unaffiliated/haltingstate) has joined ##c++
2012-08-03 13:49:50	arossouw	ok
2012-08-03 13:49:54	arossouw	thanks
2012-08-03 13:50:50	arossouw	is scott meyers good?
2012-08-03 13:50:58	<--	LordShiva (~Shiva@212.200.54.115) has quit (Ping timeout: 245 seconds)
2012-08-03 13:50:58	dobby156	arossouw: normally
2012-08-03 13:51:05	dobby156	arossouw: what do you want in a bok
2012-08-03 13:51:07	dobby156	*book
2012-08-03 13:51:07	arossouw	cool
2012-08-03 13:51:09	<--	dethredic (~phil@24-52-247-237.cable.teksavvy.com) has quit (Read error: Connection reset by peer)
2012-08-03 13:51:14	-->	archypetro (~hagrid@unaffiliated/archangelpetro) has joined ##c++
2012-08-03 13:51:28	arossouw	effective ways to program and oop concepts :-)
2012-08-03 13:51:29	dobby156	arossouw: to learn C++, to leard patterns? good pratice? or just something to read
2012-08-03 13:51:39	-->	dethredic (~phil@24-52-247-237.cable.teksavvy.com) has joined ##c++
2012-08-03 13:51:41	dobby156	arossouw: oop is over rated should be your first lesson
2012-08-03 13:52:09	dobby156	arossouw: how good is your C++ knowledge?
2012-08-03 13:52:22	arossouw	hehe, just about 3 weeks
2012-08-03 13:52:32	-->	Arafangion (~Arafangio@220-244-108-23.static.tpgi.com.au) has joined ##c++
2012-08-03 13:52:42	ville	arossouw: yes you should probably own GOF, same as you should own CLRS.
2012-08-03 13:53:08	<--	rchatsiri (~chatsiri@171.4.24.189) has quit (Ping timeout: 248 seconds)
2012-08-03 13:53:41	dobby156	arossouw: right-o I would recommend effective C++ but you probably haven't learnt enough C++ yet
2012-08-03 13:54:11	arossouw	ville: sorry not good with slang
2012-08-03 13:54:23	dobby156	arossouw: I personally would avoid anything that places an ephesis on Java style inheritance  as a form of code reduction
2012-08-03 13:54:41	arossouw	aha
2012-08-03 13:54:44	 *	arossouw taking notes
2012-08-03 13:54:52	ville	!ggl clrs
2012-08-03 13:54:53	nolyc	http://en.wikipedia.org/wiki/Introduction_to_Algorithms
2012-08-03 13:54:57	ville	!gof
2012-08-03 13:54:58	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2012-08-03 13:54:58	nolyc	Gang of Four. Referring to the authors of the book Design Patterns : Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides. See !designpatterns
2012-08-03 13:55:20	<--	lib_ (~lib@p5B2DE2DF.dip.t-dialin.net) has quit (Quit: Leaving)
2012-08-03 13:55:46	arossouw	algorithms is a bit tricky , especially bubble sort and quicksort
2012-08-03 13:56:41	-->	xissburg (~xissburg@187.3.50.233) has joined ##c++
2012-08-03 13:56:46	-->	rchatsiri (~chatsiri@171.4.24.189) has joined ##c++
2012-08-03 13:56:52	dobby156	arossouw: then that book is exactly what you need
2012-08-03 13:57:19	hrnt	after CRLS you probably won't consider bubblesort to be an especially tricky algorithm ;)
2012-08-03 13:57:33	hrnt	clrs
2012-08-03 13:57:36	<--	rchatsiri (~chatsiri@171.4.24.189) has left ##c++
2012-08-03 13:57:42	mdkess	Balanced tree structures, however, will continue to haunt you.
2012-08-03 13:58:27	Arafangion	QuantumSort gives me headaches.
2012-08-03 13:59:45	arossouw	dobby156: why is oop overrated?
2012-08-03 14:00:06	<--	ShishKabab (~vincent@195.191.202.173) has quit (Quit: Konversation terminated!)
2012-08-03 14:00:27	Arafangion	arossouw: OOP is very useful, however, when you have only a hammer...
2012-08-03 14:00:47	arossouw	ok
2012-08-03 14:00:59	Arafangion	arossouw: Mainstream OOP concepts are simplistic...  And are presented as the only tool.
2012-08-03 14:01:25	arossouw	so is oop still practical for small projects?
2012-08-03 14:01:32	Arafangion	arossouw: Depends.
2012-08-03 14:01:41	dobby156	arossouw: not really, there are better easier cleaner ways of doing things
2012-08-03 14:01:48	-->	mlody (mlody@tess.one.pl) has joined ##c++
2012-08-03 14:02:05	ciaranm	OOP isn't very good when you think of it as being a thing, rather than as being a tool.
2012-08-03 14:02:22	arossouw	ok
2012-08-03 14:02:26	dobby156	arossouw: inhertiance style OOP has a use-case, that is runtime polymorphism
2012-08-03 14:02:30	<--	MrSassyPants (thephil@84-74-111-70.dclient.hispeed.ch) has quit (Remote host closed the connection)
2012-08-03 14:02:42	Arafangion	It's good seeing C# move away from "pure" java-style OOP, actually.
2012-08-03 14:02:56	<--	Azzkikr (~crud@53545EE5.cm-6-5b.dynamic.ziggo.nl) has quit (Ping timeout: 245 seconds)
2012-08-03 14:03:05	<--	MaNI (~MaNI@41.164.20.246) has quit (Ping timeout: 252 seconds)
2012-08-03 14:03:15	arossouw	what do you guys think of google's go programming language?
2012-08-03 14:03:20	-->	jhoepken_ (~jhoepken@dslb-178-006-015-176.pools.arcor-ip.net) has joined ##c++
2012-08-03 14:03:25	Arafangion	arossouw: What about it?
2012-08-03 14:03:26	dobby156	arossouw: however most of the time people don't need runtime polymorphism, they just need a way to reuse code or can do the same thing statically
2012-08-03 14:03:40	dobby156	arossouw: in which case simple templates are far cleaner and more effective
2012-08-03 14:04:11	<--	kranthi (~kumarkun@a91-155-189-100.elisa-laajakaista.fi) has quit (Ping timeout: 246 seconds)
2012-08-03 14:04:15	arossouw	dobby156: could that be like concrete classes , ie (Date)?
2012-08-03 14:04:34	-->	alan_w (~alan_w@216.57.96.2) has joined ##c++
2012-08-03 14:04:44	<--	magellanicloud (~magellani@HSI-KBW-091-089-175-206.hsi2.kabel-badenwuerttemberg.de) has quit (Ping timeout: 260 seconds)
2012-08-03 14:04:59	dobby156	arossouw: yeah a date has no need to be polymorphic
2012-08-03 14:05:11	 *	Arafangion shudders.
2012-08-03 14:05:12	arossouw	i see
2012-08-03 14:05:13	dobby156	arossouw: it is hard to come up with a concise example
2012-08-03 14:05:30	dobby156	arossouw: but I typically avoid writing anything to do with time and date myself
2012-08-03 14:05:37	dobby156	arossouw: that shit is complex
2012-08-03 14:05:41	arossouw	hehe
2012-08-03 14:05:45	arossouw	ok
2012-08-03 14:05:48	Arafangion	dobby156: Python actually has a pretty good object-oriented date implementation.
2012-08-03 14:06:03	dobby156	arossouw: I don't rate Go very highly either but you asking in the wrong plave
2012-08-03 14:06:05	dobby156	*place
2012-08-03 14:06:18	dobby156	arossouw: I don't think quite know what it's use case is
2012-08-03 14:06:19	arossouw	ok, just ignore that :-)
2012-08-03 14:06:46	DevWouter	OOP is like windows. It's good but oh so often abused. Good programmers also use other things then OOP and know that Linux and windows are both good :)
2012-08-03 14:06:59	-->	the|forever|kid (kvirc@117.198.39.68) has joined ##c++
2012-08-03 14:07:00	<--	DaZ (~derp@77-255-252-251.adsl.inetia.pl) has quit (Ping timeout: 248 seconds)
2012-08-03 14:07:14	Arafangion	DevWouter: HERETIC!
2012-08-03 14:07:15	dobby156	DevWouter: I don't follow that, when is Windows good?
2012-08-03 14:07:30	arossouw	wonder why C++ doesn't have as good marketing as the other language
2012-08-03 14:07:44	Arafangion	arossouw: It's still astonishingly popular.
2012-08-03 14:07:49	arossouw	ok
2012-08-03 14:14:29		irc: disconnected from server
2012-08-03 14:14:39	-->	johnhamelink (~JohnHamel@ks393762.kimsufi.com) has joined ##c++
2012-08-03 14:14:39	--	Topic for ##c++ is "ISO/IEC 14882:2011 (a.k.a. C++11) is PUBLISHED!!  || Can't speak? Identify to NickServ || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/ || other channels: ##c++-basic, ##c++-general, ##c++-social, ##iso-c++ || we don't do homework"
2012-08-03 14:14:39	--	Topic set by Eelis (~Eelis@unaffiliated/eelis) on Sat, 03 Sep 2011 19:59:56
2012-08-03 14:14:39	--	Nicks ##c++: [AAYUSH acrocity adnap Adran Adrinael Agiofws ahf aib Airells akiress alamar alan_w alanjf alastair AlbireoX alek_br_ alelos Alice3 AllenJB Alxandr ambro718 ambroff_ an0maly an0xx An_Ony_Moose anaconda Anasazi anatolys Andon andres ansiwen apoc Apocalypse Arafangion archangelpetro archypetro Areks argoneus arnabkd arnoldB aroga arossouw arpd Arttu arun arvind_khadri asakura ashfagg assertsmart Aster atubbs average_drifter awx Azzkikr b1rkh0ff b_jonas BabyGotBook badone baedert Bamieater BanderOS Bao base84 bastih bastii battlehands Baum Bavo bburhans Beket Belgarion0 Bigcheese Biolunar Bish_ bitlord blackace blast_hardcheese BlastHardcheese blenny blo Bloodust bloony BoAnd bolosaur bolt BombStrike bone bool_ BoomBox BountyX boxofrox bps Brklyn_ bryno BSDBlack BSWolf bvs Bwild C00re caleb_9_ canihazit caveat- ccube cdash004 cdidd Cecen cfairles ChadStud1uffin chalcedony CharlieM75 chayin cheese1756 chenwj Chestal ChevyCowboy15 ChibaPet chrisbuchholz ciaranm cic cinalyc cl0ud clang classix clipon CMoH comawhite complex coppro cortana2 Cr8 crib cribert- Criztian crl cruxeternus curfont cursedm00n cut^e cyberspace- cYmen d-old d4de damir__ Danikar Danio dansan darkc0met daryl dau davicost1 DavidChenware davv3 DaZ dbr DeadSix27 Deathzor decltype DeeTah Defaultti DeltaHeavy demi` Derpy2 det dethredic devaholic DevWouter dflurker_ dgiagio dh dhruvasagar dijital1 dindinx dinesh_ dirtydawg djinni` dobby156 Dolan_pls Domi donwilliam doodle77 dorkosaurus Dotti drgreenthumb drinkycrow dropdrive dross_ dumont DustyDingo du|dx dv_ dvide dvoid dys edlinde edoceo` edr efjboss ejls Element9 elliottcable em enkomax envi EoN EPIK ericP ernini Erryx et eusto evanz evelyette Ex explodus f47h3r FabTG fasta felipe fhd fighterjet findiggle fisted Flannel Fleck flux Forge_ forrestv Fratyr FriarTech FriskyKat froggey funktronic Fuuzetsu Fuxx gaten geeeek gemelen gencha Gentle GeorgeH_ GeorgeJ gert gg7 gibberish glenfe_ glenfern gnathan Godslastering Goopyo Gorroth GrecKo Greg44 gregj Griwes groupcat gry gsvolt Guest54087 Guest90058 guifre gusnan hackkitten HaltingState hayander hays heatxsink heiner heinrich5991 Helios Henke37 HerzogDeXtEr1 Hopkinz houmles hrnt Hubarz hubbe3 Hydrant hyperair hyperboreean hz i7c icedtea iceisfun ido IHateHavingToReg iiyo Ikarus ikonia iLogical incognito_ ineb_ ingenious inkjetunito int0x27h Internet13 interop_madness ircnode0 Irishmanluke ironzorg isbric ivan\ iZeR j0hnsm1th j`ey jakoch jamesn Jannevaa jantje japro Jarvis javierHund Jaxan jayne JCBCIV jem777 jesuisuntorrent jfe jhoepken jhoepken_ jimster jlen jo`` Joefish joel_falcou johnhamelink JonathanD Josef__K jott jrdnn jrgill jrickman JSharpe jsullivan_ julmae- julmuri jweinberg K1rk k299 K3|Chris kakashi_ Kaltiz kalven KaneTW Kartagis Kartrohm Kasreyn kavakava kayo kchodorow kcj keltvek KernelMustard kerrick kevin__ keyvan Kicer86 KindOne klip kloeri Knio knittl KongoKong KoVadim Krabbe KrzaQ kszatan ktch ktos Kulrak kumelk kuplatupsu kuros kurti Kuukunen L3thal__ l_r lahwran LAMMJohnson lanemeyer larks Lasher` levi501d libertas lilalinux Lillia7_ Lirrec litb LjL loglaunch loxley LRN luki- Lycanthropist lyindArk M-ou-se m3thyl mac^_ Maccer maddoc maddog_ madmoose Magnet17 makissy maligree mama marga martiert Martin8412 Martty Matthias|PC maum maw maxorator McMAGIC--Copy mdkess megaTherion melba mertsas mexlex mgaunard_ mgq mikalv mikroflops Minoulefou mire_ mishehu MissionCritical mitsuhiko mlody Mnabil moeSeth Mogget molgrum MonkeyMichael morfin Mosu Motig mousetrap mrcan MrFahrenheit mrh mrkotfw MrKronus muep MulleDK20 mulvane Munnu muteki mwas Mws myrkraverk n00b201 Nach0z nahhh nahmaste naquad nauman navatwo nchaimov neersighted nemesit nenolod Neo17 Nephro nero netmind netrino neunon neurodamage neurodrone Nibato Nickeeh_ nierob_ Nightmare Nik05 nikki93 nikoJ NimeshNeema nocture noflex noj nolyc nor5trom nots nrd ntrb ntx nullslash nutron o] o^nd Obfuscate obs Obvious Octal_ ofan Olipro omni5cience orafu orbitz Orginator ormaaj Orphis OxDeadC0de Ozm pa Palmik pandantic parcs` PARLIAMENT patson peanuter peper petteyg pgas phe pheredhel phr phschwartz PigFlu Pilate piotr pippijn piti pix1 pixelblur plouffe polysix portuguese Posterdati pragma- Praise pretty_function primepie_ Programmer_ Progster pspace pticochon pucko pwned qdii Qub1t r126l r3m1 radiofree Rafusek Rajko rangergord Rapp Raziel_ rcj_ rcxdude rdpate rdragno ReachingFarr redec reko_t rendar RePaste Repentinus retornam rexou rhl rhodesd rhythmx Richard_Cavell richardwhiuk riotz Rix rmunoz rmunoz_ robbyoconnor robert_ robink roflin roivas RokerHRO roland Rolz ross` roxlu rstrong Rubix ruediger rush2end Rutix rvchangue ryanakca s0und saati SaBer Sachiru sacho SAHChandler sakurazaki sam samek samii_ SanguineAnomaly saulus Sausage scharan Schoentoon schroedinbug schtobia scroverty Scub SecretAgent segy Seion semeion Sergonium serious_jack SeySayux sh4wn shades ShawnWhite shintah showbott Shuba shundread Silex silverwind silverwolf sirdancealot7 Skywing SlashLife Slide-O-Mix snarkyboojum SNiLD snuggl Soap__ sohail solrize sorressean soulcake Spark_ spb sphenxes SphericalCow sporous spq` SpX squig Starfire stepnem stfn Stormhawk straterra stratomarco Stryyker Suchorski sudokode SugarCube suiside sujeet sunfun SunnyD suppahsrv suy sweet_kid symm- synapt syo systemfault szega095 szr tapas Targen tarnor72306 Tasky tayne tazle teotwaki Terminus- termos The_Coolest TheBeerinator TheCommieDUck TheFuzzball thelamb TheNull theprocrastin8r the|forever|kid thief Tidus- Tiffy Timbo TinoDidriksen TMAndersson TMM tmyklebu Toes_ tomaw TomyLobo torsan toytoy trapni trey trigen Trin tswett ttvd TuTizz tuxdev Tuxist Twey txomon|home tzarc uman unreal urlgrabber UukGoblin V-ille vchang vdv vektor vener Vert VeXocide ville Vinnie_win vjn vocodork voidcoder volk voot545 vsayer vskaddanki W0rmDrink w3pm walmis wbooze wd40s weeb1e_ Wiz126 wobr wobster woggle wolfbyte wordToDaBird[Lap WormDrink wormphlegm wting wu_lmao wuj xandy XAVeRY xConMz xcvd Xethron xiliax xilo xiphiasx_ xissburg xivix Xjs|moonshine xnavor xormor xxtjaxx Y_Ichiro yamamushi_ yan_ ybit yeltzooo7 yhager Yonkie yorick Youka2 younder Younos yroeht ysbeer Yustme zariux Zcvzyvw_ zeleni_zub Zharf ZoB Zol ZsoL zyphex Zyrkon zyrtech z|Andy]
2012-08-03 14:14:39	--	Channel ##c++: 785 nicks (0 ops, 0 halfops, 0 voices, 785 normals)
2012-08-03 14:14:48	<--	the|forever|kid (kvirc@117.198.39.68) has quit (Ping timeout: 276 seconds)
2012-08-03 14:15:13	--	Mode ##c++ [+CPcflnpt #overflow 850]
2012-08-03 14:15:13	--	Channel created on Sat, 15 Sep 2001 04:15:35
2012-08-03 14:15:29	ville	anyone is reasonable as in that there aren't set restrictions, by the people who made the standard, who may implement it.
2012-08-03 14:16:01	-->	kranthi (~kumarkun@a91-155-189-100.elisa-laajakaista.fi) has joined ##c++
2012-08-03 14:16:08	DevWouter	dobby156: Winners vs. Losers
2012-08-03 14:16:24	dobby156	DevWouter: I would say Linux is doing fairly well ATM
2012-08-03 14:16:38	ville	eww atm
2012-08-03 14:17:00	dobby156	DevWouter: things are going to get interesting when Steam is ported to linux
2012-08-03 14:17:07	dobby156	ville: you don't like that TLA?
2012-08-03 14:17:57	pticochon	uhmm... I'm debugging a project and and I'm getting a SEGFAULT at this line "enc.out->put(1);". The debugger shows that enc.out, which is of type Writer*, has a value of 0x0. Does that mean that the pointer to Writer is not initialized?
2012-08-03 14:18:12	<--	xormor (~xormor@87-95-62-105.bb.dnainternet.fi) has quit (Ping timeout: 248 seconds)
2012-08-03 14:18:16	DevWouter	dobby156: Doubt it. Most game developers use VS unless they do console development (and even then they write large parts in VS).
2012-08-03 14:18:25	DevWouter	VS = Visual Studio
2012-08-03 14:18:38	ville	pticochon: it means it is a null pointer. it may or may not have been initialized. one thing is for sure it doesn't point to anything valid.
2012-08-03 14:18:47	pticochon	thanks ville
2012-08-03 14:18:48	dobby156	DevWouter: I know but if valve shift there games to linux I think it will be very interesting
2012-08-03 14:19:09	ville	!general
2012-08-03 14:19:11	nolyc	##c++-general for algorithms, libraries, practices, projects and tools
2012-08-03 14:19:16	-->	liberathor_ (~quassel@190.255.242.93) has joined ##c++
2012-08-03 14:19:18	-->	paullik (~paullik@unaffiliated/paullik) has joined ##c++
2012-08-03 14:19:22	dobby156	DevWouter: IE half life, CS, l4d... I don't game but I think it will be interesting
2012-08-03 14:19:33	DevWouter	dobby156: Only if there is an IDE which can match VS. And I wish they would create something like that linux.
2012-08-03 14:19:35	<--	qdii (~qdii@juv34-1-82-225-183-37.fbx.proxad.net) has quit (Ping timeout: 246 seconds)
2012-08-03 14:19:39	ville	!offtopic
2012-08-03 14:19:41	nolyc	This channel is about ISO Standard C++. If you want to discuss extra libraries, projects, or other things not necessarily on topic (but still related to C++) join ##c++-general
2012-08-03 14:20:26	dobby156	DevWouter: well we'll see
2012-08-03 14:20:41	dobby156	DevWouter: I don't know what will happen, but like I said it will be interesting
2012-08-03 14:20:48	DevWouter	dobby156: Or not but I hope your right :)
2012-08-03 14:21:13	ejls	This discussion linking the OS market to the game industry is really interresting, but please… topic.
2012-08-03 14:21:35	-->	magnet17_ (~magnet@216-246-251-152.cpe.distributel.net) has joined ##c++
2012-08-03 14:22:00	dobby156	DevWouter: Actually I what do developer do about PS3 then? Surely porting their C++ to the that is no different than porting to Linux?
2012-08-03 14:22:14	ville	dobby156: are you thick?
2012-08-03 14:22:25	dobby156	that process that is, not the actually portation
2012-08-03 14:22:29	DevWouter	We are just talking about how the difference in OS affects development and the popularity of languages and how that affects implementation details.
2012-08-03 14:22:34	--	Mode ##c++ [+o ville] by ChanServ
2012-08-03 14:22:36	Arafangion	dobby156: Linux, at least, tends to be x86-based, or vaguely-x86-based.
2012-08-03 14:22:45	dobby156	fine I'll be quiet
2012-08-03 14:22:57	Arafangion	dobby156: Rather than cell-based.
2012-08-03 14:23:05	ejls	!give Arafangion offtopicanswer
2012-08-03 14:23:07	nolyc	Arafangion: To avoid encouraging other people to ask more offtopic questions, please answer offtopic questions either in private or in a related channel only.
2012-08-03 14:23:12	DevWouter	Does the standard have something about the platform defined?
2012-08-03 14:23:37	@ville	DevWouter: sure lot of things are said to be platform defined.
2012-08-03 14:23:41	--	Mode ##c++ [-o ville] by ville
2012-08-03 14:24:08	-->	Mech0z (~Mech0z@0x5738f1db.grnqu1.dynamic.dsl.tele.dk) has joined ##c++
2012-08-03 14:24:17	DevWouter	No, I mean why doesn't c++ define something about the platform?
2012-08-03 14:24:31	ville	What do you mean by "the platform"?
2012-08-03 14:24:43	DevWouter	I mean "int" was never really defined.
2012-08-03 14:24:54	DevWouter	When they say
2012-08-03 14:25:04	<--	SunnyD (~SunnyD@cpe-24-243-170-93.hot.res.rr.com) has quit (Quit: ChatZilla 0.9.86 [Firefox 3.5.2/20090729225027])
2012-08-03 14:25:13	-->	trigger (~trigger@gateway/tor-sasl/trigger) has joined ##c++
2012-08-03 14:25:16	-->	Tyrfing (~SaschaMue@p508A3D89.dip.t-dialin.net) has joined ##c++
2012-08-03 14:25:57	DevWouter	... Need to think about how I put this, don't want to piss people off... give me a sec
2012-08-03 14:26:05	-->	LucasCampos (~lucas@177.17.73.24) has joined ##c++
2012-08-03 14:26:10	DevWouter	Ah yes...
2012-08-03 14:26:36	DevWouter	Why does C++ let certain items be defined by the platform? Why doesn't C++ enforce certain values?
2012-08-03 14:26:56	DevWouter	For example: int will always be 32 bits?
2012-08-03 14:26:59	ville	to allow optimal implementation and not restrict that by over-specifying
2012-08-03 14:27:09	dobby156	DevWouter: because C and C++ are designed to allow for aggressive compile/platform optimisations
2012-08-03 14:27:10	<--	LucasCampos (~lucas@177.17.73.24) has quit (Read error: Connection reset by peer)
2012-08-03 14:27:13	-->	dfg_ (974b3aa3@gateway/web/freenode/ip.151.75.58.163) has joined ##c++
2012-08-03 14:27:20	-->	entanio (~Entanio@88-108-194-180.dynamic.dsl.as9105.com) has joined ##c++
2012-08-03 14:27:36	ville	so under-specify to allow better implementations for each platform
2012-08-03 14:27:42	<--	entanio (~Entanio@88-108-194-180.dynamic.dsl.as9105.com) has left ##c++
2012-08-03 14:27:52	DevWouter	Ok, but what about the new thread specs?
2012-08-03 14:28:07	dobby156	DevWouter: what about them
2012-08-03 14:28:09	ville	What about them?
2012-08-03 14:28:54	DevWouter	Most OS already have platform API for threads.
2012-08-03 14:28:57	<--	melba (~melba@unaffiliated/lazz0) has quit (Quit: Two pure functions walk into a bar. Nothing happens.)
2012-08-03 14:29:06	dobby156	DevWouter: yes, but they aren't portable
2012-08-03 14:29:19	DevWouter	But what about a platform that doesn't know threading?
2012-08-03 14:29:24	ville	DevWouter: and they all differ so one has to do work in order to be portable
2012-08-03 14:29:30	<--	kranthi (~kumarkun@a91-155-189-100.elisa-laajakaista.fi) has quit (Read error: Operation timed out)
2012-08-03 14:29:30	DevWouter	(I know, i know, like that is going to happen)
2012-08-03 14:29:47	ville	DevWouter: Then that platform is going to perform the threads sequentally?
2012-08-03 14:29:48	dobby156	DevWouter: if you require for example that in "int" is 64 bit you can use int64_t and it becomes portable, perhaps at a loss of performance on some platforms
2012-08-03 14:29:54	-->	YouN00b (~IceChat9@208.95.30.82) has joined ##c++
2012-08-03 14:29:54	<--	YouN00b (~IceChat9@208.95.30.82) has quit (Changing host)
2012-08-03 14:29:54	-->	YouN00b (~IceChat9@unaffiliated/youn00b) has joined ##c++
2012-08-03 14:30:13	ville	dobby156: the exact types are only available if CHAR_BIT == 8
2012-08-03 14:30:15	-->	LucasCampos (~lucas@187.112.2.21) has joined ##c++
2012-08-03 14:30:54	ville	dobby156: actually not sure if they are allowed to implement just some of them, say CHAR_BIT == 32 you don't get types narrower than that
2012-08-03 14:30:54	dobby156	ville: interesting
2012-08-03 14:31:06	<--	ccube (ccube@nx.ccube.de) has quit (Remote host closed the connection)
2012-08-03 14:31:50	<--	magnet17_ (~magnet@216-246-251-152.cpe.distributel.net) has quit (Quit: Colloquy for iPod touch - http://colloquy.mobi)
2012-08-03 14:32:36	DevWouter	int can be 16 bits, 32 bits and 64 bits because it depends on the platform. Personally I think that is nuts. So why standarize threads but not int?
2012-08-03 14:32:59	ciaranm	there are standard sized ints if you need them
2012-08-03 14:33:05	ville	DevWouter: they just did standardize "int" in the form of the exact sized typedefs
2012-08-03 14:33:29	ville	now I would have liked them to be actual types not typedefs but that's another matter
2012-08-03 14:33:30	<--	sohail (~sohail@unaffiliated/sohail) has quit (Ping timeout: 248 seconds)
2012-08-03 14:33:53	DevWouter	Precise my points. They didn't standarize something, they created new standards.
2012-08-03 14:34:01	DevWouter	*Precisly
2012-08-03 14:34:14	ciaranm	...because the size of an int isn't standard
2012-08-03 14:34:24	ciaranm	if you standardised to 32 bits, you'd be stuck with the wrong size int, like java is
2012-08-03 14:34:31	arossouw	what does this mean (*Class).getRecord f.store(string)
2012-08-03 14:34:36	ciaranm	and had they done it twenty years ago, we'd be stuck with 16 bits, which is even worse
2012-08-03 14:34:55	ville	I don't follow that logic? Standards evolve and try to follow practices found useful from the industry. For backwards compatibility it sometimes means they can't rewrite the definition of something established and have to add new definition.
2012-08-03 14:35:01	mgaunard_	ciaranm: it is standard, it is sizeof(int)
2012-08-03 14:35:08	-->	nemesit|osx (~nemesit@fbivpn.informatik.uni-hamburg.de) has joined ##c++
2012-08-03 14:35:15	-->	php_freek (~Adium@208.95.30.82) has joined ##c++
2012-08-03 14:35:19	-->	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2012-08-03 14:35:27	-->	elsewho (~elsewho@gna.informatik.tu-freiberg.de) has joined ##c++
2012-08-03 14:35:28	<--	nemesit|osx (~nemesit@fbivpn.informatik.uni-hamburg.de) has quit (Client Quit)
2012-08-03 14:35:37	<--	paullik (~paullik@unaffiliated/paullik) has quit (Ping timeout: 240 seconds)
2012-08-03 14:35:39	mgaunard_	ville: int64_t is not available if CHAR_BIT is 16, 32 or 64?
2012-08-03 14:36:09	ville	mgaunard_: that's what I started to question after my statement whether only providing the exact typedefs partially is ok
2012-08-03 14:36:18	<--	nemesit (~nemesit@fbivpn.informatik.uni-hamburg.de) has quit (Read error: Operation timed out)
2012-08-03 14:36:45	ville	I don't recall the exact wording from the standard and don't have the time to look it up right now
2012-08-03 14:37:11	ville	guess I should
2012-08-03 14:37:25	-->	ccube (ccube@nx.ccube.de) has joined ##c++
2012-08-03 14:37:29	ciaranm	i'm still waiting for the dead tree standard
2012-08-03 14:37:53	ville	you going to get that one?
2012-08-03 14:38:04	-->	magellanicloud (~magellani@HSI-KBW-091-089-175-206.hsi2.kabel-badenwuerttemberg.de) has joined ##c++
2012-08-03 14:38:06	ville	then tattoo the contents
2012-08-03 14:38:13	Sausage	What's the correct round-about way to get this to work?  template <class T> struct Foo { operator typename enable_if<Trait<T>::value, U*>() { ... } };
2012-08-03 14:38:20	Sausage	for Foo<int>, if Traits<int>::value is true, Foo<int>::operator U*() is available
2012-08-03 14:38:38	DevWouter	Hmm... backwards compatible. Seems like it is a value and a debt at the same time.
2012-08-03 14:38:45	dobby156	ville: perhaps it is case that if you CHAR_BIT!=8 then you are probably working on some sort of specialist platform and should give up genericness
2012-08-03 14:39:10	dobby156	I'll crack open the standard and see what it says
2012-08-03 14:39:14	mgaunard_	why do you want to kill so many trees ciaranm
2012-08-03 14:39:41	ciaranm	mgaunard_: intimidation
2012-08-03 14:40:01	mgaunard_	dobby156: even when you use special platforms you're quite happy if you can reuse code as-is
2012-08-03 14:40:03	ciaranm	also because i refuse to buy a kindle until i can buy a book and get the ebook version for either free or a quid extra
2012-08-03 14:42:08	Arafangion	I refuse to buy PDF's for almost the *physical* price.
2012-08-03 14:42:25	DevWouter	I refuse PDF just as a whole.
2012-08-03 14:42:37	ville	yeah the ~300 is insane for a pdf
2012-08-03 14:43:06	<--	julmuri (~kamazharr@b881.ip15.netikka.fi) has quit (Ping timeout: 248 seconds)
2012-08-03 14:43:48	Airells	if something is in the google then it is a free to download
2012-08-03 14:44:22	ville	Sure nothing against pirating. This channel however isn't the venue for it.
2012-08-03 14:44:49	ville	wonder if by the next time new standard drops they might have been able to open it up properly
2012-08-03 14:45:20	-->	LordShiva (~Shiva@212.200.54.115) has joined ##c++
2012-08-03 14:45:32	DevWouter	ville: Yeah, I don't see why the standard is so "half-closed"
2012-08-03 14:45:33	<--	Areks (~Areks@rs.gridnine.com) has quit (Ping timeout: 272 seconds)
2012-08-03 14:45:42	ville	ISO's fault
2012-08-03 14:46:11	-->	izhak (~izhak@188.244.178.128) has joined ##c++
2012-08-03 14:46:12	Airells	are there any statistic how many companies had bought c++ standard?
2012-08-03 14:46:29	DevWouter	That would be something I'm actually intressted in knowing.
2012-08-03 14:46:41	-->	Questutis (~quatrux@78-58-71-126.static.zebra.lt) has joined ##c++
2012-08-03 14:46:49	ville	Doubt it. The best part is that those who have representatives in the committee get it for free anyway.
2012-08-03 14:47:04	<--	dobby156 (~dobson@host90-152-3-218.ipv4.regusnet.com) has quit (Ping timeout: 255 seconds)
2012-08-03 14:47:36	DevWouter	Well, that I can understand.
2012-08-03 14:47:38	-->	MaNI (~MaNI@41.164.20.246) has joined ##c++
2012-08-03 14:47:47	izhak	Techno-bible.
2012-08-03 14:48:04	izhak	Techno-religion.
2012-08-03 14:48:06	Sausage	Answering myself... template <class ConvT, typename = typename std::enable_if<std::is_same<T, U*>::value>::type, typename = typename std::enable_if<Trait<T>::value>::type> operator ConvT() { ... }
2012-08-03 14:48:10	Sausage	But not working on gcc
2012-08-03 14:48:36	ville	Sausage: perhaps a complete testcase on ideone.com probably gets more interest
2012-08-03 14:48:41	DevWouter	But why is the C++ standard not free is something I don't get. The HTML standard is free.
2012-08-03 14:48:48	joel_falcou	ask ISO
2012-08-03 14:48:52	Sausage	'sok, just another thing gcc doesn't get right.
2012-08-03 14:48:58	<--	maligree (~maligree@fedora/maligree) has quit (Quit: I've had it.)
2012-08-03 14:49:13	DevWouter	joel_falcou: Hmm, good idea.
2012-08-03 14:49:23	DevWouter	!standard
2012-08-03 14:49:25	nolyc	ISO restricts distribution of C++ standards and recent drafts. You can buy C++11 at http://tinyurl.com/isocxx11 for ~290 EUR, or C++03 at http://tinyurl.com/isocxx03 for 30 USD. The least outdated freely available draft is n3242, downloadable at http://tinyurl.com/4hsj7sd .
2012-08-03 14:50:05	-->	dobby156 (~dobson@host90-152-3-218.ipv4.regusnet.com) has joined ##c++
2012-08-03 14:51:10	<--	Griwes (~griwes@unaffiliated/griwes) has quit (Read error: Connection reset by peer)
2012-08-03 14:51:14	-->	Bacalli (~Bacalli@unaffiliated/bacalli) has joined ##c++
2012-08-03 14:51:18	-->	tjadc (~quassel@196-215-115-142.dynamic.isadsl.co.za) has joined ##c++
2012-08-03 14:51:41	-->	ffsfreenode (3e53e65f@gateway/web/freenode/ip.62.83.230.95) has joined ##c++
2012-08-03 14:51:45	-->	Griwes (~griwes@unaffiliated/griwes) has joined ##c++
2012-08-03 14:52:20	<--	elsewho (~elsewho@gna.informatik.tu-freiberg.de) has quit (Ping timeout: 248 seconds)
2012-08-03 14:53:55	DevWouter	2.21   Why aren’t ISO standards free?
2012-08-03 14:53:55	DevWouter	ISO standards cost money to develop, publish and distribute. Someone has to pay. The current system whereby users are requested to pay for the standards they use, not only sustains the development process but also, very importantly, ensures that the balance of independent vs. government, private vs. public interests can be maintained.
2012-08-03 14:54:23	dobby156	DevWouter: ISO makes money some how
2012-08-03 14:54:42	ville	hookers and blow ain't free
2012-08-03 14:54:59	dobby156	ville: true
2012-08-03 14:55:10	<--	Matthias|PC (~Matthias@242.176-243-81.adsl-dyn.isp.belgacom.be) has quit (Ping timeout: 256 seconds)
2012-08-03 14:55:19	j`ey	if only :(
2012-08-03 14:55:37	<--	glenfe_ (~glen@c-76-28-199-49.hsd1.wa.comcast.net) has quit (Ping timeout: 256 seconds)
2012-08-03 14:55:46	-->	Henke37b (~Henrik@90-230-202-243-no203.tbcn.telia.com) has joined ##c++
2012-08-03 14:55:53	dobby156	j`ey: morning
2012-08-03 14:55:57	DevWouter	I think the answer is bullshit.
2012-08-03 14:56:06	j`ey	dobby156: yo
2012-08-03 14:57:11	DevWouter	There are already people investing in it, they already make money because of their products. Besides there are other and better ways to make money.
2012-08-03 14:57:20	DevWouter	Hell, even more money.
2012-08-03 14:57:40	<--	Henke37 (~Henrik@90-230-202-243-no203.tbcn.telia.com) has quit (Ping timeout: 248 seconds)
2012-08-03 14:57:46	-->	nemesit (~nemesit@fbivpn.informatik.uni-hamburg.de) has joined ##c++
2012-08-03 14:58:08	DevWouter	Why not add "ads" in the free to download standard. More coverage, more popularity and more money.
2012-08-03 14:58:39	dobby156	DevWouter: gross
2012-08-03 14:58:48	<--	damir__ (~damir@217-72-91-162.ipv4.tusmobil.si) has quit (Quit: Leaving.)
2012-08-03 14:58:55	-->	pmenon (~pmenon@75.98.196.98) has joined ##c++
2012-08-03 14:59:03	ciaranm	ENLARGE YOUR POINTERS OVERNIGHT
2012-08-03 14:59:06	Airells	why not make a dotation site at the last page of standard, big corporations will pay well for that kind of advert
2012-08-03 14:59:37	ffsfreenode	hi everyone, I have a code like http://pastebin.com/eFgd4fvn (just 3 lines basically). Does anyone know why std::list<char> passed by value is not copied?
2012-08-03 14:59:43	RePaste	ffsfreenode: The paste eFgd4fvn has been moved to http://ideone.com/hDJk8 (see http://tinyurl.com/yv88ul for why)
2012-08-03 14:59:51	DevWouter	Point is that now I want to read the standard but I don't want to pay for it. And it is not something I can find in the libraries :(
2012-08-03 14:59:55	dobby156	DevWouter: better, they should just charge commerical members of the standard commitee a fee relative to company size/income
2012-08-03 15:00:14	DevWouter	dobby156: I thought about that but it might hurt the standard.
2012-08-03 15:00:39	DevWouter	Besides... They already do that.
2012-08-03 15:00:42	-->	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has joined ##c++
2012-08-03 15:00:43	<--	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has quit (Changing host)
2012-08-03 15:00:43	-->	sohail (~sohail@unaffiliated/sohail) has joined ##c++
2012-08-03 15:00:46	DevWouter	So disregard that
2012-08-03 15:01:21	-->	Matthias|PC (~Matthias@18.232-243-81.adsl-dyn.isp.belgacom.be) has joined ##c++
2012-08-03 15:01:29	 *	arossouw still furious at thief for stealing galaxy s2 phone
2012-08-03 15:01:34	-->	scai (~scai@erft-5d80f5f5.pool.mediaWays.net) has joined ##c++
2012-08-03 15:01:54	-->	melba (~melba@unaffiliated/lazz0) has joined ##c++
2012-08-03 15:01:56	<--	Agiofws (~Agiofws@athedsl-434264.home.otenet.gr) has quit (Ping timeout: 265 seconds)
2012-08-03 15:01:59	dobby156	ffsfreenode: can you make a runnable example which run and displays your actual problme
2012-08-03 15:02:12	ffsfreenode	sure, one minute
2012-08-03 15:02:39	<--	hz (~hz@unaffiliated/hz) has quit (Ping timeout: 272 seconds)
2012-08-03 15:03:30	<--	LucasCampos (~lucas@187.112.2.21) has left ##c++
2012-08-03 15:03:42	--	Hubarz is now known as Hubarz|RTL
2012-08-03 15:04:07	-->	apparat (~para@port-83-236-166-89.static.qsc.de) has joined ##c++
2012-08-03 15:04:10	<--	tjadc (~quassel@196-215-115-142.dynamic.isadsl.co.za) has quit (Ping timeout: 244 seconds)
2012-08-03 15:04:33	-->	aLeSD (~alex@12.207.22.82) has joined ##c++
2012-08-03 15:04:35	-->	hz (~hz@unaffiliated/hz) has joined ##c++
2012-08-03 15:06:08	-->	ennui (~ennui@ip-178-200-40-34.unitymediagroup.de) has joined ##c++
2012-08-03 15:06:34	<--	dobby156 (~dobson@host90-152-3-218.ipv4.regusnet.com) has quit (Ping timeout: 248 seconds)
2012-08-03 15:06:34	<--	JCBCIV (JCBCIV@you.dance.like.a.jumpingcrab.com) has quit (Ping timeout: 260 seconds)
2012-08-03 15:07:13	-->	dydt (~dydt@rrcs-24-173-170-194.se.biz.rr.com) has joined ##c++
2012-08-03 15:07:48	<--	kcj (~casey@unaffiliated/kcj) has quit (Ping timeout: 248 seconds)
2012-08-03 15:08:35	-->	foor (~user@106.3.47.147) has joined ##c++
2012-08-03 15:09:01	<--	pretty_function (~iHackiOS@61.12.96.10) has quit (Remote host closed the connection)
2012-08-03 15:09:04	<--	obs (~chatzilla@201.pool85-53-64.dynamic.orange.es) has quit (Quit: ChatZilla 0.9.87 [Iceape 2.7.5/20120608075204])
2012-08-03 15:09:17	dydt	Hi, I have a question about template template arguments:  http://pastebin.com/0kcZvtPd
2012-08-03 15:09:21	RePaste	dydt: The paste 0kcZvtPd has been moved to http://ideone.com/o7h1h (see http://tinyurl.com/yv88ul for why)
2012-08-03 15:09:28	-->	kranthi (~kumarkun@a91-155-189-100.elisa-laajakaista.fi) has joined ##c++
2012-08-03 15:09:42	pticochon	why is boost so incredibly great?
2012-08-03 15:10:11	Airells	dydt you mean that you cant use temporary object as a template argument?
2012-08-03 15:10:20	ciaranm	because you have low expectations
2012-08-03 15:10:31	<--	Guest54087 (~Rajesh@117.203.21.191) has quit (Quit: Leaving to Quit)
2012-08-03 15:10:57	-->	Synthead (~max@107.7.53.122) has joined ##c++
2012-08-03 15:11:02	dydt	Airells:  I would like the Bar class to only accept Foo's as its template argument
2012-08-03 15:11:06	ffsfreenode	Here is a working example dobby156 : http://ideone.com/MY7Qr
2012-08-03 15:11:07	<--	xConMz (~xConMz@unaffiliated/xconmz) has quit (Excess Flood)
2012-08-03 15:11:12	DevWouter	pticochon: Look at what boost does and rephrase the question.
2012-08-03 15:11:13	-->	xConMz (~xConMz@unaffiliated/xconmz) has joined ##c++
2012-08-03 15:11:37	ffsfreenode	output is incorrect as it is not copying by value a std::list<char>
2012-08-03 15:11:46	Airells	dydt only Foo's so why you need then template?
2012-08-03 15:11:57	pticochon	DevWouter: AFAIK it does pretty much everything
2012-08-03 15:12:10	-->	d3nys (~den@93-136-104-104.adsl.net.t-com.hr) has joined ##c++
2012-08-03 15:12:39	dydt	Airells:  This is a simplified version.  In my actual use case, Bar inherits from a template class that takes in F as its template argument
2012-08-03 15:12:42	ffsfreenode	I thought that all STL containers are copied if passed by value, but seems that list are not in this case, so I am clearly missing something
2012-08-03 15:13:15	DevWouter	pticochon: So there is your answer ;)
2012-08-03 15:13:19	pticochon	;)
2012-08-03 15:13:50	Airells	dydt as far as i undetrstand you, you need enable_if
2012-08-03 15:14:05	et	dydt: do you want to bail out if a "wrong" class gets passed, or do you want to select another overload?
2012-08-03 15:14:11	-->	clau (~clau@mordor.getodata.ro) has joined ##c++
2012-08-03 15:14:39	dydt	et:  If a non Foo gets passed, I need it to be a compile error
2012-08-03 15:15:31	<--	iLogical (~iLogical@unaffiliated/ilogical) has quit (Quit: Leaving)
2012-08-03 15:15:36	-->	dobby156 (~dobson@host90-152-3-218.ipv4.regusnet.com) has joined ##c++
2012-08-03 15:15:39	ffsfreenode	in fact it is printed 4 times, instead of 3, which means there is dummy value on list for characters (return carriage as last character)
2012-08-03 15:15:39	et	dydt: in the that case, BOOST_MPL_ASSERT((boost::is_base_of<A,B>)); should do the trick
2012-08-03 15:16:11	Airells	http://en.cppreference.com/w/cpp/types/is_base_of
2012-08-03 15:17:10	dydt	ok ty both :)
2012-08-03 15:17:19	-->	Jeaye (~Jeaye@rrcs-208-105-169-77.nys.biz.rr.com) has joined ##c++
2012-08-03 15:17:29	-->	antto (~IDX@vlcom-cable2.bgwan.com) has joined ##c++
2012-08-03 15:17:56	<--	sohail (~sohail@unaffiliated/sohail) has quit (Ping timeout: 248 seconds)
2012-08-03 15:18:26	DevWouter	ffsfreenode: The problem is that you copy the list and the iterator is unique to the instance.
2012-08-03 15:18:50	-->	klocatelli (~irc@adsl-75-18-174-254.dsl.pltn13.sbcglobal.net) has joined ##c++
2012-08-03 15:18:53	<--	assertsmart (~assertsma@78.97.253.170) has quit (Quit: KVIrc 4.0.2 Insomnia http://www.kvirc.net/)
2012-08-03 15:20:04	-->	vishesh (~vishesh@202.142.98.2) has joined ##c++
2012-08-03 15:20:58	<--	anatolys (~stranger@mail.rlisystems.ru) has quit (Quit: Leaving.)
2012-08-03 15:21:39	ffsfreenode	DevWouter: if I understand you right you are saying that list is copied but iterator is invalid, correct? So I am erasing initial list values only?
2012-08-03 15:22:39	ffsfreenode	but I still don't understand why list is noy copied in any case. I mean if I print values between lines 15 and 16, it would printa reduced version of the list
2012-08-03 15:22:41	-->	65MAA11RR (~assertsma@78.97.253.170) has joined ##c++
2012-08-03 15:22:43	DevWouter	Partly.
2012-08-03 15:22:57	ffsfreenode	and that is what I am using as function argument
2012-08-03 15:23:28	DevWouter	The iterator is intended for the original list. But you try to remove it for another one and that is not allowed.
2012-08-03 15:23:55	<--	Hubarz|RTL (~opera@p5DD06C4D.dip.t-dialin.net) has quit (Read error: Connection reset by peer)
2012-08-03 15:24:08	-->	Hubarz|RTL (~opera@p5DD06C4D.dip.t-dialin.net) has joined ##c++
2012-08-03 15:24:11	DevWouter	The reason why it runs four times. Is because word.end() is always the same even if copied.
2012-08-03 15:25:04	DevWouter	VS2010 complied as soon as it reached: "if(it==word.end())" saying that the iterators were not compatible.
2012-08-03 15:25:20	ffsfreenode	I see, so my word.erase(it) is not valid on erase I see
2012-08-03 15:25:48	ffsfreenode	mmm appreciate your help DevWouter
2012-08-03 15:25:50	DevWouter	No, your it is not valid inside that function at all.
2012-08-03 15:26:10	-->	jessica_pp (~jessica_p@HSI-KBW-134-3-229-63.hsi14.kabel-badenwuerttemberg.de) has joined ##c++
2012-08-03 15:26:25	DevWouter	ffsfreenode: No problem. It was an interresting one
2012-08-03 15:26:34	-->	paullik (~paullik@unaffiliated/paullik) has joined ##c++
2012-08-03 15:27:04	<--	schtobia (~quassel@piratenpartei/BY/schtobia) has quit (Remote host closed the connection)
2012-08-03 15:27:52	<--	jessica_pp (~jessica_p@HSI-KBW-134-3-229-63.hsi14.kabel-badenwuerttemberg.de) has left ##c++
2012-08-03 15:28:03	<--	Josef__K (~jeremy@124-148-191-187.dyn.iinet.net.au) has quit (Ping timeout: 245 seconds)
2012-08-03 15:29:54	<--	scai (~scai@erft-5d80f5f5.pool.mediaWays.net) has left ##c++ ("[IRSSI]")
2012-08-03 15:31:01	<--	KoVadim (~Vadim@195.138.64.24) has quit (Quit: KoVadim)
2012-08-03 15:31:38	-->	magnet17_ (~magnet@216-246-251-152.cpe.distributel.net) has joined ##c++
2012-08-03 15:31:50	-->	salout (~rriemann@naqasl.physik.hu-berlin.de) has joined ##c++
2012-08-03 15:31:59	salout	Do you know of some c-compatible library to do carter-wegman authentication?
2012-08-03 15:32:11	<--	magellanicloud (~magellani@HSI-KBW-091-089-175-206.hsi2.kabel-badenwuerttemberg.de) has quit (Ping timeout: 252 seconds)
2012-08-03 15:32:16	-->	pk47 (~pk47@pcfr33.physik.uni-freiburg.de) has joined ##c++
2012-08-03 15:32:43	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Ping timeout: 246 seconds)
2012-08-03 15:32:46	-->	simonsays1980 (~simonzehn@vpn82-209.vpn.uni-koeln.de) has joined ##c++
2012-08-03 15:33:02	magnet17_	salout: There is another channel for C
2012-08-03 15:33:37	-->	Patteh (~BOB@cpc9-hari15-2-0-cust297.20-2.cable.virginmedia.com) has joined ##c++
2012-08-03 15:34:09	salout	magnet17_: c++ is even better than c, so I asked here first.
2012-08-03 15:34:49	-->	FunnyLookinHat (~funnylook@ubuntu/member/funnylookinhat) has joined ##c++
2012-08-03 15:35:21	Jeaye	-.O
2012-08-03 15:35:36	magnet17_	Yes but you will more likely be able to get help if you ask in a proper place
2012-08-03 15:36:20	 *	DevWouter joins #carter-wegman channel
2012-08-03 15:36:50	-->	glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2012-08-03 15:37:03	-->	hilltopcreature (4c1ed23d@gateway/web/freenode/ip.76.30.210.61) has joined ##c++
2012-08-03 15:37:13	<--	wobr (~william.o@87-194-166-48.bethere.co.uk) has quit (Ping timeout: 245 seconds)
2012-08-03 15:37:54	<--	clau (~clau@mordor.getodata.ro) has quit (Quit: Leaving)
2012-08-03 15:38:25	<--	Arafangion (~Arafangio@220-244-108-23.static.tpgi.com.au) has quit (Remote host closed the connection)
2012-08-03 15:39:17	solrize	http://gladman.plushost.co.uk/oldsite/AES/index.php
2012-08-03 15:39:41	solrize	there may be a crypto channel
2012-08-03 15:39:59	solrize	in fact there is, ##crypto
2012-08-03 15:40:01	<--	simonsays1980 (~simonzehn@vpn82-209.vpn.uni-koeln.de) has quit (Quit: simonsays1980)
2012-08-03 15:40:06	-->	qdii (~qdii@juv34-1-82-225-183-37.fbx.proxad.net) has joined ##c++
2012-08-03 15:40:24	-->	EvilPenguin (~EvilPengu@206.169.57.98) has joined ##c++
2012-08-03 15:40:26	<--	qdii (~qdii@juv34-1-82-225-183-37.fbx.proxad.net) has quit (Client Quit)
2012-08-03 15:40:43	<--	W0rmDrink (~iwana@unaffiliated/wormdrink) has quit (Remote host closed the connection)
2012-08-03 15:41:18	-->	LNCP (~LNCP@d83-183-127-178.cust.tele2.se) has joined ##c++
2012-08-03 15:42:00	-->	W0rmDrink (~iwana@unaffiliated/wormdrink) has joined ##c++
2012-08-03 15:42:00	-->	Patfeesh|SC2 (~BOB@cpc9-hari15-2-0-cust297.20-2.cable.virginmedia.com) has joined ##c++
2012-08-03 15:42:16	-->	irc_ (~irc@adsl-75-18-174-254.dsl.pltn13.sbcglobal.net) has joined ##c++
2012-08-03 15:42:26	-->	thelazydeveloper (~lazydevel@unaffiliated/thelazydeveloper) has joined ##c++
2012-08-03 15:42:51	-->	qdii (~qdii@juv34-1-82-225-183-37.fbx.proxad.net) has joined ##c++
2012-08-03 15:42:53	<--	Patteh (~BOB@cpc9-hari15-2-0-cust297.20-2.cable.virginmedia.com) has quit (Ping timeout: 255 seconds)
2012-08-03 15:43:05	<--	qdii (~qdii@juv34-1-82-225-183-37.fbx.proxad.net) has quit (Client Quit)
2012-08-03 15:43:13	<--	arossouw (~arossouw@196.36.203.18) has quit (Quit: leaving)
2012-08-03 15:44:18	<--	klocatelli (~irc@adsl-75-18-174-254.dsl.pltn13.sbcglobal.net) has quit (Ping timeout: 245 seconds)
2012-08-03 15:44:59	-->	kkimlabs (~kkimlabs@VPNRASA-WLAN-01.NATPOOL.NYU.EDU) has joined ##c++
2012-08-03 15:46:23	<--	Patfeesh|SC2 (~BOB@cpc9-hari15-2-0-cust297.20-2.cable.virginmedia.com) has quit (Ping timeout: 245 seconds)
2012-08-03 15:46:54	--	Henke37b is now known as henke37
2012-08-03 15:47:00	-->	iLogical (~iLogical@unaffiliated/ilogical) has joined ##c++
2012-08-03 15:48:08	-->	dublisk (~dublik@CPE185933466909-CM185933466906.cpe.net.cable.rogers.com) has joined ##c++
2012-08-03 15:48:09	<--	nemesit (~nemesit@fbivpn.informatik.uni-hamburg.de) has quit (Quit: Leaving...)
2012-08-03 15:50:08	-->	rogues (~rogues@183.83.123.154) has joined ##c++
2012-08-03 15:50:14	-->	rgenito (~rgenito@75-146-137-162-WestFlorida.hfc.comcastbusiness.net) has joined ##c++
2012-08-03 15:50:34	<--	rgenito (~rgenito@75-146-137-162-WestFlorida.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2012-08-03 15:51:01	-->	rgenito (~rgenito@static-71-100-91-34.tampfl.fios.verizon.net) has joined ##c++
2012-08-03 15:51:24	-->	ratatata (~nu@88-222-70-216.meganet.lt) has joined ##c++
2012-08-03 15:51:46	<--	d3nys (~den@93-136-104-104.adsl.net.t-com.hr) has quit (Quit: Leaving)
2012-08-03 15:51:48	<--	melba (~melba@unaffiliated/lazz0) has quit (Ping timeout: 245 seconds)
2012-08-03 15:54:44	<--	magnet17_ (~magnet@216-246-251-152.cpe.distributel.net) has quit (Quit: Colloquy for iPod touch - http://colloquy.mobi)
2012-08-03 15:55:08	<--	kkimlabs (~kkimlabs@VPNRASA-WLAN-01.NATPOOL.NYU.EDU) has quit (Ping timeout: 245 seconds)
2012-08-03 15:55:22	<--	fisted (~fisted@unaffiliated/fisted) has quit (Remote host closed the connection)
2012-08-03 15:55:42	-->	fisted (~fisted@unaffiliated/fisted) has joined ##c++
2012-08-03 15:56:41	-->	zamn (~zamn@zamn.net) has joined ##c++
2012-08-03 15:56:42	<--	zamn (~zamn@zamn.net) has quit (Changing host)
2012-08-03 15:56:42	-->	zamn (~zamn@unaffiliated/zamn) has joined ##c++
2012-08-03 15:57:13	<--	an0xx (~an0xx@193.108.249.9) has quit (Quit: an0xx)
2012-08-03 15:58:50	-->	Astus (~Astus@79.117.191.227) has joined ##c++
2012-08-03 15:59:13	<--	dobby156 (~dobson@host90-152-3-218.ipv4.regusnet.com) has quit (Quit: leaving)
2012-08-03 15:59:50	-->	JSchwag (~JSchwag@S01060026f3e11bf0.vn.shawcable.net) has joined ##c++
2012-08-03 16:00:05	-->	benkay86 (d066c868@gateway/web/freenode/ip.208.102.200.104) has joined ##c++
2012-08-03 16:00:57	-->	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has joined ##c++
2012-08-03 16:01:15	-->	SQLStud (~lunchtime@64.20.237.230) has joined ##c++
2012-08-03 16:01:46	<--	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has quit (Quit: Leaving)
2012-08-03 16:01:55	<--	pk47 (~pk47@pcfr33.physik.uni-freiburg.de) has quit (Quit: Leaving.)
2012-08-03 16:02:06	-->	pk47 (~pk47@pcfr33.physik.uni-freiburg.de) has joined ##c++
2012-08-03 16:03:07	<--	mire_ (~mire@85.222.222.254) has quit (Ping timeout: 240 seconds)
2012-08-03 16:03:09	<--	JSchwag (~JSchwag@S01060026f3e11bf0.vn.shawcable.net) has quit (Read error: Connection reset by peer)
2012-08-03 16:03:28	-->	dzonder (ajc@62.121.73.12) has joined ##c++
2012-08-03 16:03:29	<--	dfg_ (974b3aa3@gateway/web/freenode/ip.151.75.58.163) has quit (Quit: Page closed)
2012-08-03 16:04:20	<--	shintah (~oer894n@m37-2-208-20.cust.tele2.se) has quit (Ping timeout: 248 seconds)
2012-08-03 16:05:47	-->	elsewho (~elsewho@gna.informatik.tu-freiberg.de) has joined ##c++
2012-08-03 16:05:58	<--	Jeaye (~Jeaye@rrcs-208-105-169-77.nys.biz.rr.com) has quit (Ping timeout: 245 seconds)
2012-08-03 16:06:37	<--	Rapp (~rapp@87.118.108.45) has quit (Ping timeout: 272 seconds)
2012-08-03 16:07:43	-->	Ibris (5125f0ae@gateway/web/freenode/ip.81.37.240.174) has joined ##c++
2012-08-03 16:07:47	-->	kkimlabs (~kkimlabs@NYUFGA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has joined ##c++
2012-08-03 16:07:54	<--	asakura (~asakura@gateway/tor-sasl/asakura) has quit (Ping timeout: 276 seconds)
2012-08-03 16:08:01	-->	sergapo (~quassel@200.9.100.75) has joined ##c++
2012-08-03 16:08:01	<--	vener (~vener@lns-bzn-49f-62-147-170-243.adsl.proxad.net) has quit (Quit: Leaving)
2012-08-03 16:08:30	<--	alelos (~alelos@145.221.193.38) has quit (Quit: WeeChat 0.3.8)
2012-08-03 16:08:39	-->	trigger_ (~trigger@gateway/tor-sasl/trigger) has joined ##c++
2012-08-03 16:08:40	-->	SeanWang1 (~xuewen@114.245.202.131) has joined ##c++
2012-08-03 16:08:43	<--	SeanWang1 (~xuewen@114.245.202.131) has quit (Max SendQ exceeded)
2012-08-03 16:09:08	<--	foor (~user@106.3.47.147) has quit (Ping timeout: 248 seconds)
2012-08-03 16:09:12	<--	trigger (~trigger@gateway/tor-sasl/trigger) has quit (Ping timeout: 276 seconds)
2012-08-03 16:10:09	<--	drinkycrow (~whoreface@c-68-53-181-154.hsd1.il.comcast.net) has quit (Ping timeout: 260 seconds)
2012-08-03 16:10:14	-->	drinkycrow (~whoreface@c-68-53-181-154.hsd1.il.comcast.net) has joined ##c++
2012-08-03 16:10:28	-->	SeanWang1 (~xuewen@114.245.202.131) has joined ##c++
2012-08-03 16:10:28	<--	salout (~rriemann@naqasl.physik.hu-berlin.de) has quit (Read error: Operation timed out)
2012-08-03 16:10:34	<--	SeanWang1 (~xuewen@114.245.202.131) has quit (Max SendQ exceeded)
2012-08-03 16:11:54	-->	SeanWang1 (~xuewen@114.245.202.131) has joined ##c++
2012-08-03 16:12:01	<--	SeanWang1 (~xuewen@114.245.202.131) has quit (Max SendQ exceeded)
2012-08-03 16:12:22	<--	ineb_ (~ineb@flnb-5f770859.pool.mediaWays.net) has quit (Read error: Operation timed out)
2012-08-03 16:12:30	-->	Rapp (~rapp@87.118.108.45) has joined ##c++
2012-08-03 16:13:00	-->	deluge (765d6c9b@gateway/web/freenode/ip.118.93.108.155) has joined ##c++
2012-08-03 16:13:01	<--	vjn (~vjn@216.239.45.130) has quit (Quit: vjn)
2012-08-03 16:13:10	-->	SeanWang1 (~xuewen@114.245.202.131) has joined ##c++
2012-08-03 16:13:17	<--	SeanWang1 (~xuewen@114.245.202.131) has quit (Max SendQ exceeded)
2012-08-03 16:14:09	-->	klocatelli (~irc@adsl-75-18-174-254.dsl.pltn13.sbcglobal.net) has joined ##c++
2012-08-03 16:14:28	-->	S1G (~sig@123-3-92-106.static.dsl.dodo.com.au) has joined ##c++
2012-08-03 16:14:36	<--	S1G (~sig@123-3-92-106.static.dsl.dodo.com.au) has left ##c++
2012-08-03 16:14:58	<--	nierob_ (JNowacki@nat/trolltech/x-fttcwfmzqsaityus) has quit (Quit: Konversation terminated!)
2012-08-03 16:14:59	-->	SeanWang1 (~xuewen@114.245.202.131) has joined ##c++
2012-08-03 16:15:08	<--	SeanWang1 (~xuewen@114.245.202.131) has quit (Max SendQ exceeded)
2012-08-03 16:15:33	<--	irc_ (~irc@adsl-75-18-174-254.dsl.pltn13.sbcglobal.net) has quit (Ping timeout: 245 seconds)
2012-08-03 16:15:54	-->	SeanWang1 (~xuewen@114.245.202.131) has joined ##c++
2012-08-03 16:16:02	<--	SeanWang1 (~xuewen@114.245.202.131) has quit (Max SendQ exceeded)
2012-08-03 16:16:56	-->	SeanWang1 (~xuewen@114.245.202.131) has joined ##c++
2012-08-03 16:17:04	<--	SeanWang1 (~xuewen@114.245.202.131) has quit (Max SendQ exceeded)
2012-08-03 16:17:08	<--	Suchorski (regex@189-13-207-112.user.veloxzone.com.br) has quit
2012-08-03 16:17:30	-->	asakura (~asakura@gateway/tor-sasl/asakura) has joined ##c++
2012-08-03 16:17:34	<--	deluge (765d6c9b@gateway/web/freenode/ip.118.93.108.155) has quit (Client Quit)
2012-08-03 16:17:39	-->	smellynoser (~ashley@87-194-181-33.bethere.co.uk) has joined ##c++
2012-08-03 16:17:40	<--	dublisk (~dublik@CPE185933466909-CM185933466906.cpe.net.cable.rogers.com) has quit (Ping timeout: 248 seconds)
2012-08-03 16:19:06	--	Hubarz|RTL is now known as Hubarz
2012-08-03 16:19:07	<--	Mnabil (~sabayonus@41.234.70.40) has quit (Ping timeout: 240 seconds)
2012-08-03 16:19:10	-->	SeanWang1 (~xuewen@114.245.202.131) has joined ##c++
2012-08-03 16:19:18	<--	SeanWang1 (~xuewen@114.245.202.131) has quit (Max SendQ exceeded)
2012-08-03 16:19:22	-->	mire_ (~mire@85.222.222.254) has joined ##c++
2012-08-03 16:19:44	-->	SeanWang1 (~xuewen@114.245.202.131) has joined ##c++
2012-08-03 16:19:44	<--	DevWouter (~DevWouter@89.146.25.74) has quit
2012-08-03 16:19:52	<--	SeanWang1 (~xuewen@114.245.202.131) has quit (Max SendQ exceeded)
2012-08-03 16:20:50	-->	sohail (~sohail@unaffiliated/sohail) has joined ##c++
2012-08-03 16:20:50	-->	SeanWang1 (~xuewen@114.245.202.131) has joined ##c++
2012-08-03 16:20:56	<--	SeanWang1 (~xuewen@114.245.202.131) has quit (Max SendQ exceeded)
2012-08-03 16:21:18	-->	armyriad (~armyriad@96.246.248.43) has joined ##c++
2012-08-03 16:22:07	-->	SeanWang1 (~xuewen@114.245.202.131) has joined ##c++
2012-08-03 16:22:15	<--	SeanWang1 (~xuewen@114.245.202.131) has quit (Max SendQ exceeded)
2012-08-03 16:23:43	-->	cirrus] (Cirrus@unaffiliated/pur/x-3398080) has joined ##c++
2012-08-03 16:23:49	cirrus]	hi again
2012-08-03 16:24:04	<--	kkimlabs (~kkimlabs@NYUFGA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has quit (Remote host closed the connection)
2012-08-03 16:24:07	-->	SeanWang1 (~xuewen@114.245.202.131) has joined ##c++
2012-08-03 16:24:20	<--	nor5trom (~nor5trom@unaffiliated/nor5trom) has quit (Quit: 5ee ya.)
2012-08-03 16:24:30	-->	scai (~scai@p54B64895.dip.t-dialin.net) has joined ##c++
2012-08-03 16:24:52	<--	pk47 (~pk47@pcfr33.physik.uni-freiburg.de) has quit (Remote host closed the connection)
2012-08-03 16:25:03	-->	killer (~killer@111.93.59.214) has joined ##c++
2012-08-03 16:25:13	cirrus]	is there any standard algorithm which returns true if all elements are unique/returns first pair of iterators to same elements/kicks off same elements/something what checks is X unique?
2012-08-03 16:25:27	killer	hi.i m new to c++ i get folloeing...csn snyone help..:"http://pastebin.com/YgB04diE"
2012-08-03 16:25:29	RePaste	killer: The paste YgB04diE has been moved to http://ideone.com/WGPJF (see http://tinyurl.com/yv88ul for why)
2012-08-03 16:26:45	<--	benkay86 (d066c868@gateway/web/freenode/ip.208.102.200.104) has quit
2012-08-03 16:26:48	Ibris	killer: I don´t see any reference to those types in that paste
2012-08-03 16:27:06	mgaunard_	cirrus]: there is std::unique which will move the duplicate elements at the end. The input must be sorted.
2012-08-03 16:27:21	cirrus]	mgaunard_, thank you!
2012-08-03 16:27:48	cirrus]	killer, it works: http://ideone.com/EwKH5
2012-08-03 16:28:05	<--	FunnyLookinHat (~funnylook@ubuntu/member/funnylookinhat) has quit (Read error: Connection reset by peer)
2012-08-03 16:28:19	mgaunard_	cirrus]: I suggest you indent your code
2012-08-03 16:28:25	<--	dydt (~dydt@rrcs-24-173-170-194.se.biz.rr.com) has quit (Quit: Leaving)
2012-08-03 16:28:39	-->	FunnyLookinHat (~funnylook@ubuntu/member/funnylookinhat) has joined ##c++
2012-08-03 16:28:39	cirrus]	mgaunard_, it's not my code and it has been repasted by RePaste
2012-08-03 16:28:54	cirrus]	I've just removed info about compilation errors
2012-08-03 16:29:00	cirrus]	at bottom
2012-08-03 16:29:15	mgaunard_	that looks like fibonacci or something
2012-08-03 16:29:19	cirrus]	it is
2012-08-03 16:29:25	killer	cirrus]: sorry i posted wrong code "http://ideone.com/dJoD0"
2012-08-03 16:29:43	cirrus]	killer, one tip. remove "using namespace std;" from code. you anyway do std::cout.
2012-08-03 16:30:11	<--	k299 (~me@host-239.180-235-182.cable.dynamic.kbtelecom.net) has quit
2012-08-03 16:30:30	killer	cirrus]: i generally dun use std::cout ....i just used it to get more used to it
2012-08-03 16:30:39	-->	tjadc (~quassel@196-209-51-63.dynamic.isadsl.co.za) has joined ##c++
2012-08-03 16:30:39	cirrus]	ok
2012-08-03 16:30:54	Ibris	killer
2012-08-03 16:30:55	Ibris	int gagan; int killer; char mafia; gagan =10 ; killer=1000; mafia=15;
2012-08-03 16:31:11	Ibris	you must assign values inline if you´re in the global namespace
2012-08-03 16:31:25	Ibris	int gagan = 10;
2012-08-03 16:31:32	Ibris	etc
2012-08-03 16:31:44	cirrus]	killer, http://ideone.com/5nGsK
2012-08-03 16:31:46	cirrus]	works too
2012-08-03 16:31:51	<--	tjadc (~quassel@196-209-51-63.dynamic.isadsl.co.za) has quit (Client Quit)
2012-08-03 16:31:54	<--	wbooze (~wbooze@xdsl-84-44-177-72.netcologne.de) has quit (Ping timeout: 248 seconds)
2012-08-03 16:31:54	Ibris	also main must return int
2012-08-03 16:32:01	Ibris	int main()
2012-08-03 16:32:01	killer	Ibris : i can't first declare and then initialize in global dec
2012-08-03 16:32:13	Ibris	killer: exactly
2012-08-03 16:32:39	Ibris	you can declare them 1st and them initialize them on main
2012-08-03 16:32:42	-->	tjadc (~quassel@196-209-51-63.dynamic.isadsl.co.za) has joined ##c++
2012-08-03 16:32:59	-->	akashj87 (~akashj@59.177.6.176) has joined ##c++
2012-08-03 16:33:01	Ibris	or initialize them inline outside
2012-08-03 16:33:46	Ibris	not related to your issue: it´s generally a Bad Idea to use globals
2012-08-03 16:34:17	-->	magellanicloud (~magellani@HSI-KBW-091-089-175-206.hsi2.kabel-badenwuerttemberg.de) has joined ##c++
2012-08-03 16:34:22	Ibris	you probably want a struct instead of a namespace there
2012-08-03 16:34:38	killer	ok.....i will keep that in mind...i was just learning namespaces creations....
2012-08-03 16:34:53	cirrus]	http://ideone.com/38IiF <- can you tell me is this bunch of code clear?
2012-08-03 16:35:48	<--	killer (~killer@111.93.59.214) has quit (Quit: leaving)
2012-08-03 16:35:48	Ibris	cirrus]: what's with that?
2012-08-03 16:36:05	-->	awidegreen (~awidegree@h-85-176.a212.priv.bahnhof.se) has joined ##c++
2012-08-03 16:36:10	cirrus]	Ibris, tell me - can you understand it and is it clumsy?
2012-08-03 16:36:39	-->	RR42 (~quassel@46.0.20.28) has joined ##c++
2012-08-03 16:36:57	--	Raziel_ is now known as RazielZ
2012-08-03 16:37:04	--	RazielZ is now known as Raziel
2012-08-03 16:37:18	Ibris	you made it and want me to evaluate it, cirrus] ?
2012-08-03 16:37:59	cirrus]	Ibris, I know it sounds silly. Yeah. It's my first really OO application which has usage, and I want my code clear.
2012-08-03 16:38:23	Ibris	nah, not silly
2012-08-03 16:38:29	Ibris	just wanted to know the task at hand
2012-08-03 16:38:34	Ibris	let;s check then
2012-08-03 16:39:22	<--	TuTizz (~adrien@46.18.96.158) has quit (Quit: Bye)
2012-08-03 16:39:53	cirrus]	I know that I don't have some methods here, I made it previously, and I'll paste it soon here
2012-08-03 16:40:20	Ibris	Element is pure virtual class
2012-08-03 16:40:28	<--	Tuxist (~quassel@business-092-079-178-083.static.arcor-ip.net) has quit (Remote host closed the connection)
2012-08-03 16:40:30	Ibris	but it doesn't declare a virtual destructor
2012-08-03 16:40:38	Ibris	you might be leaking there
2012-08-03 16:40:43	-->	justakill (~freec@94.139.50.66) has joined ##c++
2012-08-03 16:41:05	-->	jgh-_ (~jgh-@cpe-76-166-214-151.socal.res.rr.com) has joined ##c++
2012-08-03 16:41:21	Ibris	your pure virtual methods needs to be declared as virtual
2012-08-03 16:41:44	cirrus]	oh, I forgot.
2012-08-03 16:41:48	cirrus]	yeah, it makes sense
2012-08-03 16:41:58	cirrus]	virtual functions should be virtual :P
2012-08-03 16:42:16	Ibris	void dump()         = 0; probably's a const method
2012-08-03 16:42:43	RokerHRO	well
2012-08-03 16:42:55	cirrus]	true
2012-08-03 16:42:57	-->	JCBCIV (JCBCIV@you.dance.like.a.jumpingcrab.com) has joined ##c++
2012-08-03 16:43:29	-->	Fireblasto (~Fiery@unaffiliated/fireblasto) has joined ##c++
2012-08-03 16:43:52	-->	paul424 (~chatzilla@91.207.68.2) has joined ##c++
2012-08-03 16:43:54	Ibris	sorry if I'm slow
2012-08-03 16:44:22	Ibris	the naming lacks coherence
2012-08-03 16:44:37	Ibris	class Element, class courageElement
2012-08-03 16:45:07	cirrus]	hmm, yeah
2012-08-03 16:45:24	cirrus]	what about renaming second to courageBadElement?
2012-08-03 16:45:36	Ibris	I mean, the caps
2012-08-03 16:45:40	cirrus]	oh
2012-08-03 16:46:13	<--	wobster (~jan@ls12nb9.cs.uni-dortmund.de) has quit (Remote host closed the connection)
2012-08-03 16:46:40	cirrus]	hmm... I decided to make special things (pure virtual classes, typedefs, defines) capital, but if it's a deal
2012-08-03 16:47:32	Ibris	you're puting a lot of usings in what seems to be a header file
2012-08-03 16:47:36	Ibris	check http://stackoverflow.com/questions/5849457/using-namespace-in-c-headers
2012-08-03 16:48:14	Ibris	you might as well just put "using namespace std;" in your cpp
2012-08-03 16:48:22	-->	wbooze (~wbooze@xdsl-87-79-249-110.netcologne.de) has joined ##c++
2012-08-03 16:48:48	-->	damir__ (~damir@tm.213.143.72.147.lc.telemach.net) has joined ##c++
2012-08-03 16:49:56	-->	baedert_ (~baedert@dslb-088-067-088-145.pools.arcor-ip.net) has joined ##c++
2012-08-03 16:49:57	Ibris	if you're using c++11 you should explicitly put "override" in your overrider methods
2012-08-03 16:50:30	<--	Sachiru (Sachiru@120.29.82.138) has quit (Quit: Shutting Down)
2012-08-03 16:50:56	Ibris	void add(pair<int, double> &i) {         workouts.push_back(i);     }
2012-08-03 16:51:12	-->	sachin (irc2gowebc@49.203.143.218) has joined ##c++
2012-08-03 16:51:13	Ibris	that would be a const pair<int, double> &
2012-08-03 16:51:17	cirrus]	ok
2012-08-03 16:51:39	Ibris	pair<int, double> &at (unsigned int i) {         int j = &workouts[i];         return j;     }
2012-08-03 16:51:42	Ibris	this makes no sense
2012-08-03 16:51:43	<--	Lillia7_ (~lillia7@6abb386d.t-net.ne.jp) has quit (Quit: Leaving...)
2012-08-03 16:51:50	Ibris	you're returning as int as a pair
2012-08-03 16:52:00	cirrus]	oh
2012-08-03 16:52:21	Ibris	and even then, you can't return an address to a local variable
2012-08-03 16:52:24	et	run codethrough your compiler first? ;)
2012-08-03 16:52:33	Ibris	please tell if something neds further explanation
2012-08-03 16:52:34	<--	jgh-_ (~jgh-@cpe-76-166-214-151.socal.res.rr.com) has quit (Quit: jgh-_)
2012-08-03 16:52:39	<--	baedert (~baedert@dslb-088-067-067-227.pools.arcor-ip.net) has quit (Ping timeout: 255 seconds)
2012-08-03 16:52:42	cirrus]	"return &workouts[i];" <- better?
2012-08-03 16:53:09	et	no
2012-08-03 16:53:22	Ibris	just return workouts[i]
2012-08-03 16:53:30	Ibris	size_t size() const {workouts.size();} -> missing return
2012-08-03 16:53:56	<--	archypetro (~hagrid@unaffiliated/archangelpetro) has quit (Quit: Leaving)
2012-08-03 16:54:05	cirrus]	hmm, maybe I'll compile it first
2012-08-03 16:54:14	Ibris	for (auto it = workouts.begin(), it < workouts.end(), it++)
2012-08-03 16:54:21	Ibris	the commas should be ;
2012-08-03 16:54:23	-->	archypetro (~hagrid@194.193.169.242) has joined ##c++
2012-08-03 16:54:24	<--	archypetro (~hagrid@194.193.169.242) has quit (Changing host)
2012-08-03 16:54:24	-->	archypetro (~hagrid@unaffiliated/archangelpetro) has joined ##c++
2012-08-03 16:54:55	Ibris	it's also advised to use std::begin(workouts) instead of workouts.begin()
2012-08-03 16:54:59	-->	oldtopman (~oldtopman@unaffiliated/oldtopman) has joined ##c++
2012-08-03 16:55:48	<--	ville (~ville@a88-113-0-43.elisa-laajakaista.fi) has quit (Quit:)
2012-08-03 16:56:00	<--	trigger_ (~trigger@gateway/tor-sasl/trigger) has quit (Ping timeout: 276 seconds)
2012-08-03 16:56:04	Ibris	i += (*it).first(); -> this is probably more readable as i+= it->first;
2012-08-03 16:56:25	Ibris	and first is not a function, if you're using std::pair
2012-08-03 16:56:36	cirrus]	I didn't know does iterators have operator->
2012-08-03 16:56:48	<--	LordShiva (~Shiva@212.200.54.115) has quit (Ping timeout: 245 seconds)
2012-08-03 16:57:04	Ibris	yup
2012-08-03 16:57:36	cirrus]	I'll fix this now in all bunches of code
2012-08-03 16:57:57	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2012-08-03 16:58:08	Ibris	you don't seem to be using bool isRandom, nextRandom;
2012-08-03 16:58:17	Ibris	it might be in the missing functions tho
2012-08-03 16:58:39	-->	Jeaye (~Jeaye@rrcs-208-105-169-77.nys.biz.rr.com) has joined ##c++
2012-08-03 16:58:45	cirrus]	yes
2012-08-03 16:59:16	<--	kranthi (~kumarkun@a91-155-189-100.elisa-laajakaista.fi) has quit (Ping timeout: 248 seconds)
2012-08-03 16:59:22	cirrus]	isRandom causes that it's used for calculations in other way, nextRandom saves in other way
2012-08-03 17:00:10	-->	tigger0jk (~tigger0jk@c-71-202-39-119.hsd1.ca.comcast.net) has joined ##c++
2012-08-03 17:00:15	Ibris	ok
2012-08-03 17:00:19	<--	jhoepken_ (~jhoepken@dslb-178-006-015-176.pools.arcor-ip.net) has quit (Ping timeout: 255 seconds)
2012-08-03 17:01:35	Hubarz	can i do select on a socket in one thread, and send() in another one?
2012-08-03 17:01:59	-->	nemesit (~nemesit@p5DC0D087.dip.t-dialin.net) has joined ##c++
2012-08-03 17:03:11	-->	LordShiva (~Shiva@212.200.54.115) has joined ##c++
2012-08-03 17:03:40	Ibris	yup Hubarz
2012-08-03 17:04:05	Ibris	(*workouts.end()).getTotalReps()  <- you can't dereference end for a container
2012-08-03 17:04:12	Ibris	it's one past the end, despite its name
2012-08-03 17:04:21	cirrus]	why? it isn't normal iterator?
2012-08-03 17:04:35	Ibris	it's an iterator
2012-08-03 17:04:46	Ibris	but it doesn't refer to actual data in the container
2012-08-03 17:05:10	Ibris	you can "use" iterators that are >= begin() and < end()
2012-08-03 17:05:17	cirrus]	ok
2012-08-03 17:05:18	hilltopcreature	cirrus]: "Returns an iterator referring to the past-the-end element in the vector container."
2012-08-03 17:05:24	-->	maplesoft (~maplesoft@175.110.67.3) has joined ##c++
2012-08-03 17:05:26	<--	maplesoft (~maplesoft@175.110.67.3) has left ##c++
2012-08-03 17:05:32	cirrus]	will *(x.end() - 1) work?
2012-08-03 17:05:33	Oxyd	Containers have .back() which returns a reference to the last element.
2012-08-03 17:05:38	-->	salout (~rriemann@91-65-223-29-dynip.superkabel.de) has joined ##c++
2012-08-03 17:05:41	cirrus]	oh
2012-08-03 17:05:49	Oxyd	If x.end() is a random-access iterator then *(x.end() - 1) will work, sure.
2012-08-03 17:06:17	-->	General1337 (~General13@71-93-97-115.dhcp.mtpk.ca.charter.com) has joined ##c++
2012-08-03 17:06:22	hilltopcreature	cirrus]: I'd use back() just for style, but that should be acceptable
2012-08-03 17:06:26	Oxyd	Also, if x is non-empty.
2012-08-03 17:06:39	cirrus]	back will be better I guess
2012-08-03 17:06:45	Oxyd	But x kind of has to be non-empty no matter which way you choose anyway.
2012-08-03 17:06:47	<--	shundread (~shundread@a91-155-237-147.elisa-laajakaista.fi) has quit (Quit: ->)
2012-08-03 17:07:12	cirrus]	in final it will check is container empty and it will throw if it is
2012-08-03 17:07:19	cirrus]	but now I'm making prototype
2012-08-03 17:07:31	Oxyd	Also, *std::prev(x.end()) would work with bi-directional iterators.
2012-08-03 17:08:19	-->	rurufufuss (~rurufufus@115-64-27-246.static.tpgi.com.au) has joined ##c++
2012-08-03 17:08:39	xissburg	!convert 385 lb-ft nm
2012-08-03 17:08:48	Ibris	double Exercise::getHardness(unsigned int forHowMuch = 5) {
2012-08-03 17:08:53	<--	LordShiva (~Shiva@212.200.54.115) has quit (Ping timeout: 245 seconds)
2012-08-03 17:09:00	Ibris	the default value goes in the declaration, not in the actual implementation
2012-08-03 17:09:09	cirrus]	ok
2012-08-03 17:09:44	<--	alanjf (~ajf@unaffiliated/alanjf) has quit (Quit: Lost terminal)
2012-08-03 17:09:50	<--	LAMMJohnson (ja@cpc11-nrwh10-2-0-cust397.4-4.cable.virginmedia.com) has quit (Read error: Operation timed out)
2012-08-03 17:10:32	<--	xivix (~mike@net-216-37-86-189.in-addr.worldspice.net) has quit (Quit: Leaving)
2012-08-03 17:10:35	Ibris	for (int i = result; total > 4; result += 0.9 * result, i--);
2012-08-03 17:10:41	Ibris	I smell an infinite loop here
2012-08-03 17:10:47	-->	xivix (~mike@net-216-37-86-189.in-addr.worldspice.net) has joined ##c++
2012-08-03 17:11:03	<--	dhruvasagar (~dhruvasag@122.167.80.117) has quit (Ping timeout: 246 seconds)
2012-08-03 17:11:37	hilltopcreature	Ibris: yikes
2012-08-03 17:11:57	-->	vjn (~vjn@108-225-17-247.lightspeed.sntcca.sbcglobal.net) has joined ##c++
2012-08-03 17:11:57	Ibris	he's learning
2012-08-03 17:12:00	Ibris	as we all are
2012-08-03 17:12:03	-->	jhoepken_ (~jhoepken@dslb-178-006-015-176.pools.arcor-ip.net) has joined ##c++
2012-08-03 17:12:07	cirrus]	yeah
2012-08-03 17:12:12		irc: disconnected from server
2012-08-13 08:16:54	-->	JohnHamelink (~JohnHamel@ks393762.kimsufi.com) has joined ##c++
2012-08-13 08:16:54	--	Topic for ##c++ is "ISO/IEC 14882:2011 (a.k.a. C++11) is PUBLISHED!!  || Can't speak? Identify to NickServ || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/ || other channels: ##c++-basic, ##c++-general, ##c++-social, ##iso-c++ || we don't do homework"
2012-08-13 08:16:54	--	Topic set by Eelis (~Eelis@unaffiliated/eelis) on Sat, 03 Sep 2011 19:59:56
2012-08-13 08:16:54	--	Nicks ##c++: [ace2001ac acrocity Adran Adrinael Agro aguai ahf aib|2 akiress alamar alastair AlbireoX_ alek_br AllenJB_ Alt_of_C1rl altin ambroff an0maly_ an0xx An_Ony_Moose anaconda Anasazi Andon andres ansiwen antto ApEk Apocalypse apparat appofice ARCADIVS arnabkd_ arnoldB aroga Arttu arun arvind_khadri asakura ashfagg atubbs average_drifter awx Azzkikr b_jonas BadDesign badone Bamieater BanderOS Bao base84 bastih bastii Bavo bburhans Beket Belgarion0 Bigcheese Bish blackace blag blast_hardcheese BlastHardcheese blenny blo Bloodust bloony BoAnd_ Bobman Bofu bolosaur bolt BombStrike bone bool_ BoomBox boris`` boxofrox bps Brklyn_ Brownhead bruce14 bryno BSDBlack Buzzykins bvs Bwild C00re Carbonflux caveat- cdash004 cdidd Cecen cfairles Ch3y3ZZE chalcedony CharlieM75 Chaser chayin chayin__ cheese1756 Chestal ChibaPet chrisbuchholz ciaranm cic cinalyc cl0ud clang classix clipon CodeDroid_ coeus coldpizza72i comawhite companion_cube computerghost coppro cortana2 cp133 Cr8 crib cribert- crl Cruel` cruxeternus cryptic curfont cut^e cyberspace- CycLin cYmen d-old d1zzy d4de damir__ Danio dansan darkc0met darkstarbyte_ daryl_ dau DavidChenware davv3 dbr Deadboys DeadSix27 Deathzor decltype DeeTah Defaultti demi` dfletcher_ dflurker_ dh dhruvasagar dijital1 dindinx dinesh_ dirtydawg djfm djinni`_ dk5 Dobz Dolan_pls Domiiii doodle77 Dotti Drajwer Dreadnaught dropdrive dross drumr dumont DustyDin1o du|dx dv_ dvoid_ DVSO Dweezahr dzonder edlinde Eelis efjboss Eleth elliottcable em enkomax envi EPIK ericP ernini_ et euphoria evelyette explodus FabTG failingkid fasta felipe fhd_ Flannel Fleck flux Forge_ forrestv FriarTech FriskyKat froggey ftsf Fuco Fuuzetsu Fuxx gaten geeeek gemelen gencha Gentle geordi gerrrt gg7 gibberish gilead glenfe glenfern gnathan Godslastering googol Gorroth graphitemaster GrecKo Greg44 gregj Griwes_ gry gsvolt Guest15948 Guest18635 Guest90058 guifre gusnan hackkitten HaltingState Hamled hannes3 hauron hays HeatHawk heatxsink heiner_ heinrich5991 Helios hello2you2 henry______ HerzogDeXtEr1 higgs Hopkinz houmles hrehf hrnt hubbe3 hyperair hyperboreean i7c iceisfun Ichiro_Ino ido_ iKlsR ikonia Immutable impulse150 incognito_ InCognitO` ingenious int0x27h Internet13 ircnode0 Irishmanluke ironzorg irwinb isbric ivan\ iZeR_ izhak j`ey jackarain|2 jakoch jamesn jantje Jarvis javierHund Jaxan jayne JBlitzen jesuisuntorrent Jeuzz jhoepken jhunold jimster jlen JohnHamelink JonathanD jonnyli1125 josef_k jott JPeterson jrdnn jrgill jrickman_ JSharpe_ julmae jweinberg K1rk k299 K3|Chris Kaltiz kalven kami KaneTW Kartagis Kartrohm Kasreyn kavakava kchodorow kcj keyvan Kicer86 KindOne klip klocatelli kloeri klow Knio knittl Krabbe kramer3d KrzaQ kszatan ktch ktos kuplatupsu kurti_ Kuukunen Kyzz l2esonance ladder4 lahwran LAMMJohnson lanemeyer larks larles Lasher` leo2007 levi501d lilalinux Lillia7 lilltiger LjL LNCP localhost loglaunch Lokomotiv Lordofsraam loxley lpvb LRN lskaglsd ltxda luki- Lycanthropist lyindArk_ M-ou-se m3thyl mac^ Maccer maddoc maddog_ madmoose makissy mama MaNI marga martiert Martin8412 Martty maum maw_ maxorator mdkess_ megaTherion mertsas mf_ mgaunard mikalv_ mikroflops Minoulefou mishehu MissionCritical mitch0 mitsuhiko MK` mlody moeSeth Mogget moijk molqr MoMo moo morfin Mosu Motig mousetrap mrcan_ mrh2 MrKronus mrmist muep mulvane Munnu muteki Mws n00b101 n00b6502 Nach0z nahhh nahmaste naquad nauman navatwo neersighted nenolod Neo17 nero neunon neurodamage Nibato` Nickeeh niczkx_ Nightmare Nik05 NimeshNeema_ NinjaPenguin noj_ nolyc nots nrd ntrb ntx nutron o] o^nd_ Obfuscate Obvious Octal_ ofan Olipro omni5cience orafu orbitz Orginator ormaaj ormandj Orphis OxDeadC0de Oxyd Ozm pa parcs` PARLIAMENT patson pbor peanuter pedantic_ pedro_angelo Pelish peper perolsen petteyg pgas phax pheredhel phr phschwartz Pilate Pilum piotr pippijn piti pix1 pixelblur plasickoto Plee polysix Posterdati pragma- Praise pretty_function primepie_ PSIONIK pucko_ pwned qknight Qub1t radiofree Rajko rangergord Rapp rchatsiri rcj_ rcxdude rdpate redec reffle rehat_ reko_t RePaste_ Repentinus retornam rexou rhl rhodesd rhythmx richardwhiuk ricky26 riotz Rix rizzle rndbit roadt robbyoconnor robink RockstarRaccoon roflin roivas RokerHRO roland_ Rolz ross` rstrong ruediger rush2end rvchangue ryanakca s0und saati SaBer sacrebleu SAHChandler sam samek samii samik SanguineAnomaly Sausage scai scharan Schoentoon schroedinbug Scorchin Scub SecretAgent semeion Seppoz Sergonium SeriousJack setmeaway SeySayux sh4wn shades shintah Shuba Silex SimonP86 sirdancealot7 SixtyFold Skywing SlashLife sleepee slummer smellynosery smokex Snaker snarkyboojum SNiLD snkl snuggl Soap__ solarised solrize SorcererX sorressean soulcake Spark spb sphenxes sporous spq SpX sShintah standoo Starfire SteelBanana stepnem stfn straterra Stryyker subanark sudokode SugarCube suiside sujeet sunfun suppahsrv Sweet-P sweet_kid symm- synapt SyouJyoA systemfault syz Tankado Targen tayne tazle Terminus- termos tgs3 The_CooIest the_real_crimper TheBeerinator TheFuzzball thelamb TheNull Thorn Tidus- Tiffy tigger0jk Timbo TinoDidriksen tk_ tking TMAnders1on TMinus36 TMM tmyklebu toddpratt Toes_ tomaw toothrot torsan toytoy trapni trey trigen Trin ttvd TuTizz tuxdev Twey tzarc Ububegin unreal_ urlgrabber UukGoblin V-ille vchang vdv vektor VeXocide ville Vinnie_win vjn Voziv vsayer vskaddanki vsrao VvV_ walmis wbooze wd40s weeb1e_ WhatThePfargtl willll Wiz126 woggle wolfbyte WormDrink wormphlegm wting wu_lmao wuj xandy xantores XAVeRY xConMz Xethron xilo xiphiasx_ Xjs|moonshine xnavor xxtjaxx Y_Ichiro yamamushi yan_ ybit yeltzooo7 yorick Younos yroeht zap0 Zharf Zol ZsoL zyphex Zyrkon zyrtech zzing_ z|Andy]
2012-08-13 08:16:54	--	Channel ##c++: 717 nicks (0 ops, 0 halfops, 0 voices, 717 normals)
2012-08-13 08:17:02	<--	Tankado (93ed463d@gateway/web/freenode/ip.147.237.70.61) has quit (Quit: Page closed)
2012-08-13 08:17:10	--	Mode ##c++ [+CPcflnpt #overflow 850]
2012-08-13 08:17:10	--	Channel created on Sat, 15 Sep 2001 04:15:35
2012-08-13 08:17:27	-->	Sa[i]nT (~lord@133-107.34-65.panhandle.res.rr.com) has joined ##c++
2012-08-13 08:17:32	Domiiii	from what I understand hash_map was not part of the standard so C++11 added unordered_map
2012-08-13 08:17:42	Domiiii	but I do find hash_map on the STI website?
2012-08-13 08:17:55	Domiiii	since when did it kick around and why is there an unordered_map in addition to hash_map?
2012-08-13 08:18:07	Sausage	SGI has nothing to do with the C++ standard library
2012-08-13 08:18:22	-->	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has joined ##c++
2012-08-13 08:18:37	n00b6502	didn't they inspire it
2012-08-13 08:18:44	Sausage	unordered_map probably has interface differences, plus the name is more descriptive of it's purpose rather than it's implementation as typical of C++ standard library containers
2012-08-13 08:18:59	Sausage	The containers part was heavily based on the STL, yes.
2012-08-13 08:19:08	Sausage	But they aren't cooperatively developed.
2012-08-13 08:19:10	<--	dzonder (ajc@62-121-73-12.home.aster.pl) has quit (Ping timeout: 248 seconds)
2012-08-13 08:19:24	n00b6502	and there's plenty in c++11 inspired by boost, right?
2012-08-13 08:19:44	Sausage	Yup, a lot of the newer libraries.
2012-08-13 08:20:37	-->	mtrd` (~mtrd@rab34-2-82-230-28-167.fbx.proxad.net) has joined ##c++
2012-08-13 08:20:37	<--	mtrd` (~mtrd@rab34-2-82-230-28-167.fbx.proxad.net) has quit (Changing host)
2012-08-13 08:20:37	-->	mtrd` (~mtrd@unaffiliated/waxon) has joined ##c++
2012-08-13 08:21:13	<--	em (~em@unaffiliated/emma) has quit (Ping timeout: 244 seconds)
2012-08-13 08:22:09	o]	boost still sucks :D
2012-08-13 08:22:24	XAVeRY	oh?
2012-08-13 08:22:36	morfin	?
2012-08-13 08:22:39	-->	RazielZ (~Raziel@78.97.99.188) has joined ##c++
2012-08-13 08:23:00	n00b6502	does stdlib have something like boost:: bind<...>
2012-08-13 08:23:00	-->	rendar (~s@host9-93-dynamic.252-95-r.retail.telecomitalia.it) has joined ##c++
2012-08-13 08:23:06	morfin	yep
2012-08-13 08:23:07	n00b6502	bind(function, args..)
2012-08-13 08:23:09	josef_k	Sausage: Sorry, how do I unpack the tuple when I call blah(Params...) ?
2012-08-13 08:23:24	-->	Automorphism (bedea579@gateway/web/freenode/ip.190.222.165.121) has joined ##c++
2012-08-13 08:23:31	josef_k	Sausage: I mean, bar(Params...).
2012-08-13 08:23:57	Sausage	Hmm... I don't think there's a standard function for it
2012-08-13 08:25:07	<--	JBlitzen (JBlitzen@cpe-72-230-241-202.rochester.res.rr.com) has quit (Quit: <hollenjf> I'm interviewing for a SQL programming Monday. What functions does the role of an SQL programmer do?)
2012-08-13 08:25:12	n00b6502	std::bind.. nice
2012-08-13 08:25:27	josef_k	Sausage: Hmmm... that's a problem...
2012-08-13 08:25:47	-->	narfnarfnarf (~irc@vpn-ch.sonova.com) has joined ##c++
2012-08-13 08:26:04	<--	rehat_ (~rehat@76.91.103.175) has quit (Remote host closed the connection)
2012-08-13 08:26:20	-->	nor5trom (~nor5trom@unaffiliated/nor5trom) has joined ##c++
2012-08-13 08:27:05	Sausage	n00b6502: is right, use bind =p
2012-08-13 08:27:18	-->	voidcoder (~androirc@82-171-102-39.ip.telfort.nl) has joined ##c++
2012-08-13 08:27:20	-->	teotwaki (~slau@Maemo/community/contributor/crashanddie) has joined ##c++
2012-08-13 08:27:25	<--	SyouJyoA (~perfume@175.244.199.159) has quit (Ping timeout: 244 seconds)
2012-08-13 08:27:29	Sausage	Rather than storing the arguments themselves, just do bind(your_fn, params...) =p
2012-08-13 08:27:39	Sausage	Or this might help: http://stackoverflow.com/questions/687490/how-do-i-expand-a-tuple-into-variadic-template-functions-arguments
2012-08-13 08:27:40	nolyc	<http://tinyurl.com/c9whqga> (at stackoverflow.com)
2012-08-13 08:27:41	josef_k	Sausage: That was what I tried first, hah!
2012-08-13 08:27:44	n00b6502	i was tangenting ..  does it work for him ?
2012-08-13 08:27:57	Sausage	It does assuming he only needs the argument to call that single function
2012-08-13 08:28:12	Sausage	apply_tuple is definitely something I've written before
2012-08-13 08:28:14	Sausage	It's not on this PC though
2012-08-13 08:28:48	Sausage	http://tehsausage.com/paste/tuple-apply
2012-08-13 08:28:49	n00b6502	can you hack variadic templates with tuples of arguments
2012-08-13 08:28:57	Sausage	The power of Google =p
2012-08-13 08:29:20	-->	ratatata (~nu@88-222-70-216.meganet.lt) has joined ##c++
2012-08-13 08:29:22	n00b6502	func(a1,tuple2(a2,a3))   func(a1,tuple2(a2,tuple2(a3,a4))))
2012-08-13 08:29:32	ratatata	nu
2012-08-13 08:29:56	Sausage	Looks like mine is made for member functions
2012-08-13 08:30:11	-->	trigger (~trigger@gateway/tor-sasl/trigger) has joined ##c++
2012-08-13 08:32:33	n00b6502	are there any attempts at alternative extentions to c to truly eliminate #defines
2012-08-13 08:32:42	n00b6502	or other non-GC languages
2012-08-13 08:33:00	<--	dhruvasagar (~dhruvasag@122.172.230.166) has quit (Ping timeout: 260 seconds)
2012-08-13 08:33:17	<--	yamamushi (~yamamushi@mobile-166-147-078-146.mycingular.net) has quit (Read error: Connection reset by peer)
2012-08-13 08:33:19	n00b6502	i guess its unlikely
2012-08-13 08:33:28	teotwaki	n00b101: I fail to see how that is relevant in ##c++
2012-08-13 08:33:37	-->	dhruvasagar (~dhruvasag@122.172.230.166) has joined ##c++
2012-08-13 08:33:42	n00b101	wrong n00b
2012-08-13 08:33:48	teotwaki	apologies.
2012-08-13 08:33:50	n00b6502	world of non-GC
2012-08-13 08:34:06	-->	yamamushi (~yamamushi@mobile-166-147-078-146.mycingular.net) has joined ##c++
2012-08-13 08:34:16	-->	ShishKabab (~vincent@195.191.202.173) has joined ##c++
2012-08-13 08:34:39	<--	moijk (~moijk@ti0090a380-dhcp0845.bb.online.no) has quit (Quit: Leaving...)
2012-08-13 08:34:49	n00b6502	seems like all the new languages are GC only
2012-08-13 08:34:56	XAVeRY	lol
2012-08-13 08:34:57	-->	suy (~modpow@113.Red-83-54-203.dynamicIP.rima-tde.net) has joined ##c++
2012-08-13 08:35:06	n00b6502	so many of them
2012-08-13 08:35:20	n00b6502	oh rust ?
2012-08-13 08:35:32	XAVeRY	n00b6502: come closer and tell me more.
2012-08-13 08:36:40	Sausage	D has GC, but it's not mandatory x,x
2012-08-13 08:36:51	Sausage	And it's replacement of define is horrible constant string based mixins
2012-08-13 08:37:18	XAVeRY	don't you just love string-driven development?
2012-08-13 08:38:00	josef_k	Sausage: This is what I was originally trying to do: http://ideone.com/zvwyM
2012-08-13 08:38:27	josef_k	Sausage: But binding member functions is a headache that I can't solve.
2012-08-13 08:38:46	Sausage	Don't use bind, use tuples and that tuple_apply template.
2012-08-13 08:39:08	Sausage	Unless you know you'll only ever need to call that one function
2012-08-13 08:39:19	Sausage	And binding member functions is easy =p
2012-08-13 08:39:37	n00b6502	does it just work bind(&class::member,this,...)
2012-08-13 08:39:39	Sausage	{ Foo foo; bind(Foo::Bar, foo)(); } struct Foo { void Bar() { BARK; } }
2012-08-13 08:39:39	geordi	error: expected ';' after struct definition
2012-08-13 08:39:49	n00b6502	oops drop my &
2012-08-13 08:39:51	Sausage	{ Foo foo; bind(&Foo::Bar, foo)(); } struct Foo { void Bar() { BARK; } }
2012-08-13 08:39:51	geordi	Same error.
2012-08-13 08:39:51	Sausage	{ Foo foo; bind(&Foo::Bar, foo)(); } struct Foo { void Bar() { BARK; } };
2012-08-13 08:39:53	geordi	Foo::Bar()
2012-08-13 08:39:58	n00b6502	or ont
2012-08-13 08:40:18	Sausage	Proofreading, learn it. X3
2012-08-13 08:40:20	<--	Cruel` (~thomas@2002:4c7a:6028:1234:e01f:4c60:ac9a:6171) has quit (Quit: Leaving)
2012-08-13 08:40:52	Sausage	{ Foo foo; bind(&Foo::Bar, foo, "Hello!")(); } struct Foo { void Bar(string s) { cout << s; } };
2012-08-13 08:40:53	geordi	Hello!
2012-08-13 08:41:12	Sausage	bind is magic there ;P
2012-08-13 08:41:19	n00b6502	that is good
2012-08-13 08:41:20	<--	NimeshNeema_ (u2689@gateway/web/irccloud.com/x-lxybhumeyptunndp) has quit (Read error: Connection reset by peer)
2012-08-13 08:41:58	n00b6502	i wonder if they could have overloaded it to read  like this bind(foo,&Foo::Bar, "Hello1") in the case where its a member
2012-08-13 08:42:03	n00b6502	not that it matters much
2012-08-13 08:42:04	josef_k	So can anyone tell me what I've done wrong in my code?  I really have trouble deciphering the bind syntax.  :\
2012-08-13 08:42:35	Sausage	I didn't read it
2012-08-13 08:42:43	n00b6502	(ah ok i got it right bind(&class:member ,..))
2012-08-13 08:42:58	Sausage	But you can do function<void()> f = bind(YourClass::Function, this, parameters...);
2012-08-13 08:43:18	Sausage	&YourClass::Function... did it again X3
2012-08-13 08:43:38	n00b6502	its funny how it is & when a regular function pointer isn't
2012-08-13 08:43:59	Sausage	The lack of & for plain function pointers is a legacy C thing
2012-08-13 08:44:03	<--	asakura (~asakura@gateway/tor-sasl/asakura) has quit (Ping timeout: 276 seconds)
2012-08-13 08:44:16	n00b6502	its consistent though, right?
2012-08-13 08:44:21	<--	BadDesign (~quassel@2001:15c0:66a3:2:f0e1:b4fb:467f:71fc) has quit (Remote host closed the connection)
2012-08-13 08:44:39	-->	xazax (~xazax@gprs4f7a07ca.pool.t-umts.hu) has joined ##c++
2012-08-13 08:44:48	Sausage	There's probably some ambiguity in T::F without the &
2012-08-13 08:44:54	<--	Automorphism (bedea579@gateway/web/freenode/ip.190.222.165.121) has left ##c++
2012-08-13 08:45:03	--	xazax is now known as Guest8826
2012-08-13 08:45:09	n00b6502	functioin - a pointer   function() - a call to that
2012-08-13 08:45:26	Sausage	It's a bit late to care about simple grammar though
2012-08-13 08:45:37	n00b6502	the & added sounds like one of those strange rules that makes people hate C++
2012-08-13 08:45:42	-->	Vir (~mkretz@kde/mkretz) has joined ##c++
2012-08-13 08:45:43	Sausage	function() doesn't operate on a pointer called function actually
2012-08-13 08:45:54	Sausage	functions have their own type, and have an operator() on that type
2012-08-13 08:46:00	<--	appofice (~zeudap@modemcable184.145-19-135.mc.videotron.ca) has quit (Ping timeout: 276 seconds)
2012-08-13 08:46:02	Sausage	The f_ptr() syntax is the odd one, actually
2012-08-13 08:46:08	-->	nierob (JNowacki@nat/trolltech/x-dowyikxopomxbhxk) has joined ##c++
2012-08-13 08:46:25	Sausage	C loved to make everything decay silently though =\
2012-08-13 08:46:28	-->	appofice (~zeudap@modemcable184.145-19-135.mc.videotron.ca) has joined ##c++
2012-08-13 08:46:30	n00b6502	(some_struct->containing_pointer_to_function)(args)
2012-08-13 08:46:51	-->	HajasLm (mouli@nat/nokia/x-melbqykqxpsgugjo) has joined ##c++
2012-08-13 08:47:08	n00b6502	or (*some_struct->containing_pointer_to_function)(args) .. dont thinkso
2012-08-13 08:47:19	<--	samik (~smukherje@c-98-248-137-128.hsd1.ca.comcast.net) has quit (Quit: samik)
2012-08-13 08:47:28	Sausage	The first is one of the oddities caused by using the same syntax for functions to pointers ;P
2012-08-13 08:47:36	Sausage	pointers to functions*
2012-08-13 08:47:44	<--	hrehf (~s@p4FE3A1D1.dip.t-dialin.net) has quit (Quit: bfg)
2012-08-13 08:47:48	josef_k	Shhhh...t... it looks like I was just missing the "this" second argument to bind().
2012-08-13 08:48:08	Sausage	The code they generate is likely to be different, and even at the conceptual level they're very different
2012-08-13 08:48:10	-->	rcxdude_ (~rcxdude@host86-161-143-169.range86-161.btcentralplus.com) has joined ##c++
2012-08-13 08:48:12	-->	NimeshNeema_ (u2689@gateway/web/irccloud.com/x-fhnaqxjwgyeylsxn) has joined ##c++
2012-08-13 08:48:42	Sausage	And it also causes mixups like people have with "arrays are pointers"
2012-08-13 08:48:45	Sausage	(arrays decay in to pointers the same way functions decay in to function pointers)
2012-08-13 08:48:47	n00b6502	right indirect jump vs regular one
2012-08-13 08:48:56	-->	ZiauddinMK (~ZiauddinM@178.77.179.104) has joined ##c++
2012-08-13 08:49:23	n00b6502	i[ptr] :)
2012-08-13 08:49:34	Sausage	The decaying is one of the arguments for using std::array over C arrays
2012-08-13 08:49:38	<--	Sa[i]nT (~lord@133-107.34-65.panhandle.res.rr.com) has quit (Ping timeout: 244 seconds)
2012-08-13 08:49:46	n00b6502	i so like std::array
2012-08-13 08:49:56	n00b6502	do even
2012-08-13 08:50:25	n00b6502	but they should keep C arrays
2012-08-13 08:50:36	-->	melba (~melba@unaffiliated/lazz0) has joined ##c++
2012-08-13 08:50:48	Sausage	The C arrays are functionally identical to std::array, except they have a bunch of gotchas
2012-08-13 08:50:50	-->	rcxdude__ (~rcxdude@host86-169-43-24.range86-169.btcentralplus.com) has joined ##c++
2012-08-13 08:51:06	-->	assertsmart (~assertsma@78.97.253.170) has joined ##c++
2012-08-13 08:51:12	<--	rcxdude (~rcxdude@host86-149-81-82.range86-149.btcentralplus.com) has quit (Ping timeout: 276 seconds)
2012-08-13 08:51:17	Sausage	Like invisibly turning in to pointers when used in a function signature
2012-08-13 08:51:17	-->	asakura (~asakura@gateway/tor-sasl/asakura) has joined ##c++
2012-08-13 08:51:32	n00b6502	i prefer the lowlevel array inbuilt and highlevel wrapper in the library
2012-08-13 08:51:32	Sausage	And the inability to copy them non-element-wise
2012-08-13 08:51:55	Sausage	The only advantage to the C version is the concise declaration syntax
2012-08-13 08:52:13	Sausage	Otherwise, std::array is a replacement in 100% of cases
2012-08-13 08:52:50	-->	badone_home (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has joined ##c++
2012-08-13 08:53:05	n00b6502	what would the header look like if std::array wasn "inbuilt"
2012-08-13 08:53:09	Sausage	If C arrays were removed and array<T, N> were to take the syntax T[N], other than breaking old C programs, there'd be no losses
2012-08-13 08:53:27	Sausage	Inbuilt?
2012-08-13 08:53:28	n00b6502	ok they can't do it
2012-08-13 08:53:48	<--	rcxdude_ (~rcxdude@host86-161-143-169.range86-161.btcentralplus.com) has quit (Ping timeout: 276 seconds)
2012-08-13 08:54:22	-->	obs (~chatzilla@203.pool80-103-162.dynamic.orange.es) has joined ##c++
2012-08-13 08:54:25	n00b6502	i dont think anyone should consider c++ without c
2012-08-13 08:54:31	n00b6502	the clue is in the name
2012-08-13 08:54:33	-->	Burgundy (blublu214@95.77.208.44) has joined ##c++
2012-08-13 08:54:51	Sausage	I think that name should have been left in the 90s ;P
2012-08-13 08:54:54	n00b6502	if it was going to be independant of c it should be called something else
2012-08-13 08:54:57	--	Burgundy is now known as Guest41467
2012-08-13 08:55:07	n00b6502	(oh microsoft's c-sharp, damn them)
2012-08-13 08:55:08	XAVeRY	n00b6502: please stop talking.
2012-08-13 08:56:25	<--	Deadboys (~Deadboys@unaffiliated/deadboys) has quit (Quit: Linkinus - http://linkinus.com)
2012-08-13 08:57:05	Sausage	People quickly realized that C++ had possibilities far above just adding classes to C, the standard library as far back as 1998 shows the by the time it was standardized that people understood what people call "modern" C++ concepts today
2012-08-13 08:57:34	--	rcxdude__ is now known as rcxdude
2012-08-13 08:57:45	Sausage	Because every newbie programmer discovers C, then discovers OOP, and discovers C++ as C with classes
2012-08-13 08:58:05	-->	deSilva (~deSilva@144.187.32.17) has joined ##c++
2012-08-13 08:58:21	n00b6502	better than java with pointers
2012-08-13 08:58:49	zap0	and still people will be people, with all of their needs and resources being limited.
2012-08-13 08:59:05	-->	daganu (58022d18@gateway/web/freenode/ip.88.2.45.24) has joined ##c++
2012-08-13 08:59:47	n00b6502	i would guess more people think of OOP first these days
2012-08-13 09:00:07	Sausage	C++ has the same concept of "objects" that C does
2012-08-13 09:00:10	<--	HajasLm (mouli@nat/nokia/x-melbqykqxpsgugjo) has quit (Read error: Connection reset by peer)
2012-08-13 09:00:19	Sausage	Their pointer/object model is almost identical
2012-08-13 09:00:53	josef_k	Can anyone recommend a better reference to std::bind this one: http://en.cppreference.com/w/cpp/utility/functional/bind ??
2012-08-13 09:00:57	n00b6502	OOP is an overused and possibly ambiguous term
2012-08-13 09:01:06	Sausage	It is.
2012-08-13 09:01:56	Sausage	!give josef_k draft
2012-08-13 09:01:57	zap0	Is it?
2012-08-13 09:01:57	nolyc	josef_k: http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3376.pdf
2012-08-13 09:02:03	Sausage	Totally.
2012-08-13 09:02:32	Sausage	Do a poll on how many people think C++ is an OOP language =p
2012-08-13 09:02:46	zap0	the opposite is true.   the overused and possibly ambiguous term is POO
2012-08-13 09:02:59	-->	BadDesign (~quassel@2001:15c0:66a3:2:f0e1:b4fb:467f:71fc) has joined ##c++
2012-08-13 09:03:37	XAVeRY	speak of the devil.
2012-08-13 09:03:38	n00b6502	perhpas its a "misunderstood" term, if it has a propper definition
2012-08-13 09:03:42	-->	Palmik (~palmik@120-49-80-78.tmcz.cz) has joined ##c++
2012-08-13 09:03:58	n00b6502	but i'm not sure what the propper definition is
2012-08-13 09:03:59	-->	Neptu (~Neptu@mail.avtech.aero) has joined ##c++
2012-08-13 09:04:02	zap0	its pretty hard finding an audience of sane people inwhich to pose that question
2012-08-13 09:04:05	Sausage	There is. Pure OOP languages existed before C++
2012-08-13 09:04:10	Sausage	C++ was trying to copy them.
2012-08-13 09:04:14	Sausage	C++ failed.
2012-08-13 09:04:44	-->	em (~em@unaffiliated/emma) has joined ##c++
2012-08-13 09:04:46	n00b6502	objective-C++ :)
2012-08-13 09:05:10	ironzorg	how is C++ not an OOP language ?
2012-08-13 09:05:35	n00b6502	depends how you define OOP
2012-08-13 09:05:38	<--	syz (~doop@S0106f46d041adb49.vc.shawcable.net) has quit (Quit: Leaving)
2012-08-13 09:05:45	Sausage	If you're going to say C++ is an OOP language, you must say C is one as well
2012-08-13 09:05:50	Sausage	Because they both have the same object model
2012-08-13 09:05:59	coppro	Sausage: stfu
2012-08-13 09:06:04	n00b6502	some people think OOP requires polymorphsm
2012-08-13 09:06:10	Sausage	coppro: no
2012-08-13 09:06:22	n00b6502	maybe it does
2012-08-13 09:06:40	n00b6502	ah compile time polymorphism can count , others say
2012-08-13 09:06:49	n00b6502	on both counts c++ has more than c
2012-08-13 09:07:00	BadDesign	There is a BIG diference between "usable" OOP from C++ and black voodoo magic OOP in C
2012-08-13 09:07:05	<--	josef_k (83aaaa34@gateway/web/freenode/ip.131.170.170.52) has quit (Ping timeout: 245 seconds)
2012-08-13 09:07:21	n00b6502	function pointer with a switch statement :)
2012-08-13 09:08:03	<--	roadt (~roadt@223.240.97.107) has quit (Remote host closed the connection)
2012-08-13 09:08:27	n00b6502	if you say "c++ failed in copying OOP"... what do you say about Objective-C (according to your definitions..)
2012-08-13 09:08:40	Sausage	I've never used ObjC
2012-08-13 09:08:45	n00b6502	(other than "its off topic in C++")
2012-08-13 09:08:46	XAVeRY	OOP is a concept, it doesn't force an implementation of that concept. what you said is an example of an implementation.
2012-08-13 09:09:10	n00b6502	thats better
2012-08-13 09:09:18	Sausage	You can use the vague definition of OOP to argue strongly for or against C and C++ being OOP languages
2012-08-13 09:09:31	n00b6502	i'll ask... what IS oop :)
2012-08-13 09:09:37	Sausage	Baby don't hurt me
2012-08-13 09:09:51	<--	Guest41467 (blublu214@95.77.208.44) has quit (Ping timeout: 252 seconds)
2012-08-13 09:10:03	-->	Rayne (~Rayne@pD9E3F0B9.dip.t-dialin.net) has joined ##c++
2012-08-13 09:11:15	Sausage	I think the way you write programs in a language is more important on deciding if "it's OOP" or not
2012-08-13 09:11:26	<--	em (~em@unaffiliated/emma) has quit (Ping timeout: 248 seconds)
2012-08-13 09:11:58	-->	IndianaRonaldo (~IndianaRo@210.212.8.60) has joined ##c++
2012-08-13 09:12:08	<--	IndianaRonaldo (~IndianaRo@210.212.8.60) has quit (Remote host closed the connection)
2012-08-13 09:12:16	Sausage	Especially in multi-paradigm languages like C++, where it can just as well be a functional language if you write code in such a manner.
2012-08-13 09:12:26	-->	egr (~egr@2001:420:44ff:fd0e:acbe:dc1a:758:6734) has joined ##c++
2012-08-13 09:12:30	-->	IndianaRonaldo (~IndianaRo@210.212.8.60) has joined ##c++
2012-08-13 09:12:49	-->	hrehf (~ircclient@p4FE3A1D1.dip.t-dialin.net) has joined ##c++
2012-08-13 09:12:52	-->	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has joined ##c++
2012-08-13 09:12:57	-->	Vert (~quassel@vlan116.pact.srf.ac.uk) has joined ##c++
2012-08-13 09:13:13	<--	ratatata (~nu@88-222-70-216.meganet.lt) has quit (Remote host closed the connection)
2012-08-13 09:13:21	<--	IndianaRonaldo (~IndianaRo@210.212.8.60) has quit (Read error: Connection reset by peer)
2012-08-13 09:14:00	<--	narfnarfnarf (~irc@vpn-ch.sonova.com) has left ##c++
2012-08-13 09:14:13	-->	joel_falcou (~joel_falc@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2012-08-13 09:14:31	-->	kumelk (and@bl147a.studby.ntnu.no) has joined ##c++
2012-08-13 09:14:55	-->	plouffe (kaixin@gateway/shell/devio.us/x-vyredxhyxpeokzwf) has joined ##c++
2012-08-13 09:14:57	-->	nikoJ (~kvirc@unaffiliated/nikoj) has joined ##c++
2012-08-13 09:16:13	Ububegin	inside foo class{ obj operator*(){...} void bar() { obj = *(*this); } } ... whats wrong with *(*this));
2012-08-13 09:16:26	-->	floe_ (~flo@e177091003.adsl.alicedsl.de) has joined ##c++
2012-08-13 09:16:32	-->	narfnarfnarf (~irc@vpn-ch.sonova.com) has joined ##c++
2012-08-13 09:16:36	Sausage	Nothing.
2012-08-13 09:17:22	Ububegin	Sausage: sorry, ignore that qn..
2012-08-13 09:17:26	Sausage	{ Foo foo; foo.bar(); } struct Foo { void bar() { **this; } Foo operator*() { BARK; return *this; } }
2012-08-13 09:17:26	geordi	error: expected ';' after struct definition
2012-08-13 09:17:29	Sausage	{ Foo foo; foo.bar(); } struct Foo { void bar() { **this; } Foo operator*() { BARK; return *this; } };
2012-08-13 09:17:31	geordi	Foo::operator*()
2012-08-13 09:17:34	<--	daganu (58022d18@gateway/web/freenode/ip.88.2.45.24) has left ##c++
2012-08-13 09:17:51	<--	Agro (~Agro@108-79-20-223.lightspeed.hstntx.sbcglobal.net) has quit (Ping timeout: 276 seconds)
2012-08-13 09:17:53	-->	savenger (~savenger@p5DD6CE5C.dip.t-dialin.net) has joined ##c++
2012-08-13 09:18:24	-->	Matthias|PC (~Matthias@162.233-243-81.adsl-dyn.isp.belgacom.be) has joined ##c++
2012-08-13 09:18:54	-->	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has joined ##c++
2012-08-13 09:18:59	<--	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has quit (Changing host)
2012-08-13 09:18:59	-->	sohail (~sohail@unaffiliated/sohail) has joined ##c++
2012-08-13 09:19:59	-->	Stormhawk (andrewbe@unaffiliated/stormhawk) has joined ##c++
2012-08-13 09:20:07	-->	em (~em@unaffiliated/emma) has joined ##c++
2012-08-13 09:21:10	-->	IndianaRonaldo (~IndianaRo@210.212.8.60) has joined ##c++
2012-08-13 09:21:36	-->	Nicknamehere (d31e042c@gateway/web/freenode/ip.211.30.4.44) has joined ##c++
2012-08-13 09:24:48	<--	irwinb (~irwinb@99.47.9.242) has quit (Quit: Leaving)
2012-08-13 09:25:13	-->	chenwj (~chenwj@alumni.cs.nctu.edu.tw) has joined ##c++
2012-08-13 09:25:39	<--	appofice (~zeudap@modemcable184.145-19-135.mc.videotron.ca) has quit (Ping timeout: 276 seconds)
2012-08-13 09:26:33	-->	haxi (~anonycul@lan31-1-81-56-82-105.fbx.proxad.net) has joined ##c++
2012-08-13 09:27:17	IndianaRonaldo	can somebody tell me why i get a 403 forbidden error when i try to file sahre in irc?
2012-08-13 09:27:36	-->	appofice (~zeudap@modemcable184.145-19-135.mc.videotron.ca) has joined ##c++
2012-08-13 09:27:40	-->	wobster (~jan@ls12nb9.cs.uni-dortmund.de) has joined ##c++
2012-08-13 09:27:49	Stormhawk	That doesn't sound like a C++ question. Ask in the channel for your IRC client, or in the channel for this network
2012-08-13 09:28:15	<--	d4de (~olorin@unaffiliated/d4de) has quit (Ping timeout: 276 seconds)
2012-08-13 09:28:38	<--	klocatelli (~irc@adsl-75-30-115-40.dsl.pltn13.sbcglobal.net) has quit (Quit: Leaving)
2012-08-13 09:29:19	Nicknamehere	Is someone able to give me a quick hand fixing an error in regard to a file stream and a enum?
2012-08-13 09:29:24	<--	Guest8826 (~xazax@gprs4f7a07ca.pool.t-umts.hu) has quit (Quit: Ex-Chat)
2012-08-13 09:29:49	-->	eusto (~eusto@81-181-249-254.fo.opensys.ro) has joined ##c++
2012-08-13 09:29:52	Stormhawk	Nicknamehere: Paste a testcase at ideone.com, tell us what you expected to happen
2012-08-13 09:30:10	Nicknamehere	is codepad okay?
2012-08-13 09:30:59	Stormhawk	Maybe
2012-08-13 09:31:09	Stormhawk	Does it compile and run your example?
2012-08-13 09:31:29	-->	speedy (speedy@86.123.44.43) has joined ##c++
2012-08-13 09:31:49	jesyspa	Yes, codepad is generally also seen as fine, although you need to keep in mind that it includes prelude.
2012-08-13 09:31:56	-->	Agro (~Agro@108-79-20-223.lightspeed.hstntx.sbcglobal.net) has joined ##c++
2012-08-13 09:32:00	speedy	it's not possible to init members in a derived class ctor using init list ?
2012-08-13 09:32:09	Nicknamehere	http://codepad.org/B6qQ8XCA
2012-08-13 09:32:11	Nicknamehere	that is my code
2012-08-13 09:32:21	-->	Biolunar (~mahdi@blfd-4d0832ff.pool.mediaWays.net) has joined ##c++
2012-08-13 09:32:35	Nicknamehere	*of the functions, and here is the text file it refers to http://pastebin.com/BQmFcwkp
2012-08-13 09:32:38	Sausage	speedy: no
2012-08-13 09:32:40	RePaste_	Nicknamehere: The paste BQmFcwkp has been moved to http://ideone.com/5XC0V (see http://tinyurl.com/yv88ul for why)
2012-08-13 09:32:50	Sausage	The base class is fully constructed by the time your constructor is called
2012-08-13 09:33:08	jesyspa	!give Nicknamehere eof
2012-08-13 09:33:09	speedy	I'm sure there's a VERY good explanation for that yet it's very confusing and unexpected..
2012-08-13 09:33:09	nolyc	Nicknamehere: Using "while (!stream.eof()) {}" is almost certainly wrong. Use the stream's state as the tested value instead: while (std::getline(stream, str)) {}. For further explanation see http://www.parashift.com/c++-faq-lite/input-output.html#faq-15.5
2012-08-13 09:33:15	-->	Astus (~Astus@unaffiliated/astus) has joined ##c++
2012-08-13 09:33:27	-->	brexel (~armin@gw02.focusmr.com) has joined ##c++
2012-08-13 09:33:28	speedy	Sausage: there you go, makes sense yet it's confusing :)
2012-08-13 09:33:32	Sausage	It's not confusing and very expected
2012-08-13 09:33:48	-->	xormor (~xormor@188-67-199-59.bb.dnainternet.fi) has joined ##c++
2012-08-13 09:33:55	speedy	thanks
2012-08-13 09:34:10	<--	Guest15948 (~private@78-106-240-220.broadband.corbina.ru) has quit (Read error: Connection reset by peer)
2012-08-13 09:34:11	<--	pedro_angelo (~pedro_ang@186-241-158-93.user.veloxzone.com.br) has quit (Read error: Connection reset by peer)
2012-08-13 09:34:40	-->	iPhoneMRZ (~iphonemrz@95.75.111.112) has joined ##c++
2012-08-13 09:34:44	-->	nilg (~user@ALagny-551-1-177-48.w90-3.abo.wanadoo.fr) has joined ##c++
2012-08-13 09:34:50	-->	molixiaoge (~molixiaog@58.215.204.118) has joined ##c++
2012-08-13 09:35:14	-->	eataix (~eataix@unaffiliated/eataix) has joined ##c++
2012-08-13 09:35:33	<--	joel_falcou (~joel_falc@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Ping timeout: 248 seconds)
2012-08-13 09:35:56	-->	joel_falcou (~joel_falc@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2012-08-13 09:36:33	<--	RazielZ (~Raziel@78.97.99.188) has quit (Read error: Connection reset by peer)
2012-08-13 09:36:55	<--	tigger0jk (~tigger0jk@c-71-202-39-119.hsd1.ca.comcast.net) has quit
2012-08-13 09:37:45	jesyspa	Nicknamehere: As for reading the enum, you could read it into an integer and then cast it.
2012-08-13 09:37:47	-->	RazielZ (~Raziel@78.97.99.188) has joined ##c++
2012-08-13 09:37:54	jesyspa	Probably by providing a suitable operator>>
2012-08-13 09:38:21	Stormhawk	Nicknamehere: You either need to stream into an int and cast to the enum type, or define an operator>> which does that (as well as possibly range checking the result)
2012-08-13 09:39:47	-->	Deadboys (~Deadboys@unaffiliated/deadboys) has joined ##c++
2012-08-13 09:40:39	IndianaRonaldo	Is there any c++ sandbox terminal thing? Like for python, there are CLIs ? Are there any for c++? And yes, I have googles it. :)
2012-08-13 09:40:58	jesyspa	IndianaRonaldo: Take a look at cling.
2012-08-13 09:41:28	<--	Kyzz (~quassel@cpe-24-166-81-109.neo.res.rr.com) has quit (Ping timeout: 256 seconds)
2012-08-13 09:41:31	n00b6502	REPL you mean
2012-08-13 09:42:03	<--	RazielZ (~Raziel@78.97.99.188) has quit (Read error: Connection reset by peer)
2012-08-13 09:42:07	IndianaRonaldo	What's REPL?
2012-08-13 09:42:08	jesyspa	Nicknamehere: By the way, do you realise your code is extremely vulnerable to buffer overflows?
2012-08-13 09:42:16	-->	inkjetunito (~fsww@unaffiliated/inkjetunit) has joined ##c++
2012-08-13 09:42:20	n00b6502	ReadEvaluatePrintLoop - what you asked for
2012-08-13 09:42:30	jesyspa	http://blog.coldflake.com/posts/2012-08-09-On-the-fly-C%2B%2B.html
2012-08-13 09:42:32	IndianaRonaldo	KK..Yes, like that. I think cling is the thing
2012-08-13 09:42:33	-->	archypetro (~hagrid@cpc2-oxfd19-2-0-cust937.4-3.cable.virginmedia.com) has joined ##c++
2012-08-13 09:42:34	<--	archypetro (~hagrid@cpc2-oxfd19-2-0-cust937.4-3.cable.virginmedia.com) has quit (Changing host)
2012-08-13 09:42:34	-->	archypetro (~hagrid@unaffiliated/archangelpetro) has joined ##c++
2012-08-13 09:42:35	IndianaRonaldo	I'll try it
2012-08-13 09:42:45	-->	Boffers (~Bofu2U@pool-108-3-191-153.bltmmd.fios.verizon.net) has joined ##c++
2012-08-13 09:43:02	<--	archypetro (~hagrid@unaffiliated/archangelpetro) has left ##c++
2012-08-13 09:43:22	-->	syslock (~syslock@erft-5d809a7b.pool.mediaWays.net) has joined ##c++
2012-08-13 09:43:43	-->	LordCrc (LordCrc@135.70.202.84.customer.cdi.no) has joined ##c++
2012-08-13 09:44:26	Nicknamehere	Stormhawk: would you be able to show me how to do so?
2012-08-13 09:44:35	IndianaRonaldo	jesyspa, is cling REPL as he said? Because I'm certain it's REPL I'm talking about
2012-08-13 09:45:32	-->	RazielZ (~Raziel@78.97.99.188) has joined ##c++
2012-08-13 09:45:44	<--	Agro (~Agro@108-79-20-223.lightspeed.hstntx.sbcglobal.net) has quit (Quit: Leaving)
2012-08-13 09:45:47	Stormhawk	Nicknamehere: You write a function of the form std::istream& operator>>(std::istream&, EnumType& foo);
2012-08-13 09:45:54	<--	Bofu (~Bofu2U@pool-108-3-191-153.bltmmd.fios.verizon.net) has quit (Ping timeout: 246 seconds)
2012-08-13 09:45:55	n00b6502	i'm guessing a C++ repl is difficult
2012-08-13 09:46:08	n00b6502	since c++ has so much state and context
2012-08-13 09:46:14	Stormhawk	Nicknamehere: Inside that, you stream into an int, cast to EnumType and assign to foo
2012-08-13 09:46:41	Nicknamehere	do you have any examples, this is my first time coding in c++, and this is for an assignment
2012-08-13 09:47:03	Stormhawk	IndianaRonaldo, n00b6502 : There are various attempts at "C++ interpreters" out there. Typically, they don't work very well.
2012-08-13 09:47:06	<--	nor5trom (~nor5trom@unaffiliated/nor5trom) has quit (Quit: 5ee ya.)
2012-08-13 09:47:19	Stormhawk	Nicknamehere: I gave you everything you need to know, above.
2012-08-13 09:47:45	Nicknamehere	kk
2012-08-13 09:47:48	IndianaRonaldo	But does the C shell in linux do that"?
2012-08-13 09:47:55	Stormhawk	IndianaRonaldo: Nope
2012-08-13 09:47:56	n00b6502	i dont think thats c
2012-08-13 09:48:12	n00b6502	its just 'a bit more c -esque'
2012-08-13 09:49:03	<--	enkomax (~enkomax@96-41-10-230.dhcp.mtpk.ca.charter.com) has quit (Read error: Operation timed out)
2012-08-13 09:49:12	<--	em (~em@unaffiliated/emma) has quit (Ping timeout: 245 seconds)
2012-08-13 09:49:48	<--	molixiaoge (~molixiaog@58.215.204.118) has quit (Quit: 暂离)
2012-08-13 09:50:21	<--	RazielZ (~Raziel@78.97.99.188) has quit (Read error: Connection reset by peer)
2012-08-13 09:51:03	-->	molixiaoge_ (~molixiaog@58.215.204.118) has joined ##c++
2012-08-13 09:51:12	-->	xiliax (~ilia@78-83-56-21.spectrumnet.bg) has joined ##c++
2012-08-13 09:51:21	-->	em (~em@unaffiliated/emma) has joined ##c++
2012-08-13 09:51:23	<--	Ichiro_Ino (~Ichiro_In@124.106.85.6) has quit (Quit: This computer has gone to sleep)
2012-08-13 09:51:40	-->	RazielZ (~Raziel@78.97.99.188) has joined ##c++
2012-08-13 09:52:35	-->	thore (~anonymous@p57B2EAF6.dip.t-dialin.net) has joined ##c++
2012-08-13 09:52:38	<--	dhruvasagar (~dhruvasag@122.172.230.166) has quit (Ping timeout: 244 seconds)
2012-08-13 09:53:14	<--	IndianaRonaldo (~IndianaRo@210.212.8.60) has quit (Remote host closed the connection)
2012-08-13 09:53:30	<--	TuTizz (~adrien@46.18.96.158) has quit (Quit: Bye)
2012-08-13 09:53:35	-->	dhruvasagar (~dhruvasag@122.172.230.166) has joined ##c++
2012-08-13 09:54:06	<--	inkjetunito (~fsww@unaffiliated/inkjetunit) has quit (Quit: qQQ)
2012-08-13 09:55:19	-->	TuTizz (~adrien@46.18.96.158) has joined ##c++
2012-08-13 09:55:31	<--	CycLin (~cyc@106.3.61.228) has left ##c++
2012-08-13 09:57:22	average_drifter	got a question about POSIX threads
2012-08-13 09:57:24	average_drifter	is this ontopic ?
2012-08-13 09:57:28	average_drifter	or is it completely off ?
2012-08-13 09:58:06	jesyspa	Off topic.
2012-08-13 09:58:08	Sausage	!posix
2012-08-13 09:58:09	nolyc	Please ask your POSIX questions in ##posix, and be patient for them to answer (it's a low-traffic channel). Sadly, even if it takes them long to answer, POSIX is still offtopic here.
2012-08-13 09:58:13	morfin	yep
2012-08-13 09:58:23	morfin	C++ interpreters?
2012-08-13 09:58:26	morfin	omg
2012-08-13 09:58:29	Sausage	Threading in general probably has a better place
2012-08-13 09:58:50	average_drifter	of course
2012-08-13 09:58:54	average_drifter	nothing is ontopic here
2012-08-13 09:58:57	average_drifter	everything is offtopic
2012-08-13 09:59:00	morfin	no
2012-08-13 09:59:00	average_drifter	christ
2012-08-13 09:59:00	Sausage	!topic
2012-08-13 09:59:02	nolyc	Welcome to ##c++. This channel is for the discussion of standard C++, including potential and future standardizations. This channel is NOT for discussion of: development platforms (OSes and other tools not directly related to C++), non-standard libraries, programs written in C++, other programming languages, a/s/l, or anything else that isn't C++.
2012-08-13 09:59:08	<--	xormor (~xormor@188-67-199-59.bb.dnainternet.fi) has quit (Quit: Lähdössä)
2012-08-13 09:59:11	morfin	standard C++ is
2012-08-13 09:59:35	Sausage	Is what is and isn't on-topic on-topic?
2012-08-13 09:59:48	morfin	i never heard about C++ interpreters
2012-08-13 09:59:49	-->	zamboli (~tacotacot@75-130-236-90.dhcp.oxfr.ma.charter.com) has joined ##c++
2012-08-13 09:59:51	morfin	:D
2012-08-13 10:00:06	<--	floe_ (~flo@e177091003.adsl.alicedsl.de) has quit (Ping timeout: 276 seconds)
2012-08-13 10:00:11	n00b6502	probably because they dont work well :)
2012-08-13 10:01:04	morfin	there is some propietary shit
2012-08-13 10:01:17	Sausage	http://root.cern.ch/drupal/content/cling
2012-08-13 10:01:22	n00b6502	How about #c++ as a channel for things that interest C++ programmers, and #c++stdlib for the pedantary :)
2012-08-13 10:01:39	Sausage	How about ##c++ for C++
2012-08-13 10:01:39	Sausage	And people can go somewhere else to talk about non-C++ things
2012-08-13 10:01:48	Sausage	We're not in ##c++-and-stuff
2012-08-13 10:02:01	n00b6502	c++ exists in a world relative to other things
2012-08-13 10:02:25	Sausage	Standard C++ doesn't care
2012-08-13 10:02:26	n00b6502	c++ takes inspiration from these other things and is designed to solve their problems
2012-08-13 10:02:41	Sausage	Fair. You can discuss them in context of C++
2012-08-13 10:02:43	n00b6502	if you were talking about boost before C++11 , you'd be ahead of standard C++
2012-08-13 10:02:48	<--	ftsf (~ftsf@2407:7800:200:1001:219:d1ff:fe3a:7058) has quit (Remote host closed the connection)
2012-08-13 10:02:58	Sausage	Boost is off-topic here. =]
2012-08-13 10:02:59	morfin	like when they was inspired by boost :)
2012-08-13 10:03:06	n00b6502	yes
2012-08-13 10:03:16	<--	RazielZ (~Raziel@78.97.99.188) has quit (Read error: Connection reset by peer)
2012-08-13 10:03:19	Sausage	If you were talking about the pros and cons of integrating parts of boost in to C++, you'd be on-topic
2012-08-13 10:03:22	n00b6502	because standards are usually compromises
2012-08-13 10:03:23	morfin	i said that before
2012-08-13 10:04:12	-->	RazielZ (~Raziel@78.97.99.188) has joined ##c++
2012-08-13 10:04:14	-->	Criztian (~criztian@89-96-175-137.ip13.fastwebnet.it) has joined ##c++
2012-08-13 10:04:17	n00b6502	"how do i work around the standards limitations to acheive <...>" is what drove boost  and in turn it fed back. now imagine if those guys said "C++ is this and nothing else!"
2012-08-13 10:04:33	Sausage	C++ allows for people to write their own code, you know.
2012-08-13 10:04:45	n00b6502	you wouldn't think it listening to you
2012-08-13 10:04:48	<--	Lillia7 (~lillia7@6abb386d.t-net.ne.jp) has quit (Quit: Leaving...)
2012-08-13 10:05:24	<--	molixiaoge_ (~molixiaog@58.215.204.118) has left ##c++ ("暂离")
2012-08-13 10:05:33	Sausage	That code is just not on topic in this channel, which is about C++, the language.
2012-08-13 10:05:33	Sausage	You're free to make your own channel rather than telling people what they should talk about in their own.
2012-08-13 10:05:48	-->	molixiaoge (~molixiaog@58.215.204.118) has joined ##c++
2012-08-13 10:06:37	<--	arnoldB (shroudbnc@www1.bechtoldt-srv.com) has quit (Ping timeout: 240 seconds)
2012-08-13 10:06:41	<--	em (~em@unaffiliated/emma) has quit (Ping timeout: 252 seconds)
2012-08-13 10:06:44	morfin	there ##c++-general,##c++-basic,##c++ is not that enought
2012-08-13 10:06:51	<--	toytoy (~toytoy@unaffiliated/t0yt0y) has quit (Quit: toytoy)
2012-08-13 10:06:54	-->	arnoldB (shroudbnc@www1.bechtoldt-srv.com) has joined ##c++
2012-08-13 10:06:59	-->	xazax (~xazax@gprs4f7a07ca.pool.t-umts.hu) has joined ##c++
2012-08-13 10:07:15	--	xazax is now known as Guest102
2012-08-13 10:07:17	-->	netmind (~mind@93-58-196-214.ip160.fastwebnet.it) has joined ##c++
2012-08-13 10:07:19	morfin	##c++-offtopic
2012-08-13 10:07:20	teotwaki	and ##c++-social
2012-08-13 10:07:22	morfin	:O
2012-08-13 10:07:23	Kasreyn	where is ##c++-fun! ?
2012-08-13 10:07:28	teotwaki	Kasreyn: ^
2012-08-13 10:07:30	Sausage	!fun
2012-08-13 10:07:32	nolyc	##c++ is a topical channel. There is No Fun Allowed in ##c++.
2012-08-13 10:07:40	morfin	holy crap
2012-08-13 10:07:44	morfin	##c++-offtopic exists!
2012-08-13 10:08:17	teotwaki	well, in my opinion, freenode should just move all the other channels that exist on the network to ##c++-offtopic.
2012-08-13 10:08:28	teotwaki	Two channels, one for C++, and one for everything else, ought to be enough.
2012-08-13 10:08:44	Sausage	Freenode doesn't create those channels, people do.
2012-08-13 10:08:52	morfin	:)
2012-08-13 10:09:16	<--	toddpratt (~toddpratt@nuke.strangled.net) has quit (Ping timeout: 250 seconds)
2012-08-13 10:09:19	Sausage	Enough people want to discuss ##c++ that they all join ##c++ to talk about it
2012-08-13 10:09:59	-->	toddpratt (~toddpratt@nuke.strangled.net) has joined ##c++
2012-08-13 10:10:29	-->	MarkovBot (~MarkovBot@124244186213.ctinets.com) has joined ##c++
2012-08-13 10:11:29	<--	Astus (~Astus@unaffiliated/astus) has quit (Quit: Astus)
2012-08-13 10:11:30	n00b6502	i suggest #c++std for what Sausage talks about. the shortest name should be the most general. then you drill down
2012-08-13 10:11:42	Sausage	Or the topic of the channel should match the name, ##c++
2012-08-13 10:12:32	n00b6502	pedants will be happy to specify what they mean exactly. ##C++_the_language_and_standard_library_only_and_not_boost
2012-08-13 10:12:39	-->	maxtors (~maxtors@i163097.directconnect.no) has joined ##c++
2012-08-13 10:12:40	n00b6502	they'lll prefer that channel :)
2012-08-13 10:12:43	XAVeRY	n00b6502: you really do have too much time on your hands.
2012-08-13 10:12:53	Sausage	That's redundant. C++ is the language and the standard library and not boost.
2012-08-13 10:12:57	Stormhawk	The current scheme works pretty well. There's a certain amount of triaging here in ##c++, but it does seem to work
2012-08-13 10:13:00	-->	nor5trom (~nor5trom@unaffiliated/nor5trom) has joined ##c++
2012-08-13 10:13:21	Sausage	You don't go ask ##c how to use libjpeg because it's written in C
2012-08-13 10:13:31	XAVeRY	or libxml2.
2012-08-13 10:13:36	Stormhawk	Well, some people do, but they get redirected.
2012-08-13 10:13:39	-->	zeleni_zub (~zz@195.178.42.82) has joined ##c++
2012-08-13 10:13:42	Stormhawk	Which is precisely what happens here, too.
2012-08-13 10:13:46	-->	arossouw (~arossouw@196.36.203.18) has joined ##c++
2012-08-13 10:13:48	Sausage	Unfortunately half the traffic here is redirecting people
2012-08-13 10:13:50	morfin	hmm
2012-08-13 10:14:07	<--	toddpratt (~toddpratt@nuke.strangled.net) has quit (Ping timeout: 240 seconds)
2012-08-13 10:14:12	teotwaki	Same for PHP, a lot of people ask about Zend Framework, or <insert framework here>.
2012-08-13 10:14:14	<--	zamboli (~tacotacot@75-130-236-90.dhcp.oxfr.ma.charter.com) has quit (Quit: leaving)
2012-08-13 10:14:20	teotwaki	Whoa, I just compared C++ to PHP.
2012-08-13 10:14:33	XAVeRY	I can feel a kick coming.
2012-08-13 10:14:33	<--	sphenxes (~sphenxes@91-119-235-246.dynamic.xdsl-line.inode.at) has quit (Remote host closed the connection)
2012-08-13 10:14:34	Stormhawk	Well, you compared ##c++ to #(#?)php
2012-08-13 10:14:36	Stormhawk	:p
2012-08-13 10:14:40	n00b6502	so thats why it should be a general channel. longer, more specific name is unabiguous. "C++language" perhaps
2012-08-13 10:14:45	morfin	##php aaaaw
2012-08-13 10:14:49	Sausage	C++ is a language
2012-08-13 10:14:51	Sausage	That's not ambiguous
2012-08-13 10:14:55	arossouw	just want to know correct way de-allocate memory in heap http://ideone.com/NpcHo
2012-08-13 10:15:09	-->	toddpratt (~toddpratt@nuke.strangled.net) has joined ##c++
2012-08-13 10:15:18	Sausage	!heap
2012-08-13 10:15:19	nolyc	The free store and the call stack are storage locations. On typical implementations, the free store is known as "the heap". However, the terms "heap" and "stack" are also outmoded, confusing and inaccurate terms for kinds of storage duration: see !automatic and !dynamic.
2012-08-13 10:15:21	morfin	delete[] for arrays
2012-08-13 10:15:29	morfin	delete for simple pointers
2012-08-13 10:15:39	XAVeRY	pointers are never "simple".
2012-08-13 10:15:52	arossouw	so A *a = new A[1]; delete [] a , is correct ?
2012-08-13 10:15:53	morfin	ok not simple
2012-08-13 10:15:56	<--	Chaser (~kiran@c-71-198-24-142.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2012-08-13 10:16:11	XAVeRY	arossouw: yes.
2012-08-13 10:16:13	morfin	yes
2012-08-13 10:16:15	arossouw	cool
2012-08-13 10:16:25	-->	floe_ (~flo@e177091003.adsl.alicedsl.de) has joined ##c++
2012-08-13 10:16:33	-->	ambro718 (~ambro@BSN-77-101-149.dsl.siol.net) has joined ##c++
2012-08-13 10:16:37	n00b6502	can C++ use blobs (like C)
2012-08-13 10:16:42	-->	sphenxes (~sphenxes@91-119-235-246.dynamic.xdsl-line.inode.at) has joined ##c++
2012-08-13 10:16:44	Sausage	"simple" can be read "dumb" =]
2012-08-13 10:16:45	arossouw	just that valgrind shows that memory incorrectly freed
2012-08-13 10:16:46	morfin	actually pointers are complicated
2012-08-13 10:17:04	Drajwer	what is blobs?
2012-08-13 10:17:13	n00b6502	Binary Large Objects
2012-08-13 10:17:14	mitch0	arossouw: your delete p is wrong
2012-08-13 10:17:15	arossouw	at least no leaks
2012-08-13 10:17:21	morfin	i heard that name
2012-08-13 10:17:23	n00b6502	precompiled object graph
2012-08-13 10:17:24	Sausage	Which is pretty accurate
2012-08-13 10:17:24	Sausage	What is a blob? Giant killer green goo?
2012-08-13 10:17:34	n00b6502	in a single allocation
2012-08-13 10:17:37	arossouw	mitch0: ok
2012-08-13 10:17:39	Drajwer	what.
2012-08-13 10:17:46	Nicknamehere	Is someone able to help me convert save a number from a file as an enum?
2012-08-13 10:17:48	-->	googol_ (~matthew@ip68-4-137-125.oc.oc.cox.net) has joined ##c++
2012-08-13 10:17:52	morfin	binary large object
2012-08-13 10:17:53	morfin	?
2012-08-13 10:17:57	<--	googol (~matthew@ip68-4-137-125.oc.oc.cox.net) has quit (Ping timeout: 245 seconds)
2012-08-13 10:18:01	mitch0	arossouw: also, your line 6 is UB
2012-08-13 10:18:03	zap0	Nicknamehere, learn what a symbol is.
2012-08-13 10:18:08	Drajwer	blobs reminds me only of databases
2012-08-13 10:18:20	n00b6502	a "blob" is when you have somethign that might be represented as a tree of objects with pointers, but compiled into a single block of memory
2012-08-13 10:18:21	arossouw	UB ?
2012-08-13 10:18:32	morfin	!UB
2012-08-13 10:18:33	Stormhawk	morfin, XAVeRY: pointers aren't complicated. Managing the resources they point to is.
2012-08-13 10:18:33	nolyc	Undefined behavior results when programs attempt to do things for which the standard defines no semantics, and requires no diagnostic either. Examples include dereferencing invalid pointers and dividing by zero. Executing such programs may cause them to produce incorrect results, crash, silently "work", or even format the hard drive.
2012-08-13 10:18:35	n00b6502	such that it is one allocation, and always contiguous
2012-08-13 10:18:43	XAVeRY	Stormhawk: yes, that's what I meant. :)
2012-08-13 10:18:46	Sausage	Neither C nor C++ have any concept of a "Binary Large Object"
2012-08-13 10:18:47	Sausage	But for whatever you're doing, C++ had standard-layout classes which are compatible with plain old C structs
2012-08-13 10:18:57	arossouw	wow, ok
2012-08-13 10:18:58	Stormhawk	XAVeRY: it's worth being precise here. Saying "pointers are complicated" scares people off
2012-08-13 10:19:01	zap0	Nicknamehere, C++ is not an interpreted language.
2012-08-13 10:19:09	<--	ambroff (~ambroff@c-24-4-207-161.hsd1.ca.comcast.net) has quit (Quit: Leaving...)
2012-08-13 10:19:11	Stormhawk	Pointers themselves are about as simple as it gets. They point.
2012-08-13 10:19:15	XAVeRY	Stormhawk: alright. thanks.
2012-08-13 10:19:18	Stormhawk	;)
2012-08-13 10:19:34	n00b6502	pointers create emergent complexity
2012-08-13 10:19:38	morfin	yes but what they are pointing can be insane
2012-08-13 10:19:42	Stormhawk	Sure
2012-08-13 10:20:00	n00b6502	and let you make magic things like Blobs
2012-08-13 10:20:05	Nicknamehere	zap0,  I spent the last 30 minutes trying to figure this out, http://codepad.org/B6qQ8XCA line 63, how can I fix it. I am aware of other issues that are possible in the code, cannot do anything in regard to it, due to restrictions on the assessment
2012-08-13 10:20:08	Stormhawk	But we should be careful not to propagate the "pointers are scary and complex" lie
2012-08-13 10:20:15	<--	Octal_ (~quassel@static.25.237.9.5.clients.your-server.de) has quit (Remote host closed the connection)
2012-08-13 10:20:23	arossouw	thanks, will find better way to do this :-)
2012-08-13 10:20:26	-->	Ichiro_Ino (~Ichiro_In@112.198.64.1) has joined ##c++
2012-08-13 10:20:32	<--	dhruvasagar (~dhruvasag@122.172.230.166) has quit (Ping timeout: 244 seconds)
2012-08-13 10:20:32	companion_cube	if people can program in C, it means that pointers are not so complex
2012-08-13 10:20:36	morfin	ass.dat is good name
2012-08-13 10:21:02	Stormhawk	Most notably because when people say "shared_ptr" or whatever, they see the word pointer and decide not to use it; which is A Bad Thing.
2012-08-13 10:21:06	-->	libertas (1200@60.215.189.46.rev.vodafone.pt) has joined ##c++
2012-08-13 10:21:12	Nicknamehere	morfin: Cannot change it as part of the assignment, neither can most of the functions
2012-08-13 10:21:24	Sausage	Use the term "Raw pointer"
2012-08-13 10:21:28	XAVeRY	"dat.ass" sounds more appropriate.
2012-08-13 10:21:31	LordCrc	Stormhawk: should have named it "shared_thingy"
2012-08-13 10:21:32	n00b6502	Sausage:"Neither C nor C++ have any concept of a "Binary Large Object" .. yet C/C++ is the best language for using them.close enough to asm, but portable and much easier to read and write
2012-08-13 10:21:35	Sausage	Any use of a raw pointer immediately raises a bunch of questions in the reader's head about how it's used
2012-08-13 10:21:40	Stormhawk	LordCrc: perhaps
2012-08-13 10:21:44	-->	dhruvasagar (~dhruvasag@122.172.230.166) has joined ##c++
2012-08-13 10:21:46	Stormhawk	shared_resource might have worked
2012-08-13 10:21:51	morfin	fin >> gRecs[i].Subjects[j].Status;
2012-08-13 10:21:53	Sausage	C/C++ is still not a language
2012-08-13 10:21:54	-->	Alice3 (~Alice@cpc3-grim12-0-0-cust856.12-3.cable.virginmedia.com) has joined ##c++
2012-08-13 10:21:56	-->	tjadc (~quassel@196-215-126-5.dynamic.isadsl.co.za) has joined ##c++
2012-08-13 10:22:10	zap0	Nicknamehere, cast it.
2012-08-13 10:22:15	-->	barq (~101715417@client-86-2-135-99.sqy-bng-11.adsl.virginmedia.com) has joined ##c++
2012-08-13 10:22:16	<--	MarkovBot (~MarkovBot@124244186213.ctinets.com) has quit (Read error: Connection reset by peer)
2012-08-13 10:22:17	morfin	but there no operator >> for enum
2012-08-13 10:22:22	<--	RazielZ (~Raziel@78.97.99.188) has quit (Read error: Connection reset by peer)
2012-08-13 10:22:30	Nicknamehere	zap0: How to I do so, I don't know
2012-08-13 10:22:35	Guest18635	"C/C++ is the best language" LOL
2012-08-13 10:22:35	n00b6502	if i say "malloc"/"realloc" and compile it with g++ maybe thats c/c++ :)
2012-08-13 10:22:42	Drajwer	I like stack allocated objects whenever it is a good idea. I try to not use pointers (shared_ptrs) alot
2012-08-13 10:22:46	<--	barq (~101715417@client-86-2-135-99.sqy-bng-11.adsl.virginmedia.com) has quit (Client Quit)
2012-08-13 10:22:46	morfin	Nicknamehere, as i can see
2012-08-13 10:22:50	morfin	you have enum StatusType{eEnrolled,eProvisional,eWithdrawn};
2012-08-13 10:22:53	-->	RazielZ (~Raziel@78.97.99.188) has joined ##c++
2012-08-13 10:22:56	Sausage	n00b6502: No, that's just poor C++
2012-08-13 10:22:57	Nicknamehere	yes
2012-08-13 10:23:03	morfin	and struct struct SubjectType{ char Code[8]; StatusType Status; int Mark;};
2012-08-13 10:23:07	zap0	Nicknamehere, fin >> (uint_t)((Status_type)(...));
2012-08-13 10:23:11	Nicknamehere	morfin: yes
2012-08-13 10:23:30	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 276 seconds)
2012-08-13 10:23:33	-->	barq (~101715417@client-86-2-135-99.sqy-bng-11.adsl.virginmedia.com) has joined ##c++
2012-08-13 10:23:34	Sausage	"C/C++" is just a way to try justify sloppy use of C++, when not used out of sheer ignorance
2012-08-13 10:23:37	morfin	you can't just put StatusType to >> i think
2012-08-13 10:23:45	-->	Astus (~Astus@86.123.42.221) has joined ##c++
2012-08-13 10:23:45	<--	Astus (~Astus@86.123.42.221) has quit (Changing host)
2012-08-13 10:23:45	-->	Astus (~Astus@unaffiliated/astus) has joined ##c++
2012-08-13 10:23:45	XAVeRY	Sausage: well said.
2012-08-13 10:23:50	Stormhawk	Nicknamehere: We've been through this already.
2012-08-13 10:23:54	Guest18635	most usually sheer ignorance I'd say Sausage
2012-08-13 10:23:59	<--	hauron (~hauron@cpc25-haye18-2-0-cust20.17-4.cable.virginmedia.com) has quit (Read error: Connection reset by peer)
2012-08-13 10:24:00	n00b6502	:)
2012-08-13 10:24:17	n00b6502	if you just wanted one way of doing things why bother with so much inherited from c
2012-08-13 10:24:22	morfin	{enum StatusType{eEnrolled,eProvisional,eWithdrawn};StatusType Status;cout<<Status;}
2012-08-13 10:24:22	<--	barq (~101715417@client-86-2-135-99.sqy-bng-11.adsl.virginmedia.com) has left ##c++
2012-08-13 10:24:23	geordi	warning: 'Status' is used uninitialized in this function
2012-08-13 10:24:27	morfin	crap
2012-08-13 10:24:36	<--	iPhoneMRZ (~iphonemrz@95.75.111.112) has quit (Quit: Colloquy for iPhone - http://colloquy.mobi)
2012-08-13 10:24:38	Nicknamehere	Stormhawk: I'm sorry, kinda new to cpp, tried looking at what you said, but had issues understanding
2012-08-13 10:24:40	morfin	{enum StatusType{eEnrolled,eProvisional,eWithdrawn};StatusType Status=2;cout<<Status;}
2012-08-13 10:24:40	geordi	error: invalid conversion from 'int' to 'main(int, char**)::StatusType'
2012-08-13 10:24:45	zap0	Stormhawk, i reckon Nicknamehere is the  'It-compiles ship-it'  type ;)
2012-08-13 10:24:56	Sausage	Because bjarne, a couple of decades ago, thought being somewhat source compatible with C was a good idea.
2012-08-13 10:25:05	et	geordi: replace 2 with eEnrolled
2012-08-13 10:25:07	geordi	0
2012-08-13 10:25:12	Kasreyn	wasn't too long ago someone in here wanted C++ objects in C .. such are the times we live in?
2012-08-13 10:25:22	Sausage	Today, it just means warts and parts of C++ that need to be avoided completely.
2012-08-13 10:25:43	gibberish	But nobody can make a C++ replacement without it.
2012-08-13 10:25:46	 *	gibberish cries
2012-08-13 10:25:48	zap0	Nicknamehere, fin >> tmp;       check tmp is in range of your enum.    cast tmp to StatusType    set your data.
2012-08-13 10:25:52	et	can't avoid it when using C libraries
2012-08-13 10:26:01	n00b6502	exactly
2012-08-13 10:26:02	Nicknamehere	zap0: thanks, I will try that now
2012-08-13 10:26:39	graphitemaster	I really wanted to actually believe I was in a channel with actual programmers, but now I'm just reminded that you don't explore, you just listen to the supeiror one.  It's like a channel full of wrong people, I think I'll just leave.
2012-08-13 10:26:46	Drajwer	first C++ compilers were just fancy preprocessors over plain C compilers
2012-08-13 10:26:55	morfin	yes there no way to read to enum directly
2012-08-13 10:26:56	-->	Areks (~Areks@176.14.9.15) has joined ##c++
2012-08-13 10:27:10	morfin	just realized it's reading
2012-08-13 10:27:13	-->	Griswoldz (~Griswoldz@178-37-180-4.adsl.inetia.pl) has joined ##c++
2012-08-13 10:27:38	Sausage	graphitemaster: ##programming -- only C++ fangirls here :))
2012-08-13 10:27:47	Stormhawk	graphitemaster: You're wrong, but you won't be missed.
2012-08-13 10:27:53	zap0	graphitemaster, i suspect you are gay.
2012-08-13 10:28:00	<--	pgas (~user@pdpc/supporter/active/pgas) has quit (Remote host closed the connection)
2012-08-13 10:28:12	Guest18635	"I think I'll just leave" please, do
2012-08-13 10:28:14	n00b6502	graphitemaster: stay and fight
2012-08-13 10:28:48	gibberish	Pttfh, staying or leaving doesn't make a difference.
2012-08-13 10:29:00	zap0	yes it doesn't
2012-08-13 10:29:06	Sausage	This channel isn't for exploring programming concepts, anyway. It's a C++ channel for discussing C++. If you have a problem with C++ one day, we will come in handy. =p
2012-08-13 10:29:07	<--	RazielZ (~Raziel@78.97.99.188) has quit (Read error: Connection reset by peer)
2012-08-13 10:29:13	-->	Tupples (58f03fd8@gateway/web/freenode/ip.88.240.63.216) has joined ##c++
2012-08-13 10:29:17	graphitemaster	first highlight, good channel. second highlight, nope, I'm very right. third highlight that is quite an immature statement. forth highlight I just did.
2012-08-13 10:29:23	-->	RazielZ (~Raziel@78.97.99.188) has joined ##c++
2012-08-13 10:29:47	zap0	i was right.
2012-08-13 10:30:01	arossouw	so is this one better ? http://ideone.com/HhRQ6
2012-08-13 10:30:06	Sausage	zap0 is coming on to you
2012-08-13 10:30:06	Kasreyn	graphitemaster: whats that supposed to mean? a programmer usually knows one is not always right
2012-08-13 10:30:17	<--	RazielZ (~Raziel@78.97.99.188) has quit (Read error: Connection reset by peer)
2012-08-13 10:30:32	graphitemaster	I'm saying that it's rude to suggest to people that using or not using a feature is bad or good period.
2012-08-13 10:30:49	Sausage	You can't know you're absolutely right, but weighing up two comparable options, you can make an educated choice.
2012-08-13 10:30:58	Tupples	What is the void() function in this code: http://ideone.com/LWUhi std::tr1::function<void()> is the void type?
2012-08-13 10:31:20	Sausage	void() is a function type, a function taking no arguments and returning void
2012-08-13 10:31:21	morfin	it's C++03 i think
2012-08-13 10:31:40	graphitemaster	"pointers are poor C++ don't use them", in what context of C++? the perfect world that someone devised void of any C-ism, and bundled with boost and the stdlib?
2012-08-13 10:31:42	morfin	std::function is wrapper around function reference
2012-08-13 10:31:47	Sausage	std::function is cute and takes a function type to describe the functions you want to store with it
2012-08-13 10:31:48	zap0	Nicknamehere, where is ass1.txt on your file system, how can the app possible guess where it is?
2012-08-13 10:31:51	Tupples	Sausage, so this function returns void of parameters are void?
2012-08-13 10:32:02	Sausage	int(int, float) would be a function returning int and taking int, float
2012-08-13 10:32:04	Stormhawk	graphitemaster: Hardly; there are "best practices" based on decades of experience. These aren't just "this is how it's done in C++ because we like to be homogeneous", they're "this is a way to make sure your code is as correct as possible"
2012-08-13 10:32:04	morfin	it was in tr1 before c++11?
2012-08-13 10:32:12	--	Vir is now known as Guest1113
2012-08-13 10:32:13	-->	V||r (~mkretz@sette-privileged.fias.uni-frankfurt.de) has joined ##c++
2012-08-13 10:32:14	morfin	:O
2012-08-13 10:32:16	<--	molixiaoge (~molixiaog@58.215.204.118) has quit (Quit: 暂离)
2012-08-13 10:32:18	Sausage	You probably recognize it better when it's declaring something of that type: int foo(int, float)
2012-08-13 10:32:20	<--	Guest1113 (~mkretz@kde/mkretz) has quit (Read error: Connection reset by peer)
2012-08-13 10:32:31	zap0	Stormhawk, there is no such thing as correct.
2012-08-13 10:32:46	n00b6502	Stormhawk if it was as clear cut as Sausage seems to think why bother with a language thats so versatile
2012-08-13 10:32:52	-->	RazielZ (~Raziel@78.97.99.188) has joined ##c++
2012-08-13 10:32:56	Stormhawk	zap0: Correct in terms of solving the problem
2012-08-13 10:32:56	-->	molixiaoge (~molixiaog@58.215.204.118) has joined ##c++
2012-08-13 10:32:58	<--	V||r (~mkretz@sette-privileged.fias.uni-frankfurt.de) has quit (Changing host)
2012-08-13 10:32:58	-->	V||r (~mkretz@kde/mkretz) has joined ##c++
2012-08-13 10:33:02	<--	moo (~moo@lighttpd/moo) has quit (Remote host closed the connection)
2012-08-13 10:33:07	Stormhawk	with a minimum of side effects, edge cases, bugs, etc.
2012-08-13 10:33:10	Tupples	Sausage, thank you I understood
2012-08-13 10:33:11	--	V||r is now known as Vir
2012-08-13 10:33:14	n00b6502	its the tool that produced the datastructures and its going to continue evolving
2012-08-13 10:33:25	Sausage	Raw pointers pose a problem for anything trying to understand your code. You should keep them to a minimum at the very least.
2012-08-13 10:33:32	Sausage	Never in code that people will actually have to look at
2012-08-13 10:33:32	BadDesign	Undeterministic behaviour anyone?
2012-08-13 10:33:38	BadDesign	*Ne
2012-08-13 10:33:49	Sausage	Even for plain old reference pointers, you either write very loud comments about their usage, or use a pointer type to enforce it
2012-08-13 10:34:10	morfin	hm?
2012-08-13 10:34:15	Sausage	Raw pointers really have no place being littered around in a well-written C++ program
2012-08-13 10:34:16	-->	nojhan (~nojhan@2001:4b10:100:5::2) has joined ##c++
2012-08-13 10:34:16	<--	nojhan (~nojhan@2001:4b10:100:5::2) has quit (Changing host)
2012-08-13 10:34:16	-->	nojhan (~nojhan@pdpc/supporter/active/nojhan) has joined ##c++
2012-08-13 10:34:20	zap0	Sausage, a pointer is just an offset, it isn't any more funcdamentally weird than array indexing.
2012-08-13 10:34:20	n00b6502	Sausage so how about writing a different language that compiles to C where you can't use raw pointers. sounds like thats what you want.
2012-08-13 10:34:23	<--	Guest102 (~xazax@gprs4f7a07ca.pool.t-umts.hu) has quit (Remote host closed the connection)
2012-08-13 10:34:29	<--	RazielZ (~Raziel@78.97.99.188) has quit (Read error: Connection reset by peer)
2012-08-13 10:34:41	morfin	:D
2012-08-13 10:34:42	Sausage	zap0: If you stored ints instead of iterators without describing their usage clearly you have the same problem
2012-08-13 10:34:46	morfin	no pointers?
2012-08-13 10:34:52	Sausage	n00b6502: Or I can write C++, well.
2012-08-13 10:34:56	Tupples	,Sausage, what if my function is void f(int) how will I indicate my std::function object?
2012-08-13 10:35:01	Sausage	void(int)
2012-08-13 10:35:04	graphitemaster	Stormhawk, suggesting to follow these "best practices" because not following them has side effects is an invalid argument, these best practices themselfs have tons of caveats and only work around the problem by exposing a safe interface, that is isn't as flexible.
2012-08-13 10:35:14	n00b6502	it must be a poor tool if you like to tell people they use it badly
2012-08-13 10:35:14	Sausage	The function type syntax is similar to arrays
2012-08-13 10:35:17	morfin	obviously like this
2012-08-13 10:35:24	XAVeRY	Nicknamehere: http://ideone.com/IzBAq
2012-08-13 10:35:26	morfin	std::function<void(int)>
2012-08-13 10:35:26	Tupples	Sausage, this made an error: http://ideone.com/USqHi
2012-08-13 10:35:29	<--	chalcedony (~llhull@unaffiliated/chalcedony) has quit (Excess Flood)
2012-08-13 10:35:35	Kasreyn	i remember that troll (not me) who argued one can determine the success of a program solely if it performs the intended task
2012-08-13 10:35:36	Sausage	n00b6502: Or it's a tool that's too far above their heads to grasp why they're using it badly
2012-08-13 10:35:50	n00b6502	no , its a tool with many possibilities
2012-08-13 10:35:54	Sausage	Which is the case with the majority of C++ programmers
2012-08-13 10:35:55	morfin	so you're against pointers
2012-08-13 10:36:02	n00b6502	then its a bad tool
2012-08-13 10:36:08	n00b6502	for the type of code YOU want to write
2012-08-13 10:36:20	-->	robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
2012-08-13 10:36:25	n00b6502	for me, the reason to use C++ is its C legacy
2012-08-13 10:36:27	gibberish	It's a fine tool with many poor teachers.
2012-08-13 10:36:30	Guest18635	that anyone with an average grasp of C++ would like to write
2012-08-13 10:36:34	Sausage	It's a fine tool for the code I want to write
2012-08-13 10:36:35	n00b6502	for you it sounds like C is something you want to forget
2012-08-13 10:36:38	arossouw	so how do you go about with class association without pointers?
2012-08-13 10:36:49	n00b6502	which means its got extraneous syntax
2012-08-13 10:36:51	zap0	Sausage, and iterator may have more semantic meaning to you, the compile doesn't care
2012-08-13 10:36:58	n00b6502	the most common case should be the shortest syntax
2012-08-13 10:36:59	Sausage	The fact you can write garbage C++ doesn't make C++ a worse tool for me.
2012-08-13 10:37:14	n00b6502	if you think "raw pointers shouldn't be used" - then the default syntax should be the one you think SHOULD be used
2012-08-13 10:37:15	Guest18635	n00b6502: so you use C++ to write crappy C++
2012-08-13 10:37:17	n00b6502	then you specialize
2012-08-13 10:37:29	gibberish	There's also a fine tool like C# where you don't have to use pointers.
2012-08-13 10:37:30	morfin	you can write garbage code on any language
2012-08-13 10:37:32	Stormhawk	graphitemaster: That depends on the problem.
2012-08-13 10:37:35	n00b6502	no i use it to write C/C++ in cases where there is no alternative like the PS3
2012-08-13 10:37:38	-->	chalced (~llhull@unaffiliated/chalcedony) has joined ##c++
2012-08-13 10:37:39	Nicknamehere	zap0: Thanks, I fixed the issue, and finished part one of the assignment
2012-08-13 10:37:47	Guest18635	if you want to write C code, just use C
2012-08-13 10:37:51	n00b6502	no
2012-08-13 10:37:51	Guest18635	instead of crappy C++
2012-08-13 10:37:58	-->	techhelper1 (~th1@unaffiliated/techhelper1) has joined ##c++
2012-08-13 10:37:59	n00b6502	C with templates is much better
2012-08-13 10:38:02	Stormhawk	graphitemaster: Furthermore, in a channel like this, the best you can hope for is to point someone in the right direction. They're supposed to go away and read up on the caveats, if applicable
2012-08-13 10:38:04	Tupples	http://ideone.com/USqHi Why does it give compile error?
2012-08-13 10:38:04	-->	RazielZ (~Raziel@78.97.99.188) has joined ##c++
2012-08-13 10:38:09	Stormhawk	We're not here to do peoples jobs for them!
2012-08-13 10:38:12	gibberish	std::vector for your SPU.
2012-08-13 10:38:13	Sausage	And C++ with templates is even better.
2012-08-13 10:38:38	graphitemaster	Stormhawk, many people forget that C++ is a multipardigm language, there isn't a requirement that you have to use the stdlib, or objects, you can select a subset, or use pure OOP, or you could just stick to plain C, it's still C++ code.
2012-08-13 10:38:44	n00b6502	until you need to deal with extreme cache-coherency and non-standard memory architectures
2012-08-13 10:38:45	Kasreyn	what qualifies as "crappy C++"? C with classes?
2012-08-13 10:38:51	zap0	Stormhawk, do you have multiple personality disorder?     what is this 'we'?
2012-08-13 10:38:54	Sausage	C++ deals with them perfectly
2012-08-13 10:39:01	n00b6502	hahahaha
2012-08-13 10:39:06	-->	Kn|t3 (Kn|t3@nat/google/x-uisukfcwwmatfyma) has joined ##c++
2012-08-13 10:39:11	 *	Stormhawk sighs
2012-08-13 10:39:11	n00b6502	not idiomatic C++stdlib
2012-08-13 10:39:12	--	chalced is now known as chalcedony
2012-08-13 10:39:14	gibberish	I'd say OOP can fit in the crappy.
2012-08-13 10:39:23	-->	KoVadim (~Vadim@kostina.tenet.odessa.ua) has joined ##c++
2012-08-13 10:39:24	Sausage	Your idea of idiomatic C++ must be different from the rest of the worlds.
2012-08-13 10:39:34	Tupples	Can someone help me?
2012-08-13 10:39:36	n00b6502	well you need to do a lot of custom pointer manipulation
2012-08-13 10:39:49	n00b6502	which is why C/C++ gets used, instead of C-sharp or whatever
2012-08-13 10:39:49	Sausage	Because good C++ increases the semantic richness, readability/understandability, and manageability of your code without any overheads.
2012-08-13 10:39:56	zap0	Tupples, which part of the compiler error do you not understand?
2012-08-13 10:40:02	Sausage	You're doing pointer manipulation a lot because you apparently can't abstract it in your head to a higher level.
2012-08-13 10:40:03	<--	Astus (~Astus@unaffiliated/astus) has quit (Quit: Astus)
2012-08-13 10:40:05	n00b6502	if you didnt' need to use pointers, you dont need them in the synta
2012-08-13 10:40:25	Stormhawk	zap0: You are here to do the work of others?
2012-08-13 10:40:26	Tupples	zap0, I mean this error: http://ideone.com/USqHi I used void(int) for void greet(int)
2012-08-13 10:40:30	Stormhawk	If so, I stand corrected
2012-08-13 10:40:35	Stormhawk	And you're an extremely generous person
2012-08-13 10:40:36	-->	SyouJyoA (~perfume@175.244.199.159) has joined ##c++
2012-08-13 10:40:44	Sausage	I actually did propose the removal of raw pointers and replacing them with raw_memory_iterator
2012-08-13 10:40:47	n00b6502	if blahblah* is wrong, why do you have to type out shared_ptr<blahblah> or auto_ptr<blahblah> to make it right :)
2012-08-13 10:40:57	n00b6502	good god
2012-08-13 10:40:58	Sausage	But they can't be removed because they are part of the language. A language written almost 2 decades ago and unfortunately made compatible with C
2012-08-13 10:41:09	Sausage	int x[4]; is horrible too, and it's the "default syntax"
2012-08-13 10:41:14	n00b6502	fortunately, which is why it exists
2012-08-13 10:41:26	n00b6502	the type of code you want to write is better handled in newer langauges
2012-08-13 10:41:33	n00b6502	you dont need C++ by the sounds of it
2012-08-13 10:41:34	Sausage	No it isn't
2012-08-13 10:41:42	Sausage	It's handled fine in C++ by not using the legacy C parts
2012-08-13 10:41:44	izhak	Tupples: You are supplying no argument at line 21
2012-08-13 10:41:50	-->	Rabenklaue (~Rabe@f051038123.adsl.alicedsl.de) has joined ##c++
2012-08-13 10:42:01	zap0	Stormhawk, i didn't say that.    i said you are speaking on behave of others, but i don't recall anyone ever giving you such authority.   herein lies have the nonsense in this channel; so much assertion for things you have no place asserting.
2012-08-13 10:42:03	morfin	so pointers are legacy?
2012-08-13 10:42:07	morfin	you think so?
2012-08-13 10:42:10	Rabenklaue	Hi, is there a way setting two variables to the same value atomically?
2012-08-13 10:42:11	Sausage	Sure.
2012-08-13 10:42:17	Rabenklaue	e.g. std::atomic<Node*> _tail; _tail.load()->next = buffer; _tail = _tail.load()->next;
2012-08-13 10:42:20	n00b6502	pointers are LEGACY?!
2012-08-13 10:42:21	Sausage	I do believe there is an std::raw_memory_iterator even
2012-08-13 10:42:24	Kasreyn	smart pointers feels like cheating to me. like, was it invented so we could do sloppy fixes to what was a bad C design in the first place?
2012-08-13 10:42:27	Tupples	izhak, so what should I write, it->second(int)?
2012-08-13 10:42:30	morfin	and what are you suggesting then?
2012-08-13 10:42:30	<--	Ch3y3ZZE (~chatzilla@cpe-76-87-64-175.socal.res.rr.com) has quit (Ping timeout: 260 seconds)
2012-08-13 10:42:35	Stormhawk	zap0: I'm the source of nonsense in this channel?
2012-08-13 10:42:39	Sausage	High level abstractions of what you actually want to achieve?
2012-08-13 10:42:40	Stormhawk	That's the funniest thing I've heard all year.
2012-08-13 10:42:45	XAVeRY	wow, so much negativity. I'm out of here.
2012-08-13 10:42:48	<--	mitsuhiko (~mitsuhiko@ubuntu/member/mitsuhiko) has quit (Excess Flood)
2012-08-13 10:42:52	zap0	Stormhawk, when you speak on behalf of others, yes.
2012-08-13 10:42:55	speedy	Sausage: what would be better compared to int x[4]; ?
2012-08-13 10:42:56	gibberish	Heh.
2012-08-13 10:42:57	Stormhawk	Bye then
2012-08-13 10:43:02	izhak	Tupples: It depends on what are you trying to acheive
2012-08-13 10:43:03	<--	Stormhawk (andrewbe@unaffiliated/stormhawk) has left ##c++ ("Grow up, guys")
2012-08-13 10:43:05	Sausage	std::array<int, 4>
2012-08-13 10:43:10	morfin	hmm
2012-08-13 10:43:11	Tupples	Okay thank you
2012-08-13 10:43:13	<--	Tupples (58f03fd8@gateway/web/freenode/ip.88.240.63.216) has quit (Quit: Page closed)
2012-08-13 10:43:23	morfin	and for pointers you're suggesting to use
2012-08-13 10:43:30	morfin	shared_ptr unique_ptr?
2012-08-13 10:43:43	Sausage	Your program isn't based around playing with pointed to memory. Don't write it like it is.
2012-08-13 10:43:44	gibberish	Maybe something that won't fit in your cache line.
2012-08-13 10:43:48	BadDesign	Anyone knows the *reasons* why I get the error: "definition of <name of my member function> is not in namespace enclosing X" although the declaration of the class X as well as the definition are in the same namespace A ?
2012-08-13 10:43:51	Rabenklaue	So that _tail is buffer, and _oldTail->next is also buffer? This producer function might be called from several threads simultanously.
2012-08-13 10:43:54	-->	delicado (~delicado2@121.54.44.231) has joined ##c++
2012-08-13 10:44:00	n00b6502	hahaha then why use a language founded on pointers LMAO
2012-08-13 10:44:17	joel_falcou	Sausage is right, use w/e abstraction fit: shared or unique ptr for ownerships emantic, raw ptr for raw ptr with no ownership
2012-08-13 10:44:29	Sausage	Founded on, not advised for writing your entire programs with.
2012-08-13 10:44:30	gibberish	He's force to until someone writes a LLVM from C# to binary.
2012-08-13 10:44:39	joel_falcou	n00b6502 C++ has to cope with stupid C legacy because C guys are too stupid to elvovle, not the other way around.
2012-08-13 10:44:53	Sausage	Raw pointers are prevalent because it was made to be compatible with C, and also the goal of C++ to have no runtime cost and allow high level abstractions over low level ones.
2012-08-13 10:45:01	joel_falcou	so C++ has tools to express your intent, so use them
2012-08-13 10:45:07	-->	Yustme (~fasdfa@dhcp-089-098-055-230.chello.nl) has joined ##c++
2012-08-13 10:45:09	n00b6502	some say C++ might die and C will live on
2012-08-13 10:45:10	-->	Lleo (~Lleo@5355B522.cm-6-6c.dynamic.ziggo.nl) has joined ##c++
2012-08-13 10:45:15	joel_falcou	sure
2012-08-13 10:45:18	n00b6502	if you want high level, C-sharp does it better
2012-08-13 10:45:21	joel_falcou	they say this since 1990
2012-08-13 10:45:23	n00b6502	if you want low level, C does it better
2012-08-13 10:45:30	joel_falcou	n00b6502 noep cause C# has high abstraction cost
2012-08-13 10:45:31	Sausage	Does *what* better?
2012-08-13 10:45:37	Kasreyn	!c
2012-08-13 10:45:39	joel_falcou	n00b6502 you're clearly clueless
2012-08-13 10:45:39	nolyc	c is an old byte processing language without templates, exceptions, namespaces, constructors/destructors (and therefore RAII), virtual function polymorphism, references, operator/function overloading, reusable standard generic containers, or explicitly named casts.
2012-08-13 10:45:53	gibberish	Heh.
2012-08-13 10:45:55	Kasreyn	just to remind you why people use C++ :)
2012-08-13 10:46:05	joel_falcou	considering we cna writ C++ code which speed are on apr with fortrancode, your claim on C beign betetr is clearly a fallacy
2012-08-13 10:46:15	<--	floe_ (~flo@e177091003.adsl.alicedsl.de) has quit (Ping timeout: 276 seconds)
2012-08-13 10:46:20	n00b6502	i didn't say C is a better design
2012-08-13 10:46:25	<--	tjadc (~quassel@196-215-126-5.dynamic.isadsl.co.za) has quit (Read error: Connection reset by peer)
2012-08-13 10:46:29	-->	floe_ (~flo@f052098039.adsl.alicedsl.de) has joined ##c++
2012-08-13 10:46:29	joel_falcou	C is  C, let it rot into microcontroller please
2012-08-13 10:46:37	-->	Burgundy (blublu214@95.77.208.44) has joined ##c++
2012-08-13 10:46:41	n00b6502	lmao
2012-08-13 10:46:41	-->	tjadc (~quassel@196-215-126-5.dynamic.isadsl.co.za) has joined ##c++
2012-08-13 10:46:42	joel_falcou	the fatc C++ is source comaptible is a legacy yes
2012-08-13 10:46:56	Sausage	You admit yourself you like the C++ features to enhance your C
2012-08-13 10:46:58	rexou	s/microcontroller/many embedded systems/
2012-08-13 10:47:01	--	Burgundy is now known as Guest13709
2012-08-13 10:47:12	joel_falcou	rexou many embedded systems now have C++ compielr which are pretty decent
2012-08-13 10:47:14	gibberish	This isn't about C over C++.
2012-08-13 10:47:14	n00b6502	yes. i like the C++ extentions to C
2012-08-13 10:47:16	Sausage	Your problem is you're not yet smart enough to realise how to apply this better to your programs.
2012-08-13 10:47:21	gibberish	It's about being able to use C in C++.
2012-08-13 10:47:22	joel_falcou	^ +1
2012-08-13 10:47:34	joel_falcou	so
2012-08-13 10:47:39	speedy	is there any C++ offline documentation (eg PDF) comparable to the ones you find online ?
2012-08-13 10:47:44	joel_falcou	what's your programm *intent* so we knwo which C++ feature you ought to use
2012-08-13 10:47:44	morfin	but what will be C++ withour raw pointers
2012-08-13 10:47:45	<--	googol_ (~matthew@ip68-4-137-125.oc.oc.cox.net) has quit (Ping timeout: 252 seconds)
2012-08-13 10:47:52	gibberish	It's only C vs C++ because really, you're just drones.
2012-08-13 10:47:53	joel_falcou	morfin a safe language
2012-08-13 10:47:54	Sausage	Better
2012-08-13 10:47:55	n00b6502	we've just seen how C++ has a reference counting system.. which isn't perfect
2012-08-13 10:48:01	n00b6502	C++ library sorry
2012-08-13 10:48:01	-->	Element9 (~Element9@cable-178-148-175-186.dynamic.sbb.rs) has joined ##c++
2012-08-13 10:48:07	n00b6502	i refuse to call C++ the libary
2012-08-13 10:48:08	morfin	i don't think so
2012-08-13 10:48:18	-->	mitsuhiko (~mitsuhiko@ubuntu/member/mitsuhiko) has joined ##c++
2012-08-13 10:48:21	joel_falcou	wth with people these days
2012-08-13 10:48:27	Sausage	shared_ptr, valarray and vector<bool> are bad
2012-08-13 10:48:29	joel_falcou	are you havign orgasms on debugging segfalt cause of sloppy pointers ?
2012-08-13 10:48:42	Sausage	That's not a good argument for writing sloppy C++
2012-08-13 10:48:44	morfin	C++ without pointers is not going to be C++
2012-08-13 10:48:47	<--	sohail (~sohail@unaffiliated/sohail) has quit (Ping timeout: 240 seconds)
2012-08-13 10:48:56	joel_falcou	morfin i never used raw poitner in C++ sicne at least 4 years now
2012-08-13 10:49:07	joel_falcou	you mostly never need them until you need to itnerface with hardware
2012-08-13 10:49:07	gibberish	There's still plenty of people who use C++ because it has better tools, but they still need to have it low level.
2012-08-13 10:49:12	<--	Element9 (~Element9@cable-178-148-175-186.dynamic.sbb.rs) has quit (Client Quit)
2012-08-13 10:49:13	n00b6502	yes
2012-08-13 10:49:13	Sausage	Sure it would, there's almost never a requirement to use raw pointers in C++
2012-08-13 10:49:15	MaNI	pointer segfaults are actually pretty rare and very easy to debug - so that argument is overrated IMO
2012-08-13 10:49:29	Sausage	If you have to, you hide it away behind a descriptive wrapper
2012-08-13 10:49:32	joel_falcou	MaNI considerign i'm payed a shitload of money to fix them ... i wonder :p
2012-08-13 10:49:42	-->	em (~em@unaffiliated/emma) has joined ##c++
2012-08-13 10:49:48	-->	Patteh (~BOB@cpc9-hari15-2-0-cust297.20-2.cable.virginmedia.com) has joined ##c++
2012-08-13 10:49:48	<--	Patteh (~BOB@cpc9-hari15-2-0-cust297.20-2.cable.virginmedia.com) has quit (Changing host)
2012-08-13 10:49:48	-->	Patteh (~BOB@unaffiliated/patteh) has joined ##c++
2012-08-13 10:49:53	joel_falcou	MaNI and s/segfault/leaks if you prefer
2012-08-13 10:49:58	morfin	and what did you use
2012-08-13 10:50:01	MaNI	in any moderately decent team most time is spent on logic errors and other far more difficult to track down stuff
2012-08-13 10:50:01	delicado	pointer segfaults only happens when the ones doing the coding is stupid
2012-08-13 10:50:06	morfin	if you did not use pointers?
2012-08-13 10:50:18	delicado	*are
2012-08-13 10:50:19	joel_falcou	depending on the task at hand it was either reference or unique_ptr
2012-08-13 10:50:25	Sausage	Manually handling memory makes it a lot easier to be stupid
2012-08-13 10:50:26	joel_falcou	shared_ptr is a sloppy tools
2012-08-13 10:50:30	<--	jrickman_ (~jrickman@h240.56.91.75.dynamic.ip.windstream.net) has quit (Quit: Leaving...)
2012-08-13 10:50:35	joel_falcou	as t may force you to write crappy code
2012-08-13 10:50:40	rexou	morfin: references/stack
2012-08-13 10:50:47	joel_falcou	ususally you either want alias over your data (reference) or a string ownership (unique_ptr)
2012-08-13 10:50:54	Sausage	The number of random segmentation faults when I write C++ vs C is at least 1:100
2012-08-13 10:50:55	joel_falcou	and otehr stuff use RAII with container
2012-08-13 10:50:55	-->	floe__ (~flo@e179014228.adsl.alicedsl.de) has joined ##c++
2012-08-13 10:51:04	joel_falcou	s/string/strict sorry
2012-08-13 10:51:15	<--	floe_ (~flo@f052098039.adsl.alicedsl.de) has quit (Ping timeout: 260 seconds)
2012-08-13 10:51:19	gibberish	The moral of the story is to not code like you.
2012-08-13 10:51:24	joel_falcou	:|
2012-08-13 10:51:28	Sausage	And the end result is more effort to write a program that focuses on the implementation rather than the goal
2012-08-13 10:51:32	MaNI	even leaks most the time are relatively easy to track down - I don't think the argument that "IF you make a mistake you may have to track down something thats easy to find, easy to fix and can mostly be found via automated testing" is really a good argument against something
2012-08-13 10:51:51	joel_falcou	MaNI really ? i thnik you overestimate real people inr eal dev team
2012-08-13 10:52:02	joel_falcou	especially peopel writting C++ comign from a non dev culture
2012-08-13 10:52:16	MaNI	those people should not be writing C++
2012-08-13 10:52:22	MaNI	the solution is not to dumb everything down
2012-08-13 10:52:23	joel_falcou	except theuir comapny want them to
2012-08-13 10:52:30	gibberish	And you should not be helping them write C++.
2012-08-13 10:52:31	-->	Element9 (~Element9@cable-178-148-175-186.dynamic.sbb.rs) has joined ##c++
2012-08-13 10:52:41	joel_falcou	seriously unique_ptr is not dumbing down it's the expression of a clear high level intent
2012-08-13 10:52:46	joel_falcou	so is shared_ptr
2012-08-13 10:52:53	joel_falcou	so is std::vector and array
2012-08-13 10:52:58	-->	Griswoldz_ (~Griswoldz@77-253-154-179.adsl.inetia.pl) has joined ##c++
2012-08-13 10:53:00	MaNI	the entire world cannot use safety scissors for everything just so that we can have some feel good "everyone can do what they want" effect
2012-08-13 10:53:06	-->	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has joined ##c++
2012-08-13 10:53:06	<--	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has quit (Changing host)
2012-08-13 10:53:06	-->	sohail (~sohail@unaffiliated/sohail) has joined ##c++
2012-08-13 10:53:07	joel_falcou	ok
2012-08-13 10:53:12	joel_falcou	i see you're missing the point
2012-08-13 10:53:19	gibberish	No, you probably are.
2012-08-13 10:53:22	joel_falcou	lol sure
2012-08-13 10:53:25	gibberish	Yeap.
2012-08-13 10:53:29	joel_falcou	and wy ?
2012-08-13 10:53:36	gibberish	I have no idea. Why are you?
2012-08-13 10:53:41	joel_falcou	o_O
2012-08-13 10:53:45	joel_falcou	this snetence make no sense
2012-08-13 10:53:51	gibberish	You're just lost.
2012-08-13 10:53:52	joel_falcou	you're claiming I ma wrong
2012-08-13 10:53:57	joel_falcou	so prove it to me
2012-08-13 10:53:58	gibberish	I am.
2012-08-13 10:54:03	Sausage	Writing dangerous and implement-oriented code because you can isn't a good thing
2012-08-13 10:54:06	gibberish	What are you arguing about?
2012-08-13 10:54:08	-->	spobat (~lib@p5DC77511.dip.t-dialin.net) has joined ##c++
2012-08-13 10:54:10	<--	altin (~altin@flossk/altin) has quit (Ping timeout: 260 seconds)
2012-08-13 10:54:14	joel_falcou	Sausage are you telling this to me ?
2012-08-13 10:54:25	Sausage	No, MaNI.
2012-08-13 10:54:31	joel_falcou	oh ok
2012-08-13 10:54:33	gibberish	The issue is being able to use C.
2012-08-13 10:54:41	<--	spobat (~lib@p5DC77511.dip.t-dialin.net) has quit (Client Quit)
2012-08-13 10:54:41	joel_falcou	yes the solutino is not usign it
2012-08-13 10:54:46	gibberish	See.
2012-08-13 10:54:48	gibberish	There you go.
2012-08-13 10:54:49	Sausage	One benefit of C++ is you can take the plastic off of your safety scissors whenever you choose, though good C++ practice is to abstract that, and of course only do it if it's actually neccessary
2012-08-13 10:54:52	n00b6502	the issue is being able to use techniques outside of c++stdlib
2012-08-13 10:54:53	gibberish	You are wrong.
2012-08-13 10:55:05	joel_falcou	and if the OP want to do C in a .cpp , it can go check ##C
2012-08-13 10:55:07	gibberish	You can't just not use it.
2012-08-13 10:55:09	<--	Griswoldz (~Griswoldz@178-37-180-4.adsl.inetia.pl) has quit (Ping timeout: 244 seconds)
2012-08-13 10:55:13	joel_falcou	gibberish i do it all the time
2012-08-13 10:55:19	gibberish	That is your problem.
2012-08-13 10:55:26	joel_falcou	especially on such pointy matter as ressources maangement where C is clearly lackign abstractions
2012-08-13 10:55:29	gibberish	For some reason, you think everyone should be like you.
2012-08-13 10:55:32	joel_falcou	yes
2012-08-13 10:55:33	-->	Dicebot (~Dicebot@87.246.131.149) has joined ##c++
2012-08-13 10:55:38	joel_falcou	cause usually i am right
2012-08-13 10:55:40	gibberish	But again, people don't have to be.
2012-08-13 10:55:44	gibberish	And you are wrong.
2012-08-13 10:55:49	joel_falcou	npe
2012-08-13 10:55:51	Sausage	If by "like him" you mean "write good C++"
2012-08-13 10:55:55	gibberish	There's very valid places to do so.
2012-08-13 10:56:00	<--	floe__ (~flo@e179014228.adsl.alicedsl.de) has quit (Ping timeout: 276 seconds)
2012-08-13 10:56:03	gibberish	See, you are wrong too.
2012-08-13 10:56:06	joel_falcou	gibberish where writing C is what you want yes, not C++
2012-08-13 10:56:11	gibberish	If you can't see that there is a need, you are blind.
2012-08-13 10:56:18	n00b6502	heh.
2012-08-13 10:56:19	joel_falcou	if you need to write C, write C
2012-08-13 10:56:20	joel_falcou	period
2012-08-13 10:56:25	gibberish	You are blind.
2012-08-13 10:56:29	joel_falcou	sure
2012-08-13 10:56:32	gibberish	Blind as a bad in your zealot cave.
2012-08-13 10:56:35	morfin	oh carp
2012-08-13 10:56:37	joel_falcou	hahaha
2012-08-13 10:56:37	MaNI	if you don't need pointers write Java
2012-08-13 10:56:40	Sausage	Needing to write C isn't neccessary in C++
2012-08-13 10:56:41	joel_falcou	...
2012-08-13 10:56:42	n00b6502	zealot cave yes
2012-08-13 10:56:47	joel_falcou	sure
2012-08-13 10:56:48	-->	UFO686 (~zhangyh@124.73.66.119) has joined ##c++
2012-08-13 10:56:50	gibberish	Sure it is. C++ has better tools.
2012-08-13 10:56:57	gibberish	Why not use them and still have pointers?
2012-08-13 10:57:10	joel_falcou	just use poitner for what they are and not do EVERYTHIGN with them
2012-08-13 10:57:11	n00b6502	to implement nice  things like BLOBS
2012-08-13 10:57:12	Sausage	I mean, there is no need to write C when you have C++
2012-08-13 10:57:21	n00b6502	for fast paging systems or whatever
2012-08-13 10:57:22	gibberish	Instea of say, use C++ and then get cache hits.
2012-08-13 10:57:27	joel_falcou	lol
2012-08-13 10:57:31	joel_falcou	gibberish this is non sense
2012-08-13 10:57:33	n00b6502	unless you're on the PS3
2012-08-13 10:57:41	morfin	:D ok then for what they are usefull
2012-08-13 10:57:42	Sausage	So what you're saying is, you can't write C++ well
2012-08-13 10:57:46	gibberish	It's not. There are systems you don't use.
2012-08-13 10:57:54	Sausage	Because code written in C++ shouldn't be any different from the equivalent drawn out C version
2012-08-13 10:57:54	gibberish	No, you are saying that.
2012-08-13 10:57:56	-->	gusnan_ (~gusnan@h104n3c1o269.bredband.skanova.com) has joined ##c++
2012-08-13 10:57:56	gibberish	You're bind.
2012-08-13 10:57:57	Drajwer	wtf are these blobs? its not a feature of C nor C++ right?
2012-08-13 10:58:02	morfin	where you can't use stack\reference?
2012-08-13 10:58:05	Sausage	[19:27]	<gibberish>	Instea of say, use C++ and then get cache hits.
2012-08-13 10:58:08	-->	cwkx (~Chris@chris-lab.uv.esol.dur.ac.uk) has joined ##c++
2012-08-13 10:58:13	gibberish	Maybe in your dream world with a simple cache system.
2012-08-13 10:58:14	joel_falcou	morfin raw pointer are onyl useful to interface with bianry level comaptibility library, or when you want unchecked ownership
2012-08-13 10:58:15	Sausage	I read that as: "I tried to write C++ but my programs were slow"
2012-08-13 10:58:27	gibberish	Yes, they wrote it in C++.
2012-08-13 10:58:34	joel_falcou	gibberish my job is to write HPC stuff in C++, i can tell you this is not an issue
2012-08-13 10:58:36	Sausage	Apparently you don't understand C++'s philosophy of no runtime overhead
2012-08-13 10:58:41	morfin	and get PITTA because no ownership checks
2012-08-13 10:58:44	n00b6502	Drajwer: blobs is the practice of precompiling object graphs
2012-08-13 10:58:51	gibberish	joel_falcou: I'm so happy for you and how you think everyone is you.
2012-08-13 10:58:52	joel_falcou	morfin ?
2012-08-13 10:58:54	n00b6502	Drajwer: e.g. with explicit locality
2012-08-13 10:58:56	Sausage	If the code you write in C++ is running less efficiently than C, it's only because you suck at writing C++
2012-08-13 10:59:02	joel_falcou	gibberish just that I am well aware of cachign problem you see
2012-08-13 10:59:05	RokerHRO	!grab Sausage
2012-08-13 10:59:07	nolyc	By your command.
2012-08-13 10:59:09	gibberish	Or maybe the compiler sucks.
2012-08-13 10:59:13	joel_falcou	no
2012-08-13 10:59:14	n00b6502	Drajwer: you get synergy between locatlity and the ability to compress pointers
2012-08-13 10:59:14	morfin	interface with bianry level comaptibility library
2012-08-13 10:59:20	morfin	that means with C libs?
2012-08-13 10:59:22	Drajwer	n00b6502: which language has such feature?
2012-08-13 10:59:25	n00b6502	none
2012-08-13 10:59:29	Drajwer	oh ok
2012-08-13 10:59:31	n00b6502	but you can implement blobs in C/C++
2012-08-13 10:59:32	n00b6502	:)
2012-08-13 10:59:33	joel_falcou	morfin or FORTRAN or other low level language where raw memory is all you have
2012-08-13 10:59:35	-->	mOo (~moo@lighttpd/moo) has joined ##c++
2012-08-13 10:59:36	<--	gusnan (~gusnan@h142n4c1o269.bredband.skanova.com) has quit (Ping timeout: 252 seconds)
2012-08-13 10:59:40	morfin	:O
2012-08-13 10:59:40	gibberish	I mean, you can pretend the PS3 doesn't exist.
2012-08-13 10:59:42	n00b6502	well none to my knowledge
2012-08-13 10:59:44	<--	DVSO (~dvso@pool-74-102-11-79.nwrknj.fios.verizon.net) has quit (Remote host closed the connection)
2012-08-13 10:59:50	gibberish	But I can assure you, the PS3 exist.
2012-08-13 10:59:53	joel_falcou	gibberish bad for you, i actually coded in C++ on th ePS3
2012-08-13 10:59:55	n00b6502	maybe some of the pointerless languages can create blobs behind the scenes
2012-08-13 11:00:00	<--	em (~em@unaffiliated/emma) has quit (Ping timeout: 260 seconds)
2012-08-13 11:00:00	gibberish	And if someone needs help with it, you're just blind.
2012-08-13 11:00:04	n00b6502	pretend PS3 doesn't exist ?!
2012-08-13 11:00:09	Sausage	This is ##c++, not ##ps3
2012-08-13 11:00:09	pwned	I thought he was just bind
2012-08-13 11:00:15	morfin	it's myth
2012-08-13 11:00:15	n00b6502	PS3 was a bold experiment in the future of computing
2012-08-13 11:00:28	Sausage	It was a game console, lol
2012-08-13 11:00:29	n00b6502	manycore...
2012-08-13 11:00:38	Drajwer	n00b6502: why would you need to precompile object graphs?
2012-08-13 11:00:41	gibberish	Right, lets just talk about the best case senerio.
2012-08-13 11:00:41	joel_falcou	the Cell proc was a nice try
2012-08-13 11:00:42	-->	altin (~altin@flossk/altin) has joined ##c++
2012-08-13 11:00:45	joel_falcou	to bad the software sucked
2012-08-13 11:00:52	n00b6502	cache coherency and avoiding CPU overhead loading them
2012-08-13 11:00:56	pwned	I have an experimental ps3 cell cluster used as a parallel computing server here at the university
2012-08-13 11:01:02	gibberish	So the solution really, is to use C++ for the best senerios.
2012-08-13 11:01:04	Drajwer	n00b6502: some practical example?
2012-08-13 11:01:06	joel_falcou	gibberish nope
2012-08-13 11:01:11	n00b6502	streaming systems in games
2012-08-13 11:01:12	n00b6502	and
2012-08-13 11:01:13	Sausage	Question: Why do you think precompiling object graphs is something you can't do well in C++?
2012-08-13 11:01:13	-->	em (~em@unaffiliated/emma) has joined ##c++
2012-08-13 11:01:18	n00b6502	collision datastructures
2012-08-13 11:01:21	joel_falcou	you can write proper HL c++ on constrainted cpu just well
2012-08-13 11:01:24	Sausage	Other than you don't know how to do it well in C++
2012-08-13 11:01:28	-->	Chaser (~kiran@c-71-198-24-142.hsd1.ca.comcast.net) has joined ##c++
2012-08-13 11:01:29	n00b6502	heard of "Havok" ?
2012-08-13 11:01:29	joel_falcou	the fact YOU ailed is just an indicator you're wrong
2012-08-13 11:01:38	gibberish	Heh.
2012-08-13 11:01:49	gibberish	It matters not to me. I'm just glad I'm not blind.
2012-08-13 11:01:55	joel_falcou	yeah sure
2012-08-13 11:01:59	gibberish	I am.
2012-08-13 11:02:03	joel_falcou	anyway
2012-08-13 11:02:04	n00b6502	one peice of key technology in "Havok" is what i call a "blob", their jargon is some acronym... "memory optimized partial polytopes" or something..
2012-08-13 11:02:06	Sausage	The one case C++ will fall over is compiling C++ on a constrained cpu ;P
2012-08-13 11:02:14	n00b6502	its a fancy tree that needs complex custom pointer manipulation to parse
2012-08-13 11:02:14	gibberish	I don't have to go all ape shit if there is a working solution with no error.
2012-08-13 11:02:16	joel_falcou	Sausage not even now
2012-08-13 11:02:33	joel_falcou	gibberish yes te solutino with no error is ot use abstractions
2012-08-13 11:02:39	joel_falcou	but maybe abstarctions is too long a word ?
2012-08-13 11:02:41	n00b6502	can you write video compression algorithms without pointers
2012-08-13 11:02:46	joel_falcou	n00b6502 yup
2012-08-13 11:02:50	n00b6502	or decompression
2012-08-13 11:02:59	morfin	hmm?
2012-08-13 11:03:02	gibberish	Oh yes, I'm glad you've proven your point so boldy. You should just call everyone stupd.
2012-08-13 11:03:06	n00b6502	oh actually yes
2012-08-13 11:03:09	joel_falcou	gibberish just as you do
2012-08-13 11:03:11	Sausage	If your video is represented as a stream of bytes, or blocks, represent it as such in your code.
2012-08-13 11:03:13	n00b6502	can you write COMPRESSION generally without pointers
2012-08-13 11:03:18	joel_falcou	yes
2012-08-13 11:03:23	<--	leo2007 (~leo@119.255.41.67) has quit (Quit: rcirc on GNU Emacs 24.1.2)
2012-08-13 11:03:23	gibberish	No, I just said you're blind.
2012-08-13 11:03:23	pwned	n00b6502: of course you can. With iterators or index access
2012-08-13 11:03:24	joel_falcou	just ahve the proper notion of stream and work rom there
2012-08-13 11:03:34	Sausage	Don't just slap a raw pointer on it, and try to justify being lazy as "I'm writing C/C++"
2012-08-13 11:03:41	gibberish	And a zealot, but not stupid.
2012-08-13 11:03:43	n00b6502	without the ability to map them back onto memory ?!
2012-08-13 11:03:55	joel_falcou	iterator are mapped to memory wtf are you smoking
2012-08-13 11:04:00	Sausage	You're stuck in "everything is memory" mindset
2012-08-13 11:04:02	pwned	joel++
2012-08-13 11:04:07	Sausage	Which doesn't apply at a high level
2012-08-13 11:04:07	n00b6502	everything IS memory
2012-08-13 11:04:09	joel_falcou	and memory is a low level details
2012-08-13 11:04:10	joel_falcou	no
2012-08-13 11:04:16	<--	Carbonflux (~BOB@71-212-127-64.tukw.qwest.net) has quit (Quit: Lumen est solum textura opus)
2012-08-13 11:04:18	Sausage	But you don't program like everything IS memory
2012-08-13 11:04:27	n00b6502	not all the time, sure
2012-08-13 11:04:27	<--	nojhan (~nojhan@pdpc/supporter/active/nojhan) has quit (Remote host closed the connection)
2012-08-13 11:04:28	joel_falcou	what next everythign is BYTE ?
2012-08-13 11:04:32	n00b6502	yes
2012-08-13 11:04:34	Sausage	You use ABSTRACTIONS to make your code UNDERSTANDABLE
2012-08-13 11:04:35	n00b6502	:)
2012-08-13 11:04:35	joel_falcou	n00b6502 then you'r edoing it wrong
2012-08-13 11:05:11	Sausage	If you're conceptually dealing with two video frames, which are a stream of bytes/blocks/whatever, you treat them as such as write your code as such
2012-08-13 11:05:15	joel_falcou	i can tell you that between a mess of pointer shit or properly abstarcted data structue, your coworker from 5 years from now will have more pb understaning th epointer shit than the asbtraction
2012-08-13 11:05:18	pwned	you use capital letters to look like you're roleplaying over irc
2012-08-13 11:05:22	gibberish	Data oriented programming is kind of cool.
2012-08-13 11:05:30	 *	joel_falcou roll a D12
2012-08-13 11:05:37	Sausage	And if you do it right, it will be just as efficient and much easier to understand than the equivalent version taking big chunks of random raw memory and passing them around
2012-08-13 11:05:39	pwned	critical strike on the troll
2012-08-13 11:05:46	joel_falcou	pwned wat do i geet ?
2012-08-13 11:06:00	pwned	you need to kill it with fire
2012-08-13 11:06:01	gibberish	A lifetime supply of dogma.
2012-08-13 11:06:03	joel_falcou	god
2012-08-13 11:06:06	joel_falcou	i don't have any such spell :s
2012-08-13 11:06:23	Sausage	Since the compiler handles the boilerplate, and compilers write code better than humans, the C++ version will probably be faster.
2012-08-13 11:06:23	pwned	then befriend it
2012-08-13 11:06:26	-->	toytoy (~toytoy@unaffiliated/t0yt0y) has joined ##c++
2012-08-13 11:06:30	joel_falcou	pwned :s
2012-08-13 11:06:55	joel_falcou	n00b6502 also havign abstarctions over your code means you can retarget it to new stuff easily by just haning the guts and not the interface
2012-08-13 11:07:01	n00b6502	sure
2012-08-13 11:07:16	 *	BadDesign I fuking love segmentation faults -- break time
2012-08-13 11:07:20	n00b6502	i like the C++ extensions to C
2012-08-13 11:07:25	joel_falcou	now if oyu like masturbating over ***ptr++-- then do it
2012-08-13 11:07:35	joel_falcou	bit go over  ##C
2012-08-13 11:07:35	<--	toytoy (~toytoy@unaffiliated/t0yt0y) has quit (Remote host closed the connection)
2012-08-13 11:07:47	Sausage	n00b6502: But you don't take advantage of them fully.
2012-08-13 11:07:52	pwned	why isn't everyone just using jruby
2012-08-13 11:07:56	n00b6502	how exactly do you know
2012-08-13 11:07:57	--	Griwes_ is now known as Geiwes
2012-08-13 11:07:58	n00b6502	:)
2012-08-13 11:07:59	-->	ert3go (~ert3go@unaffiliated/ert3go) has joined ##c++
2012-08-13 11:08:00	joel_falcou	pwned this troll is far too obvious
2012-08-13 11:08:01	--	Geiwes is now known as Griwes
2012-08-13 11:08:17	pwned	ok why isn't everyone using jc++
2012-08-13 11:08:20	joel_falcou	XD
2012-08-13 11:08:21	Sausage	Because of everything you said in the last few hours.
2012-08-13 11:08:27	gibberish	pwned: it's too long to type.
2012-08-13 11:08:51	pwned	longer is better
2012-08-13 11:09:00	joel_falcou	ont he topic of PS3 n00b6502 here's what you can do. http://www.computer.org/portal/web/csdl/doi/10.1109/PACT.2009.21 <- we went 6x times better than C code with a C++ framework there.
2012-08-13 11:09:30	Griwes	is this some kind of flamewar? why was I away? :D
2012-08-13 11:09:41	Griwes	also, judging from numerous uses of c/c++ by n00b6502
2012-08-13 11:09:43	joel_falcou	Griwes ypu you missed it
2012-08-13 11:09:43	gibberish	Griwes: you're not too late!
2012-08-13 11:09:45	Griwes	!c/c++
2012-08-13 11:09:47	nolyc	I take most uses of the compound C/C++ as an indication of ignorance. ~ Bjarne Stroustrup - See also http://www.research.att.com/~bs/bs_faq.html#C-slash
2012-08-13 11:09:55	n00b6502	oh sure - C++ templates are very useful on the SPUs
2012-08-13 11:10:08	joel_falcou	n00b6502 it was on the PPU also
2012-08-13 11:10:12	Sausage	Oh psh, Bjarne can talk D:<
2012-08-13 11:10:13	joel_falcou	http://www.ief.u-psud.fr/~lacas/Publications/PACT09.pdf said pdf
2012-08-13 11:10:15	gibberish	Stroustrup's idea of good C++ isn't the same as this channel anyway.
2012-08-13 11:10:39	pwned	I love skeletons!
2012-08-13 11:10:40	joel_falcou	this shit contains a C++ rehash of MPI, it just went 2x faster than the regular C MPI on the PS3
2012-08-13 11:10:55	Sausage	I doubt Bjarne is still as short-sighted as he was 15+ years ago
2012-08-13 11:10:57	-->	CaffeCorretto (~utente1@host122-233-dynamic.18-79-r.retail.telecomitalia.it) has joined ##c++
2012-08-13 11:11:07	joel_falcou	Sausage depends for what
2012-08-13 11:11:12	<--	badone_home (~brad@CPE-121-215-241-179.static.qld.bigpond.net.au) has quit (Ping timeout: 244 seconds)
2012-08-13 11:11:15	n00b6502	mpi, message passing intereface?
2012-08-13 11:11:16	joel_falcou	yes
2012-08-13 11:11:17	pwned	I had to optimize bone surface meshes back in 2008 in order to get a job
2012-08-13 11:11:22	pwned	I didn't get a job.
2012-08-13 11:11:29	joel_falcou	pwned not this kind of skeleton alas :p
2012-08-13 11:11:34	n00b6502	joel_falcou: i've seen code optimize 50x by moving from C++ to blobs on the SPUs
2012-08-13 11:11:38	sam	joel_falcou: and we went 10x better than C++ code with spu_asm :)
2012-08-13 11:11:42	n00b6502	idomatic C++ to C/C++
2012-08-13 11:11:44	joel_falcou	sam yeah sure
2012-08-13 11:11:48	joel_falcou	sam hwo long did it takes ?
2012-08-13 11:11:51	n00b6502	with pointers
2012-08-13 11:11:59	<--	UFO686 (~zhangyh@124.73.66.119) has quit (Read error: Connection reset by peer)
2012-08-13 11:12:05	joel_falcou	n00b6502 you'r emixing language issues with algorithmitic issues
2012-08-13 11:12:07	joel_falcou	so well
2012-08-13 11:12:08	Griwes	!c/c++
2012-08-13 11:12:10	nolyc	I take most uses of the compound C/C++ as an indication of ignorance. ~ Bjarne Stroustrup - See also http://www.research.att.com/~bs/bs_faq.html#C-slash
2012-08-13 11:12:10	joel_falcou	once you fix this
2012-08-13 11:12:13	Griwes	I love this factoid
2012-08-13 11:12:13	n00b6502	its algorithmic more yes
2012-08-13 11:12:13	Griwes	<3
2012-08-13 11:12:14	joel_falcou	we can talk
2012-08-13 11:12:20	gibberish	Griwes: ha.
2012-08-13 11:12:26	sam	joel_falcou: probably a couple days per feature... just the inner tight loops, of course
2012-08-13 11:12:28	Sausage	There's nothing inherent in your "blob" concept that has to do with writing bad C++
2012-08-13 11:12:28	n00b6502	but its very convinient to build custom templates to write that sort of thing
2012-08-13 11:12:29	joel_falcou	and i can't see why a vector<uint8_t> can serve a said blob
2012-08-13 11:12:34	n00b6502	templates outside of stdlib
2012-08-13 11:12:45	joel_falcou	sam yeah
2012-08-13 11:12:48	joel_falcou	sam as I feared
2012-08-13 11:12:49	Griwes	yay, at least he doesn't say "stl" :D
2012-08-13 11:12:58	joel_falcou	Griwes don't feed the troll feeder
2012-08-13 11:13:01	sam	joel_falcou: anyway, not trying to argue here, we probably all know what's better in each situation
2012-08-13 11:13:06	pwned	experssion templates! I love those, too
2012-08-13 11:13:06	joel_falcou	yup
2012-08-13 11:13:13	Griwes	joel_falcou, why? :D
2012-08-13 11:13:18	joel_falcou	sam just pointign out that you can get performances on very tight CPU usign C++
2012-08-13 11:13:26	joel_falcou	Griwes keep soem for later
2012-08-13 11:13:31	gibberish	Who said you couldn't?
2012-08-13 11:13:36	joel_falcou	sam not arguing on "the best performances"
2012-08-13 11:13:39	Griwes	joel_falcou, I have plenty of it
2012-08-13 11:13:40	joel_falcou	which are all relative
2012-08-13 11:13:43	sam	sure
2012-08-13 11:13:46	joel_falcou	Griwes ok then
2012-08-13 11:13:58	-->	vsrao_ (~quassel@59.92.186.126) has joined ##c++
2012-08-13 11:14:05	-->	MrSassyPants (thephil@84-74-111-70.dclient.hispeed.ch) has joined ##c++
2012-08-13 11:14:07	<--	altin (~altin@flossk/altin) has quit (Ping timeout: 240 seconds)
2012-08-13 11:14:41	joel_falcou	sam but i consider that if a hand tuend convolutino takes 98 cycles on SPU and the C++ versiont akes 103, we're in tos ay it's as fast as C
2012-08-13 11:14:44	<--	vsrao (~quassel@unaffiliated/vsrao) has quit (Ping timeout: 265 seconds)
2012-08-13 11:14:57	<--	vsrao_ (~quassel@59.92.186.126) has quit (Changing host)
2012-08-13 11:14:58	-->	vsrao_ (~quassel@unaffiliated/vsrao) has joined ##c++
2012-08-13 11:14:59	--	vsrao_ is now known as vsrao
2012-08-13 11:15:04	joel_falcou	therefore usign the abstarcted model comes for no cost
2012-08-13 11:15:10	gibberish	And the C++ version doesn't use pointers?
2012-08-13 11:15:28	joel_falcou	n00b6502 as for your obsession as everythign in memory, welcome to the cloud era where "small dataset" raises in the Tb
2012-08-13 11:15:33	joel_falcou	good luck putting this in memory
2012-08-13 11:15:38	joel_falcou	and treat as it was
2012-08-13 11:15:40	n00b6502	when a new platform comes out,it takes time for the compilers to catch up.
2012-08-13 11:15:46	joel_falcou	n00b6502 nope
2012-08-13 11:15:49	n00b6502	know what the sony machines were like when they first came out ?
2012-08-13 11:15:51	joel_falcou	this was in 2008
2012-08-13 11:15:55	n00b6502	and the xbox360 ?
2012-08-13 11:15:58	joel_falcou	far after the initial compielr where out
2012-08-13 11:15:59	joel_falcou	yes
2012-08-13 11:16:11	joel_falcou	man please i've dealt with such crap when you were crapping your diaper
2012-08-13 11:16:23	Griwes	n00b6502, compilers are already smarter than you, they adapt to new platforms faster than you! :P
2012-08-13 11:16:23	joel_falcou	i dealt with allt he PS1 PS2 crap and the GBA shitnitz
2012-08-13 11:16:30	n00b6502	no they dont
2012-08-13 11:16:32	joel_falcou	and compielrs > humans all the time
2012-08-13 11:16:33	joel_falcou	they do
2012-08-13 11:16:40	n00b6502	when they're finished yes
2012-08-13 11:16:41	joel_falcou	the fact you use a bad one is your fault
2012-08-13 11:16:49	n00b6502	sometimes you can't choose
2012-08-13 11:16:55	joel_falcou	is this CLueles Peopel Day and i wasnt told ?
2012-08-13 11:17:01	n00b6502	it takes time to adapt compilers
2012-08-13 11:17:06	joel_falcou	less than you think
2012-08-13 11:17:09		irc: disconnected from server
2012-08-13 11:17:24	-->	JohnHamelink (~JohnHamel@ks393762.kimsufi.com) has joined ##c++
2012-08-13 11:17:24	--	Topic for ##c++ is "ISO/IEC 14882:2011 (a.k.a. C++11) is PUBLISHED!!  || Can't speak? Identify to NickServ || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/ || other channels: ##c++-basic, ##c++-general, ##c++-social, ##iso-c++ || we don't do homework"
2012-08-13 11:17:24	--	Topic set by Eelis (~Eelis@unaffiliated/eelis) on Sat, 03 Sep 2011 19:59:56
2012-08-13 11:17:24	--	Nicks ##c++: [ace2001ac acrocity Adran Adrinael aguai ahf aib|2 akiress alamar alastair AlbireoX_ alek_br Alice3 AllenJB_ Alt_of_C1rl ambro718 an0maly_ an0xx An_Ony_Moose anaconda Anasazi Andon andres ansiwen antto ApEk Apocalypse apparat appofice ARCADIVS Areks arnabkd_ arnoldB aroga arossouw Arttu arun arvind_khadri asakura ashfagg assertsmart atubbs average_drifter awx Azzkikr b_jonas BadDesign badone Bamieater BanderOS Bao base84 bastih bastii Bavo bburhans Beket Belgarion0 Bigcheese Biolunar Bish blackace blag blast_hardcheese BlastHardcheese blenny blo Bloodust bloony BoAnd_ Bobman Boffers bolosaur bolt BombStrike bone bool_ BoomBox boris`` boxofrox bps brexel Brklyn_ Brownhead bruce14 bryno BSDBlack Buzzykins bvs Bwild C00re CaffeCorretto caveat- cdash004 cdidd Cecen cfairles chalcedony CharlieM75 Chaser chayin chayin__ cheese1756 chenwj Chestal ChibaPet chrisbuchholz ciaranm cic cinalyc cl0ud clang classix clipon CodeDroid_ coeus coldpizza72i comawhite companion_cube computerghost coppro cortana2 cp133 Cr8 crib cribert- Criztian crl cruxeternus cryptic curfont cut^e cwkx cyberspace- cYmen d-old d1zzy damir__ Danio dansan darkc0met darkstarbyte_ daryl_ dau DavidChenware davv3 dbr Deadboys DeadSix27 Deathzor decltype DeeTah Defaultti delicado demi` deSilva dfletcher_ dflurker_ dh dhruvasagar Dicebot dijital1 dindinx dinesh_ dirtydawg djfm djinni`_ dk5 Dobz Dolan_pls Domiiii doodle77 Dotti Drajwer Dreadnaught dropdrive dross drumr dumont DustyDin1o du|dx dv_ dvoid_ Dweezahr eataix edlinde Eelis efjboss egr Element9 Eleth elliottcable em envi EPIK ericP ernini_ ert3go et euphoria eusto evelyette explodus FabTG failingkid fasta felipe fhd_ Flannel Fleck flux Forge_ forrestv FriarTech FriskyKat froggey Fuco Fuuzetsu Fuxx gaten geeeek gemelen gencha Gentle geordi gerrrt gg7 gibberish gilead glenfe glenfern gnathan Godslastering Gorroth graphitemaster GrecKo Greg44 gregj Griswoldz_ Griwes gry gsvolt Guest13709 Guest18635 Guest90058 guifre gusnan_ hackkitten HaltingState Hamled hannes3 haxi hays HeatHawk heatxsink heiner_ heinrich5991 Helios hello2you2 henry______ HerzogDeXtEr1 higgs Hopkinz houmles hrehf hrnt hubbe3 hyperair hyperboreean i7c iceisfun Ichiro_Ino ido_ iKlsR ikonia Immutable impulse150 incognito_ InCognitO` ingenious int0x27h Internet13 interop_madness ircnode0 Irishmanluke ironzorg isbric ivan\ iZeR_ izhak j`ey jackarain|2 jakoch jamesn jantje Jarvis javierHund Jaxan jayne jesuisuntorrent jesyspa Jeuzz jhoepken jhunold jimster jlen joel_falcou JohnHamelink JonathanD jonnyli1125 jott JPeterson jrdnn jrgill JSharpe_ julmae jweinberg K1rk k299 K3|Chris Kaltiz kalven kami KaneTW Kartagis Kartrohm Kasreyn kavakava kchodorow kcj keyvan Kicer86 KindOne klip kloeri klow Knio knittl Kn|t3 KoVadim Krabbe kramer3d KrzaQ kszatan ktch ktos kumelk kuplatupsu kurti_ Kuukunen l2esonance ladder4 lahwran LAMMJohnson lanemeyer larks larles Lasher` levi501d libertas lilalinux lilltiger LjL Lleo LNCP localhost loglaunch Lokomotiv LordCrc Lordofsraam loxley lpvb LRN lskaglsd ltxda luki- Lycanthropist lyindArk_ M-ou-se m3thyl mac^ Maccer maddoc maddog_ madmoose makissy mama MaNI marga martiert Martin8412 Martty Matthias|PC maum maw_ maxorator maxtors mdkess_ megaTherion melba mertsas mf_ mgaunard mikalv_ mikroflops Minoulefou mishehu MissionCritical mitch0 mitsuhiko MK` mlody moeSeth Mogget molixiaoge molqr MoMo mOo morfin Mosu Motig mousetrap mrcan_ mrh2 MrKronus mrmist MrSassyPants mtrd` muep mulvane Munnu muteki Mws n00b101 n00b6502 Nach0z nahhh nahmaste naquad narfnarfnarf nauman navatwo neersighted nenolod Neo17 Neptu nero netmind neunon neurodamage Nibato` Nickeeh Nicknamehere niczkx_ nierob Nightmare Nik05 nikoJ nilg NimeshNeema_ NinjaPenguin noj_ nolyc nor5trom nots nrd ntrb ntx nutron o] o^nd_ Obfuscate obs Obvious ofan Olipro omni5cience orafu orbitz Orginator ormaaj ormandj Orphis OxDeadC0de Oxyd Ozm pa Palmik parcs` PARLIAMENT patson Patteh pbor peanuter pedantic_ Pelish peper perolsen petteyg phax pheredhel phr phschwartz Pilate Pilum piotr pippijn piti pix1 pixelblur plasickoto Plee plouffe polysix Posterdati pragma- Praise pretty_function primepie_ PSIONIK pucko_ pwned qknight Qub1t Rabenklaue radiofree Rajko rangergord Rapp Rayne RazielZ rchatsiri rcj_ rcxdude rdpate redec reffle reko_t rendar RePaste_ Repentinus retornam rexou rhl rhodesd rhythmx richardwhiuk ricky26 riotz Rix rizzle rndbit robbyoconnor robink RockstarRaccoon roflin roivas RokerHRO roland_ Rolz ross` rstrong ruediger rush2end rvchangue ryanakca s0und saati SaBer sacrebleu SAHChandler sam samek samii SanguineAnomaly Sausage savenger scai scharan Schoentoon schroedinbug Scorchin Scub SecretAgent semeion Seppoz Sergonium SeriousJack setmeaway SeySayux sh4wn shades shintah ShishKabab Shuba Silex SimonP86 sirdancealot7 SixtyFold Skywing SlashLife sleepee slummer smellynosery smokex Snaker snarkyboojum SNiLD snkl snuggl Soap__ sohail solarised solrize SorcererX sorressean soulcake Spark spb speedy sphenxes sporous spq SpX sShintah standoo Starfire SteelBanana stepnem stfn straterra Stryyker subanark sudokode SugarCube suiside sujeet sunfun suppahsrv suy Sweet-P sweet_kid symm- synapt SyouJyoA syslock systemfault Targen tayne tazle techhelper1 teotwaki Terminus- termos tgs3 The_CooIest the_real_crimper TheBeerinator TheFuzzball thelamb TheNull thore Thorn Tidus- Tiffy Timbo TinoDidriksen tjadc tk_ tking TMAnders1on TMinus36 TMM tmyklebu toddpratt Toes_ tomaw toothrot torsan trapni trey trigen trigger Trin ttvd TuTizz tuxdev Twey tzarc Ububegin unreal_ urlgrabber UukGoblin V-ille vchang vdv vektor Vert VeXocide ville Vinnie_win Vir vjn voidcoder Voziv vsayer vskaddanki vsrao VvV_ walmis wbooze wd40s weeb1e_ WhatThePfargtl willll Wiz126 wobster woggle wolfbyte WormDrink wormphlegm wting wu_lmao wuj xandy xantores XAVeRY xConMz Xethron xiliax xilo xiphiasx_ Xjs|moonshine xnavor xxtjaxx Y_Ichiro yamamushi yan_ ybit yeltzooo7 yorick Younos yroeht Yustme zap0 zeleni_zub Zharf ZiauddinMK Zol ZsoL zyphex Zyrkon zyrtech zzing_ z|Andy]
2012-08-13 11:17:24	--	Channel ##c++: 755 nicks (0 ops, 0 halfops, 0 voices, 755 normals)
2012-08-13 11:17:28	Griwes	n00b6502, there are zillions of people working on compilers
2012-08-13 11:17:32	joel_falcou	especially on this small CPUs
2012-08-13 11:17:36	n00b6502	mythical man month
2012-08-13 11:17:39	joel_falcou	lol
2012-08-13 11:17:40	--	Mode ##c++ [+CPcflnpt #overflow 850]
2012-08-13 11:17:40	--	Channel created on Sat, 15 Sep 2001 04:15:35
2012-08-13 11:17:40	Griwes	and zillions people adapting them to new platforms
2012-08-13 11:17:45	Griwes	vs one you
2012-08-13 11:17:51	n00b6502	hahah
2012-08-13 11:17:54	morfin	guys
2012-08-13 11:17:58	joel_falcou	considering just g++, they already have supprot for next gen intel
2012-08-13 11:18:03	<--	ert3go (~ert3go@unaffiliated/ert3go) has quit (Ping timeout: 245 seconds)
2012-08-13 11:18:04	morfin	i had a question about shared_Ptr
2012-08-13 11:18:08	Drajwer	pointers, pointers everywhere
2012-08-13 11:18:37	Griwes	well, next gen intel isn't that hard, considering that simple rep movsb is already being vectorized internally etc...
2012-08-13 11:18:37	Griwes	:P
2012-08-13 11:18:39	joel_falcou	http://herbsutter.com/2012/01/20/gotw-103-smart-pointers-part-1-difficulty-310/
2012-08-13 11:18:52	joel_falcou	Griwes was more thinkign ont he new sidm stuff and the new cache cohenrency model
2012-08-13 11:18:59	morfin	why it's not deleting
2012-08-13 11:19:00	morfin	{struct Car{shared_ptr<Car> pCar;Car():pCar(this){};~Car(){cout<<"deleting instance of Car";}};Car * pCar=new Car();}
2012-08-13 11:19:01	geordi	<no output>
2012-08-13 11:19:04	morfin	:D
2012-08-13 11:19:27	morfin	am i correct or i am having ref to myself so can't delete and wtf
2012-08-13 11:19:31	-->	julmuri (~kamazharr@b881.ip15.netikka.fi) has joined ##c++
2012-08-13 11:19:36	joel_falcou	morfin this code make no sense
2012-08-13 11:19:38	-->	julmaea (~kamazharr@b881.ip15.netikka.fi) has joined ##c++
2012-08-13 11:19:38	-->	endlesstars (4f16e4d3@gateway/web/freenode/ip.79.22.228.211) has joined ##c++
2012-08-13 11:19:40	morfin	why?
2012-08-13 11:19:41	Griwes	indeed
2012-08-13 11:19:47	-->	DarkPeak (~DarkPeak@host-2-102-9-181.as13285.net) has joined ##c++
2012-08-13 11:19:47	<--	DarkPeak (~DarkPeak@host-2-102-9-181.as13285.net) has quit (Changing host)
2012-08-13 11:19:47	-->	DarkPeak (~DarkPeak@unaffiliated/darkpeak) has joined ##c++
2012-08-13 11:19:48	Drajwer	you cant cnstruct shared_ptr from this in ctor
2012-08-13 11:19:48	joel_falcou	you want that
2012-08-13 11:19:52	Griwes	Car holding pointer to Car?
2012-08-13 11:19:53	Griwes	wtf
2012-08-13 11:20:04	-->	altin (~altin@flossk/altin) has joined ##c++
2012-08-13 11:20:07	morfin	no i was just testing around
2012-08-13 11:20:10	joel_falcou	 {struct Car{ Car() {};~Car() {cout<<"deleting instance of Car";}}; shared_ptr<Car> pCar(new Car());}
2012-08-13 11:20:12	geordi	deleting instance of Car
2012-08-13 11:20:17	joel_falcou	this is how you do it
2012-08-13 11:20:19	Sausage	Look in to enable_shared_from_this
2012-08-13 11:20:27	n00b6502	n00b mistake!!! you forgot the make_shared..
2012-08-13 11:20:28	<--	em (~em@unaffiliated/emma) has quit (Ping timeout: 244 seconds)
2012-08-13 11:20:28	joel_falcou	Sausage even the code is senseless there
2012-08-13 11:20:30	Sausage	That lets you create a shared_ptr referring to the object itself in the constructor
2012-08-13 11:20:37	morfin	yes i think
2012-08-13 11:20:39	morfin	i forgot
2012-08-13 11:20:41	n00b6502	you c++ n00b
2012-08-13 11:20:48	arossouw	just curious whats the difference between , int main() and void main() ?
2012-08-13 11:20:53	Griwes	!gr n00b6502
2012-08-13 11:20:54	nolyc	By your command.
2012-08-13 11:20:57	Sausage	arossouw: One is valid, one isn't
2012-08-13 11:20:58	pwned	I used shared_ptr once, and that was to wrap some C API and shared_ptr had the custom destruction semantics
2012-08-13 11:21:02	arossouw	aha
2012-08-13 11:21:03	arossouw	hehe
2012-08-13 11:21:05	morfin	{struct Car{ Car() {};~Car() {cout<<"deleting instance of Car";}}; shared_ptr<Car> pCar(make_shared<Car>);}
2012-08-13 11:21:05	geordi	error: cannot convert 'shared_ptr<main(int, char**)::Car> (*)()' to 'main(int, char**)::Car*' in initialization
2012-08-13 11:21:06	melba	arossouw, void main is not c++
2012-08-13 11:21:06	Griwes	arossouw, void main() is C shit
2012-08-13 11:21:08	arossouw	so that code is old
2012-08-13 11:21:20	joel_falcou	n00b6502 i am not returning the shit there so make_share dis useless in this scenario. The build shared from new as parameter is correct
2012-08-13 11:21:22	Sausage	void main() is invalid in C too
2012-08-13 11:21:25	arossouw	see, they use <iostream.h> , which looks like c
2012-08-13 11:21:27	-->	em (~em@unaffiliated/emma) has joined ##c++
2012-08-13 11:21:36	gibberish	If you don't like it, just call it C shit.
2012-08-13 11:21:37	Sausage	iostream.h is from pre-standard C++
2012-08-13 11:21:41	Sausage	void main() is from pre-standard C
2012-08-13 11:21:42	arossouw	lol
2012-08-13 11:21:45	n00b6502	but you'll teach him it wron
2012-08-13 11:21:46	n00b6502	g
2012-08-13 11:21:46	pwned	iostream.h is some gcc 2.23 artifact
2012-08-13 11:21:52	pwned	it poisoned so many minds
2012-08-13 11:21:57	pwned	fuck you redhat
2012-08-13 11:21:57	Griwes	Sausage, pre-standard c++, you meant? :D
2012-08-13 11:21:59	joel_falcou	n00b6502 and moreover make_shared prevent you to specify custom deleter
2012-08-13 11:22:03	Drajwer	you can find iostream.h in dev-c++
2012-08-13 11:22:04	arossouw	curious, since its a book on objects
2012-08-13 11:22:07	Griwes	pwned, borland also used it, afair
2012-08-13 11:22:08	joel_falcou	the only stuff it does is saving a allocation there
2012-08-13 11:22:19	joel_falcou	arossouw C++ old books are often full of shit
2012-08-13 11:22:23	joel_falcou	!books
2012-08-13 11:22:24	nolyc	http://jcatki.no-ip.org/fncpp/Resources
2012-08-13 11:22:25	joel_falcou	!goodbooks
2012-08-13 11:22:26	Sausage	Well maybe, but void mian() is much older than iostream.h
2012-08-13 11:22:26	nolyc	Good books are !ac++ or !primer or !pppuc++ for starters, and then !tc++pl once you have the basics down, with !josuttis and !langer for standard library references. See !book for further reading. Send these commands to nolyc via private message.
2012-08-13 11:22:33	pwned	Griwes: I only rage at people who can adapt. Borland couldn't adapt.
2012-08-13 11:22:34	Griwes	void main() is C
2012-08-13 11:22:38	joel_falcou	old C
2012-08-13 11:22:40	Griwes	pwned, :D
2012-08-13 11:22:41	Sausage	It isn't.
2012-08-13 11:22:48	joel_falcou	it's nto even good sicne C89 IIRC
2012-08-13 11:22:54	<--	techhelper1 (~th1@unaffiliated/techhelper1) has quit (Remote host closed the connection)
2012-08-13 11:22:56	Sausage	C only allows two definitions of main, as does C++: int main() and int main(int, char**)
2012-08-13 11:23:01	Griwes	so void main() is malformed C? huh
2012-08-13 11:23:06	Sausage	Yes
2012-08-13 11:23:07	joel_falcou	yes
2012-08-13 11:23:16	gibberish	No no, just say it's C crap.
2012-08-13 11:23:29	Sausage	FUDGE!
2012-08-13 11:23:33	morfin	void main? :O
2012-08-13 11:23:41	gibberish	Remember, if you don't like it, call it C crap.
2012-08-13 11:23:47	<--	julmuri (~kamazharr@b881.ip15.netikka.fi) has quit (Ping timeout: 245 seconds)
2012-08-13 11:23:52	morfin	should not program return something
2012-08-13 11:23:52	Sausage	gibberish: You seem... butthurt
2012-08-13 11:23:56	Griwes	well, it compiles... xd
2012-08-13 11:24:02	gibberish	I'm not.
2012-08-13 11:24:11	gibberish	I don't expect people to change here.
2012-08-13 11:24:11	<--	RockstarRaccoon (~cchristia@c-98-208-155-216.hsd1.fl.comcast.net) has quit (Quit: YOUR KIND WILL NEVER BE SAFE IN OTTERLAND, YOU HEAR?)
2012-08-13 11:24:12	-->	ert3go (~ert3go@120.88.176.253) has joined ##c++
2012-08-13 11:24:12	<--	ert3go (~ert3go@120.88.176.253) has quit (Changing host)
2012-08-13 11:24:12	-->	ert3go (~ert3go@unaffiliated/ert3go) has joined ##c++
2012-08-13 11:24:12	Kasreyn	listen to the word of .. C-rap
2012-08-13 11:24:23	Griwes	!grab Kasreyn
2012-08-13 11:24:24	nolyc	By your command.
2012-08-13 11:24:24	Sausage	C++ has a special rule that you can leave out the return statement from main(), but it still has a return value
2012-08-13 11:24:24	-->	TomyLobo (~foo@91-66-115-249-dynip.superkabel.de) has joined ##c++
2012-08-13 11:24:36	morfin	yes i know
2012-08-13 11:24:40	gibberish	Or maybe you have a different definition of butthurt than me.
2012-08-13 11:24:47	gibberish	I don't want to assume.
2012-08-13 11:24:52	morfin	but void main is some kind of shit
2012-08-13 11:25:00	Griwes	that implicit return 0 is one of those idiotic things in C++ standard
2012-08-13 11:25:05	ert3go	Which is the second book you'd recommend after TICPP ?
2012-08-13 11:25:10	gibberish	It's not like I think you were right and won any argument.
2012-08-13 11:25:11	Griwes	that confuses a lot of people
2012-08-13 11:25:12	arossouw	cool, you can iterate map<..
2012-08-13 11:25:22	morfin	geordi, void main(){}
2012-08-13 11:25:22	geordi	error: '::main' must return 'int'
2012-08-13 11:25:24	morfin	:O
2012-08-13 11:25:26	morfin	nope
2012-08-13 11:25:30	morfin	clang, void main(){}
2012-08-13 11:25:32	clang	error: 'main' must return 'int'
2012-08-13 11:25:35	morfin	nope
2012-08-13 11:25:35	TinoDidriksen	geordi, replace void with int
2012-08-13 11:25:37	geordi	<no output>
2012-08-13 11:25:38	Griwes	it errors in c++
2012-08-13 11:25:39	<--	trigen (~MSX@2001:0:5ef5:79fd:38c3:34a5:2bd6:7949) has quit (Read error: Operation timed out)
2012-08-13 11:25:48	Griwes	but (at least on ideone) C accepts it
2012-08-13 11:25:49	joel_falcou	!give ert3go goodbooks
2012-08-13 11:25:51	nolyc	ert3go: Good books are !ac++ or !primer or !pppuc++ for starters, and then !tc++pl once you have the basics down, with !josuttis and !langer for standard library references. See !book for further reading. Send these commands to nolyc via private message.
2012-08-13 11:25:56	arossouw	is return 0, necessary, some ppl say its not
2012-08-13 11:26:05	Sausage	You mean gcc accepts it. C doesn't.
2012-08-13 11:26:07	TinoDidriksen	void main() is an error in both standard C and C++, but int main() you can leave out the actual return.
2012-08-13 11:26:10	Sausage	arossouw: No
2012-08-13 11:26:11	et	C does
2012-08-13 11:26:26	pwned	TinoDidriksen: in C as well ?
2012-08-13 11:26:28	Sausage	In C you need to explicitly return ERROR_SUCCESS; still
2012-08-13 11:26:40	pwned	there is no ERROR_SUCCESS;
2012-08-13 11:26:44	gibberish	arossouw: you can leave it and the return 0 will be done for you. It's a special case.
2012-08-13 11:26:46	Sausage	Or 0, since it's the same thing, and most people don't care about descriptive names
2012-08-13 11:26:48	<--	jhunold (~hunold@p57B1746F.dip.t-dialin.net) has quit (Read error: Connection reset by peer)
2012-08-13 11:26:48	joel_falcou	i liek the concept of a successfule rror
2012-08-13 11:26:49	<--	em (~em@unaffiliated/emma) has quit (Ping timeout: 265 seconds)
2012-08-13 11:26:51	ert3go	thanks joel_falcou
2012-08-13 11:26:52	pwned	it is EXIT_SUCCESS
2012-08-13 11:26:57	Sausage	That.
2012-08-13 11:27:03	et	C allows implementation-defined signatures for main
2012-08-13 11:27:12	Sausage	Fun fact, return 0; is defined as being synonymous with return EXIT_SUCCESS; in main
2012-08-13 11:27:15	Griwes	C is weird
2012-08-13 11:27:16	Sausage	Even if EXIT_SUCCESS != 0
2012-08-13 11:27:27	-->	mgaunard_ (~mgaunard@ABordeaux-156-1-45-105.w86-217.abo.wanadoo.fr) has joined ##c++
2012-08-13 11:27:29	joel_falcou	god v_v
2012-08-13 11:27:36	-->	trigen (~MSX@2001:0:5ef5:79fd:18ee:34a5:2bd6:7949) has joined ##c++
2012-08-13 11:28:20	-->	RockstarRaccoon (~cchristia@c-98-208-155-216.hsd1.fl.comcast.net) has joined ##c++
2012-08-13 11:28:28	TinoDidriksen	pwned, yes, Standard C only accepts int main. void has always strictly been an error.
2012-08-13 11:28:43	pwned	TinoDidriksen: no I meant the missing return 0; part
2012-08-13 11:28:47	<--	TuTizz (~adrien@46.18.96.158) has quit (Ping timeout: 240 seconds)
2012-08-13 11:28:52	-->	inad922 (~inad925@host86-163-59-15.range86-163.btcentralplus.com) has joined ##c++
2012-08-13 11:28:54	pwned	you know this all looks too trivial for someone who has been programming for like 20 years
2012-08-13 11:28:56	TinoDidriksen	Oh, no, that's a C++ thing.
2012-08-13 11:28:56	Griwes	another example showing how much gcc is broken
2012-08-13 11:29:08	Sausage	Griwes: Compile with -ansi or -std=c99
2012-08-13 11:29:29	et	TinoDidriksen: C99 explicitely says "or in some other implemetation-defined manner" when talking about main
2012-08-13 11:29:30	Griwes	yeah, that would probably do it
2012-08-13 11:29:30	Sausage	By default, gcc uses gnu89 or whatever the default language is
2012-08-13 11:29:45	et	5.1.2.2.1 clause 1
2012-08-13 11:29:45	Griwes	but anyway its stupid to use gnuXX as default std
2012-08-13 11:29:49	TinoDidriksen	Doesn't help that Java and C# have "public static void main"
2012-08-13 11:29:57	arossouw	hmm, why is this myMap["A"] = static_cast<string>(1);
2012-08-13 11:30:01	arossouw	not legal?
2012-08-13 11:30:01	Griwes	nah, I love those standard references
2012-08-13 11:30:05	Sausage	To be honest, why does main return anything, lol
2012-08-13 11:30:05	Griwes	5.1.2.2.1.1 lol
2012-08-13 11:30:09	Sausage	We have std::exit
2012-08-13 11:30:16	pwned	arossouw: because int is not convertible to string
2012-08-13 11:30:18	TinoDidriksen	arossouw, static_cast can't do that. Use to_string
2012-08-13 11:30:23	arossouw	aha
2012-08-13 11:30:24	n00b6502	"<Sausage> Fun fact, return 0; is defined as being synonymous with return EXIT_SUCCESS; in main" - error code. error=0 = no error
2012-08-13 11:30:24	Griwes	Sausage, because runtime calls it like exit(main());
2012-08-13 11:30:25	arossouw	ok
2012-08-13 11:30:37	-->	phe (~phe@wikimedia/phe) has joined ##c++
2012-08-13 11:30:58	--	Guest18635 is now known as pticochon
2012-08-13 11:31:04	<--	pticochon (~asdf@db2.e-triage.de) has quit (Changing host)
2012-08-13 11:31:04	-->	pticochon (~asdf@unaffiliated/pticochon) has joined ##c++
2012-08-13 11:31:14	Sausage	The runtime wouldn't do that, then o,o
2012-08-13 11:32:30	Griwes	Sausage, do you have any problems with it? :D
2012-08-13 11:32:40	Sausage	With what? o,o
2012-08-13 11:32:59	Griwes	with runtime doing so :D
2012-08-13 11:33:17	-->	vsrao_ (~quassel@59.92.186.126) has joined ##c++
2012-08-13 11:33:17	<--	n00b6502 (~ceti331@host81-159-235-153.range81-159.btcentralplus.com) has quit (Quit: Leaving)
2012-08-13 11:33:18	Sausage	I must say I have no clue what you're talking about.
2012-08-13 11:33:23	pwned	arossouw: for custom types you can use static_cast if you defined the correct conversion operator: http://ideone.com/G2qID
2012-08-13 11:33:27	<--	vsrao (~quassel@unaffiliated/vsrao) has quit (Ping timeout: 240 seconds)
2012-08-13 11:33:38	Griwes	eh
2012-08-13 11:33:42	Griwes	read a bit of backlog
2012-08-13 11:33:45	<--	sohail (~sohail@unaffiliated/sohail) has quit (Ping timeout: 272 seconds)
2012-08-13 11:34:04	<--	molqr (~m@proxy.iitk.ac.in) has quit (Ping timeout: 265 seconds)
2012-08-13 11:34:06	Sausage	Is there any difference between static_cast<T>(x) and T(X) ?
2012-08-13 11:34:16	pwned	one uses conversion operator
2012-08-13 11:34:41	pwned	the other uses, I guess, a custom ctor you made up
2012-08-13 11:34:55	joel_falcou	pwned static_cast tries constructor too
2012-08-13 11:35:13	pwned	I told it not to, don't worry
2012-08-13 11:35:19	et	T(x) is equivalent to (T)x for one argument
2012-08-13 11:35:41	Griwes	!fs cast
2012-08-13 11:35:41	nolyc	Key search for "cast" (12 found): "c-style cast", "cast", "cast_dammit_cast", "ccast", "const_cast", "dammit_cast", "function-style cast", "implicit cast", "newcasts", "static_cast", "union_cast", and "upcast"
2012-08-13 11:35:47	Griwes	!c-style cast
2012-08-13 11:35:48	nolyc	The semantics for a cast-expression (aka a 'C-Style Cast') are defined as the first of these that succeeds: const_cast, static_cast, static_cast followed by const_cast, reinterpret_cast, reinterpret_cast followed by const_cast.  See 5.4 [expr.cast] for more details.
2012-08-13 11:35:49	-->	inad923 (~inad925@host86-163-59-15.range86-163.btcentralplus.com) has joined ##c++
2012-08-13 11:35:56	arossouw	feel, like there's mountains of information still to learn with C++ :-)
2012-08-13 11:35:57	Sausage	The only time I use the former is for types that don't lexically fit the syntax T(X)
2012-08-13 11:35:57	Sausage	Even then, I often typedef them for brevity
2012-08-13 11:35:57	Sausage	I'm thinking static_cast allows some extra, slightly more dangerous conversions... maybe
2012-08-13 11:35:57	Sausage	T(x) is not equivalent to (T)x
2012-08-13 11:36:10	pwned	mountains of candy!
2012-08-13 11:36:14	-->	jragon (~jragon@unaffiliated/jragon) has joined ##c++
2012-08-13 11:36:23	arossouw	its cool, used templates to convert number to string
2012-08-13 11:36:23	gibberish	arossouw: if the creator only knows about 10% of C++, you can too.
2012-08-13 11:36:37	et	nolyc: function-style cast
2012-08-13 11:36:38	nolyc	T(x) is equivalent to (T)x, which means it's fraught with danger (see !c-style cast). When T is a built-in or pointer type, prefer static_cast<T>(x) or better yet, boost::implicit_cast<T>(x).
2012-08-13 11:36:41	et	Sausage: ^
2012-08-13 11:36:53	--	pticochon is now known as guest1239
2012-08-13 11:37:05	arossouw	gibberish: serious , he only knows 10% :-)
2012-08-13 11:37:09	arossouw	?
2012-08-13 11:37:10	Sausage	That's so untrue D:<
2012-08-13 11:37:27	Griwes	T(x) is (T)x? shouldn't it call T::T()?
2012-08-13 11:37:29	arossouw	bjarne is a genius :-)
2012-08-13 11:37:30	gibberish	arossouw: if you combine 10 people, you can get 100%.
2012-08-13 11:37:46	gibberish	Yeah, a genius that didn't see template metaprogramming.
2012-08-13 11:38:03	gibberish	Or gets surprised by how other people use C++.
2012-08-13 11:38:15	arossouw	so meta objects bad thing?
2012-08-13 11:38:16	Sausage	Goddamnit, it is.
2012-08-13 11:38:20	Sausage	(true)
2012-08-13 11:38:24	-->	leo2007 (~leo@119.255.41.67) has joined ##c++
2012-08-13 11:38:36	morfin	geordi, struct B{B(){" B* ";};~B(){cout<<" ~B ";};int field;}; void &modifyB(B& b) {b.field++;} int main() {B b;b.field=10; modifyB(b);cout<<b.field;}
2012-08-13 11:38:36	geordi	error: cannot declare reference to 'void'
2012-08-13 11:38:43	gibberish	It's not that Stroustrup is dumb, it's just that C++ is big.
2012-08-13 11:38:47	-->	molqr (~m@proxy.iitk.ac.in) has joined ##c++
2012-08-13 11:38:48	LordCrc	i need to write my own streambuf, and im not very familiar with the iostream internals, is the following sample code decent enough to use as a base? http://www.dreamincode.net/code/snippet2499.htm
2012-08-13 11:38:48	morfin	why can't declare reference to void?
2012-08-13 11:38:53	joel_falcou	caus eit make no sense
2012-08-13 11:38:54	<--	hyperair (hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 276 seconds)
2012-08-13 11:38:59	morfin	should declare return type to B&?
2012-08-13 11:39:02	morfin	like this
2012-08-13 11:39:11	arossouw	i'm still learning OOP concepts :-) (association,aggregation, composition)
2012-08-13 11:39:15	morfin	geordi, struct B{B(){" B* ";};~B(){cout<<" ~B ";};int field;}; B& &modifyB(B& b) {b.field++;return B;} int main() {B b;b.field=10; modifyB(b);cout<<b.field;}
2012-08-13 11:39:15	geordi	error: cannot declare reference to 'struct B&', which is not a typedef or a template type argument
2012-08-13 11:39:21	morfin	oops
2012-08-13 11:39:33	<--	inad922 (~inad925@host86-163-59-15.range86-163.btcentralplus.com) has quit (Ping timeout: 276 seconds)
2012-08-13 11:39:35	morfin	geordi, struct B{B(){" B* ";};~B(){cout<<" ~B ";};int field;}; B &modifyB(B& b) {b.field++;return B;} int main() {B b;b.field=10; modifyB(b);cout<<b.field;}
2012-08-13 11:39:35	geordi	error: expected primary-expression before ';' token
2012-08-13 11:40:00	morfin	should i do something like this one?
2012-08-13 11:40:01	morfin	geordi, struct B{B(){" B* ";};~B(){cout<<" ~B ";};int field;}; B &modifyB(B& b) {b.field++;return b;} int main() {B b;b.field=10; modifyB(b);cout<<b.field;}
2012-08-13 11:40:03	geordi	11 ~B
2012-08-13 11:40:14	morfin	return reference to B from function
2012-08-13 11:40:15	gibberish	I've never seen anyone try to return a void&. :O
2012-08-13 11:40:24	joel_falcou	yes
2012-08-13 11:40:28	joel_falcou	or even better
2012-08-13 11:40:30	Griwes	it's like reference to nothing
2012-08-13 11:40:35	Griwes	<< sizeof(void)
2012-08-13 11:40:36	geordi	error: invalid application of 'sizeof' to a void type
2012-08-13 11:40:37	<--	nor5trom (~nor5trom@unaffiliated/nor5trom) has quit (Quit: 5ee ya.)
2012-08-13 11:40:39	Griwes	:(
2012-08-13 11:40:42	morfin	lol :)
2012-08-13 11:40:49	morfin	even better?
2012-08-13 11:40:51	-->	em (~em@unaffiliated/emma) has joined ##c++
2012-08-13 11:40:52	joel_falcou	struct B{B(){" B* ";};~B(){cout<<" ~B ";};  B &modify() {field++;return *this;} int field;};
2012-08-13 11:40:52	joel_falcou	int main() {B b;b.field=10; b.modify();cout<<b.field;}
2012-08-13 11:41:06	joel_falcou	geordi {struct B{B(){" B* ";};~B(){cout<<" ~B ";};  B &modify() {field++;return *this;} int field;}; int main() {B b;b.field=10; b.modify();cout<<b.field;}
2012-08-13 11:41:06	geordi	error: Unexpected end of request. Expected '}' or balanced code.
2012-08-13 11:41:14	joel_falcou	geordi struct B{B(){" B* ";};~B(){cout<<" ~B ";};  B &modify() {field++;return *this;} int field;}; int main() {B b;b.field=10; b.modify();cout<<b.field;
2012-08-13 11:41:19	joel_falcou	god
2012-08-13 11:41:20	Griwes	!geordi
2012-08-13 11:41:21	nolyc	Geordi compiles and runs C++ code. See http://www.eelis.net/geordi/ . **** Test snippets in #geordi, NOT in ##c++ ! ****
2012-08-13 11:41:30	joel_falcou	Griwes yeah i know
2012-08-13 11:41:35	joel_falcou	i was sure of my geordifu
2012-08-13 11:41:49	morfin	return *this yes
2012-08-13 11:41:53	<--	drumr (~drumr@adsl-64-217-217-240.dsl.rcsntx.swbell.net) has quit (Quit: Leaving)
2012-08-13 11:41:55	arossouw	oh, nother thing i need to learn *this
2012-08-13 11:42:19	<--	vsrao_ (~quassel@59.92.186.126) has quit (Changing host)
2012-08-13 11:42:19	-->	vsrao_ (~quassel@unaffiliated/vsrao) has joined ##c++
2012-08-13 11:42:22	--	vsrao_ is now known as vsrao
2012-08-13 11:42:23	-->	vivekg (7d15e644@gateway/web/freenode/ip.125.21.230.68) has joined ##c++
2012-08-13 11:42:25	<--	vivekg (7d15e644@gateway/web/freenode/ip.125.21.230.68) has left ##c++
2012-08-13 11:42:36	-->	alderz (~alderz@169.Red-88-5-175.dynamicIP.rima-tde.net) has joined ##c++
2012-08-13 11:43:09	Sausage	Does anyone have a shocking example of T(x) causing explosions where static_cast<T>(x) saves the day?
2012-08-13 11:43:29	<--	tking (~tking@74.63.245.249) has quit (Remote host closed the connection)
2012-08-13 11:43:48	et	easy when T is a pointer type
2012-08-13 11:43:51	-->	Astus (~Astus@86.123.42.221) has joined ##c++
2012-08-13 11:43:52	<--	Astus (~Astus@86.123.42.221) has quit (Changing host)
2012-08-13 11:43:52	-->	Astus (~Astus@unaffiliated/astus) has joined ##c++
2012-08-13 11:44:04	Sausage	Well you can't write int*(v) thankfully ;P
2012-08-13 11:44:19	TinoDidriksen	typedef
2012-08-13 11:44:27	Sausage	I'm thinking that as long as you know the type T you're dealing with, it's not too bad
2012-08-13 11:44:39	Sausage	As in std::string(blah) isn't liable to blow anything up, right?
2012-08-13 11:44:43	et	also, templates
2012-08-13 11:44:54	Sausage	Yeah, for templates I'd definitely never use T(x)
2012-08-13 11:45:27	Cr8	if you wouldn't use (T)x, don't use T(x)
2012-08-13 11:45:33	Sausage	I think the scariest one is...
2012-08-13 11:45:41	<--	em (~em@unaffiliated/emma) has quit (Ping timeout: 248 seconds)
2012-08-13 11:45:57	-->	Saint_ (~lord@133-107.34-65.panhandle.res.rr.com) has joined ##c++
2012-08-13 11:45:58	Sausage	{ typedef unsigned char uc; void* x = (void*)0x123; auto y = uc(x); }
2012-08-13 11:45:58	geordi	error: cast from 'void*' to 'uc {aka unsigned char}' loses precision
2012-08-13 11:46:02	<--	Astus (~Astus@unaffiliated/astus) has quit (Client Quit)
2012-08-13 11:46:04	Sausage	Oh =[ tew smawl
2012-08-13 11:46:09	-->	Josef_K (~jeremy@124-168-120-3.dyn.iinet.net.au) has joined ##c++
2012-08-13 11:46:14	morfin	nope
2012-08-13 11:46:21	--	Saint_ is now known as Guest86539
2012-08-13 11:46:25	Sausage	{ typedef unsigned long uc; void* x = (unsigned long*)0x123; auto y = uc(x); }
2012-08-13 11:46:26	geordi	<no output>
2012-08-13 11:46:28	-->	assertsmart|2 (~assertsma@78.97.253.170) has joined ##c++
2012-08-13 11:46:38	-->	em (~em@unaffiliated/emma) has joined ##c++
2012-08-13 11:46:54	Sausage	uc(*x) being the behaviour I'd probably be wanting
2012-08-13 11:46:57	Sausage	Or x[n] or whatever.
2012-08-13 11:47:01	Sausage	Anywho bye
2012-08-13 11:47:01	<--	Vir (~mkretz@kde/mkretz) has quit (Quit: Konversation terminated!)
2012-08-13 11:47:16	-->	drumr (~drumr@adsl-64-217-217-240.dsl.rcsntx.swbell.net) has joined ##c++
2012-08-13 11:47:18	<--	RockstarRaccoon (~cchristia@c-98-208-155-216.hsd1.fl.comcast.net) has quit (Quit: YOUR KIND WILL NEVER BE SAFE IN OTTERLAND, YOU HEAR?)
2012-08-13 11:48:24	<--	assertsmart (~assertsma@78.97.253.170) has quit (Ping timeout: 256 seconds)
2012-08-13 11:48:26	arossouw	so i'm guessing that this returns a referenced objects to parameters set in the constructor
2012-08-13 11:48:36	arossouw	s/this/*this/
2012-08-13 11:49:14	joel_falcou	*this is the current object
2012-08-13 11:49:47	arossouw	doesn't it return information specified as parameters inside class function?
2012-08-13 11:49:58	arossouw	oh, ok
2012-08-13 11:50:07	arossouw	i see
2012-08-13 11:50:57	morfin	if your return type is not Type& then copy will be returned hmm
2012-08-13 11:51:29	-->	Gaddafi[SRB] (Gaddafi@109-92-221-212.dynamic.isp.telekom.rs) has joined ##c++
2012-08-13 11:51:37	morfin	geordi, struct B{B(){" B* ";};~B(){cout<<" ~B ";};B(B&){cout<<" "B& ";}  B modify() {field++;return *this;} int field;}; int main() {B b;b.field=10; b.modify();cout<<b.field;}
2012-08-13 11:51:38	geordi	error: Unexpected end of request. Expected any symbol.
2012-08-13 11:51:42	morfin	oops
2012-08-13 11:51:45	morfin	geordi,repeat
2012-08-13 11:51:45	geordi	error: 'repeat' does not name a type
2012-08-13 11:51:45	arossouw	i see, so you should do ClassName &compute
2012-08-13 11:51:50	morfin	geordi, again
2012-08-13 11:51:50	geordi	Same error.
2012-08-13 11:51:53	<--	delicado (~delicado2@121.54.44.231) has quit (Ping timeout: 246 seconds)
2012-08-13 11:51:55	bruce14	anyone knows why nolyc recomends c++ primer but bashes c++ primer plus? just bought the latter :|
2012-08-13 11:52:07	<--	Gaddafi[SRB] (Gaddafi@109-92-221-212.dynamic.isp.telekom.rs) has quit (Client Quit)
2012-08-13 11:52:26	morfin	arossouw look
2012-08-13 11:52:27	morfin	geordi, struct B{B(){" B* ";};~B(){cout<<" ~B ";};B(B&){cout<<" "<<"B&"<<" ";}  B modify() {field++;return *this;} int field;}; int main() {B b;b.field=10; b.modify();cout<<b.field;}
2012-08-13 11:52:28	geordi	 B&  ~B 11 ~B
2012-08-13 11:52:32	arossouw	ok
2012-08-13 11:52:34	TinoDidriksen	!fs plus
2012-08-13 11:52:34	nolyc	Key search for "plus" (3 found): "cplusplus", "cplusplus.com", and "std::plus"
2012-08-13 11:52:36	endlesstars	anyone knows a good tutorial on templates and function templates?
2012-08-13 11:52:42	TinoDidriksen	!fs primer
2012-08-13 11:52:43	nolyc	_C++ Primer: 4th Edition_ by Lippman, Lajoie, and Moo. A good beginner book if you want something more traditional than !AC++ http://www.amazon.com/dp/0201721481 Not to be confused with the terrible and unrelated _C++ Primer Plus_
2012-08-13 11:52:44	-->	rajkosto (~rajkosto@cable-178-149-121-233.dynamic.sbb.rs) has joined ##c++
2012-08-13 11:52:49	arossouw	aha
2012-08-13 11:53:03	TinoDidriksen	bruce14, Primer Plus has nothing to do with Primer.
2012-08-13 11:53:09	<--	dhruvasagar (~dhruvasag@122.172.230.166) has quit (Ping timeout: 248 seconds)
2012-08-13 11:53:19	<--	Rajko (rajkosto@2001:470:d76b:bee2:e960:b64e:6e8b:5116) has quit (Read error: Operation timed out)
2012-08-13 11:53:27	morfin	it's copying, destroying original, showing value, destroying copied object;
2012-08-13 11:53:33	-->	Rajko (rajkosto@2001:470:d76b:bee2:e960:b64e:6e8b:5116) has joined ##c++
2012-08-13 11:53:50	morfin	why decstructor is not being called that's strange
2012-08-13 11:53:56	morfin	*constructor
2012-08-13 11:53:59	bruce14	TinoDidriksen: yeah okay i formulated myself wrong... anyone knows whats terrible about c++ primer plus?
2012-08-13 11:54:00	-->	dhruvasagar (~dhruvasag@122.172.230.166) has joined ##c++
2012-08-13 11:54:15	arossouw	if you dont specify destructer does c++ automatically still do it in background?
2012-08-13 11:54:18	-->	tyl (~tyl@bb115-66-189-189.singnet.com.sg) has joined ##c++
2012-08-13 11:54:30	et	morfin: you forgot to output something in your constructor.
2012-08-13 11:54:37	TinoDidriksen	arossouw, yes, but it won't run delete on pointers.
2012-08-13 11:54:37	morfin	crap
2012-08-13 11:54:41	morfin	stupid me
2012-08-13 11:54:46	arossouw	ok, cool ,get it
2012-08-13 11:54:46	morfin	geordi, struct B{B(){cout<<" B* ";};~B(){cout<<" ~B ";};B(B&){cout<<" "<<"B&"<<" ";}  B modify() {field++;return *this;} int field;}; int main() {B b;b.field=10; b.modify();cout<<b.field;}
2012-08-13 11:54:47	geordi	 B*  B&  ~B 11 ~B
2012-08-13 11:55:03	<--	standoo (~Windows_7@49.133.252.27.dyn.cust.vf.net.nz) has quit (Quit: Leaving.)
2012-08-13 11:55:04	morfin	it's destroying object because it's in stack
2012-08-13 11:55:33	morfin	and main() finished
2012-08-13 11:55:37	Josef_K	"!AC++" = Accellerated C++ by Koenig?
2012-08-13 11:56:22	gibberish	Koenig and Moo!
2012-08-13 11:56:36	gibberish	Don't forget Moo, that badass.
2012-08-13 11:56:51	morfin	i am reading Primer Plus :)
2012-08-13 11:57:02	morfin	idk why nobody likes it
2012-08-13 11:57:05	arossouw	bought professional C++ book, not too bad
2012-08-13 11:57:16	TinoDidriksen	bruce14, see http://google.com/search?q=c%2B%2B+primer+plus+vs+c%2B%2B+primer - Plus is generally just a poor book.
2012-08-13 11:57:18	<--	rajkosto (~rajkosto@cable-178-149-121-233.dynamic.sbb.rs) has quit (Ping timeout: 248 seconds)
2012-08-13 11:57:25	<--	davv3 (davve@tapir.haninge.kth.se) has quit (Ping timeout: 248 seconds)
2012-08-13 11:57:40	morfin	haha second link is TPB
2012-08-13 11:58:00	-->	baedert (~baedert@dslb-088-066-110-146.pools.arcor-ip.net) has joined ##c++
2012-08-13 11:59:03	-->	n00b6502 (~ceti331@host81-159-235-153.range81-159.btcentralplus.com) has joined ##c++
2012-08-13 11:59:12	BadDesign	Piracy++
2012-08-13 11:59:16	<--	jonnyli1125 (~jonnyli11@S0106602ad072187d.vc.shawcable.net) has quit (Read error: Connection reset by peer)
2012-08-13 11:59:39	-->	jonnyli1125 (~jonnyli11@S0106602ad072187d.vc.shawcable.net) has joined ##c++
2012-08-13 11:59:50	-->	davv3 (davve@tapir.haninge.kth.se) has joined ##c++
2012-08-13 11:59:55	BadDesign	I hate books that don't have PDF version, I'd rather scan those and pirate them
2012-08-13 11:59:55	Lleo	Hospital--
2012-08-13 11:59:55	-->	pgas (~user@pdpc/supporter/active/pgas) has joined ##c++
2012-08-13 12:00:09	morfin	i am a pirat :)
2012-08-13 12:00:14	-->	mads- (~mar@nat.statsbiblioteket.dk) has joined ##c++
2012-08-13 12:00:30	Lleo	full of crap
2012-08-13 12:00:34	melba	morfin, pics
2012-08-13 12:00:51	morfin	hm?
2012-08-13 12:01:03	<--	nutron (~nutron@unaffiliated/nutron) has quit (Quit: I must go eat my cheese!)
2012-08-13 12:01:10	<--	Rayne (~Rayne@pD9E3F0B9.dip.t-dialin.net) has quit (Quit: FATAL ERROR)
2012-08-13 12:01:31	BadDesign	pics or it didn't happen!
2012-08-13 12:02:25	BadDesign	The 5th edition of Lippman http://www.amazon.com/Primer-5th-Edition-Stanley-Lippman/dp/0321714113 doesn't have a PDF/Kindle/ version yet... :(
2012-08-13 12:02:50	Josef_K	endlesstars: I also recommend the creatively titled "C++ Templates: The Complete Guide" by Vandevoorde and Josuttis.
2012-08-13 12:02:55	BadDesign	Oh, not yet released -> (August 16, 2012)
2012-08-13 12:03:31	rendar	why i got this nonsense? -> http://ideone.com/RX2xo ?
2012-08-13 12:03:32	Lleo	technocrat hospital warfare c++ concequence modelling input thnx.
2012-08-13 12:03:32	-->	Felix91 (~Chatzilla@pdbn-5d826132.pool.mediaWays.net) has joined ##c++
2012-08-13 12:04:27	-->	inad922 (~inad925@host86-163-59-15.range86-163.btcentralplus.com) has joined ##c++
2012-08-13 12:04:49	<--	Criztian (~criztian@89-96-175-137.ip13.fastwebnet.it) has quit (Remote host closed the connection)
2012-08-13 12:05:01	mOo	i prefer chm over pdf
2012-08-13 12:06:00	rendar	mOo: why??
2012-08-13 12:07:05	<--	inad923 (~inad925@host86-163-59-15.range86-163.btcentralplus.com) has quit (Ping timeout: 260 seconds)
2012-08-13 12:08:28	BadDesign	Segmentation fault (core dumped) -- Gotta love C++
2012-08-13 12:08:44	morfin	why
2012-08-13 12:08:48	endlesstars	Josef_K: thanks a lot i'm looking into it
2012-08-13 12:09:17	<--	Ichiro_Ino (~Ichiro_In@112.198.64.1) has quit (Read error: Connection reset by peer)
2012-08-13 12:09:31	morfin	i think debugging can fix that little issue
2012-08-13 12:09:33	morfin	:)
2012-08-13 12:10:38	<--	Guest86539 (~lord@133-107.34-65.panhandle.res.rr.com) has quit (Ping timeout: 248 seconds)
2012-08-13 12:10:44	BadDesign	Its because I don't delete the shit I new
2012-08-13 12:10:53	BadDesign	I have to check where I use raw pointers and use RAII
2012-08-13 12:11:15	-->	hyperair (~hyperair@ubuntu/member/hyperair) has joined ##c++
2012-08-13 12:11:21	morfin	hehe
2012-08-13 12:11:27	<--	Chestal (~thilo@141.99.42.43) has quit (Ping timeout: 240 seconds)
2012-08-13 12:11:33	morfin	interesting
2012-08-13 12:12:08	<--	dhruvasagar (~dhruvasag@122.172.230.166) has quit (Ping timeout: 244 seconds)
2012-08-13 12:12:10	<--	rchatsiri (~chatsiri@158.108.141.137) has quit (Quit: kill processes...)
2012-08-13 12:13:03	-->	dhruvasagar (~dhruvasag@122.172.230.166) has joined ##c++
2012-08-13 12:13:31	-->	Chestal (~thilo@141.99.42.43) has joined ##c++
2012-08-13 12:13:39	<--	Praise (~Fat@unaffiliated/praise) has quit (Ping timeout: 272 seconds)
2012-08-13 12:14:36	morfin	geordi, struct B{B(){cout<<" B* ";};~B(){cout<<" ~B ";};B(B&){cout<<" "<<"B&"<<" ";}  B modify() {field++;return *this;} int field;}; int main() {B b;b.field=10; b.modify();cout<<b.field;}
2012-08-13 12:14:37	<--	orafu (~od@opensuse/member/odabrunz) has quit (Ping timeout: 240 seconds)
2012-08-13 12:14:38	geordi	 B*  B&  ~B 11 ~B
2012-08-13 12:14:43	morfin	B(B&){cout<<" "<<"B&"<<" ";} is move constructor?
2012-08-13 12:15:40	guest1239	you speak english good morfin
2012-08-13 12:15:52	morfin	oh it's copying
2012-08-13 12:15:58	morfin	as i expected
2012-08-13 12:18:12	-->	jem777 (~jem@dslb-188-096-221-215.pools.arcor-ip.net) has joined ##c++
2012-08-13 12:18:36	-->	jhunold (~hunold@p57B1746F.dip.t-dialin.net) has joined ##c++
2012-08-13 12:19:08	-->	Ichiro_Ino (~Ichiro_In@112.198.64.1) has joined ##c++
2012-08-13 12:19:12	-->	kken (~kken@athedsl-348114.home.otenet.gr) has joined ##c++
2012-08-13 12:21:18	-->	Kn|t3_ (Kn|t3@nat/google/x-dgwymyoizelptwab) has joined ##c++
2012-08-13 12:21:53	-->	r0bby (~wakawaka@guifications/user/r0bby) has joined ##c++
2012-08-13 12:22:16	-->	Keshi (~Keshi@unaffiliated/keshi) has joined ##c++
2012-08-13 12:22:20	<--	Keshi (~Keshi@unaffiliated/keshi) has quit (Client Quit)
2012-08-13 12:22:28	-->	Keshi (~Keshi@unaffiliated/keshi) has joined ##c++
2012-08-13 12:23:04	<--	BadDesign (~quassel@2001:15c0:66a3:2:f0e1:b4fb:467f:71fc) has quit (Remote host closed the connection)
2012-08-13 12:23:45	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 276 seconds)
2012-08-13 12:24:44	-->	ineb (~ineb@flnb-5f7709f3.pool.mediaWays.net) has joined ##c++
2012-08-13 12:24:50	<--	Keshi (~Keshi@unaffiliated/keshi) has quit (Client Quit)
2012-08-13 12:25:22	-->	Keshi (~Keshi@unaffiliated/keshi) has joined ##c++
2012-08-13 12:25:40	--	r0bby is now known as robbyoconnor
2012-08-13 12:25:42	<--	Kn|t3 (Kn|t3@nat/google/x-uisukfcwwmatfyma) has quit (Ping timeout: 276 seconds)
2012-08-13 12:25:43	<--	SyouJyoA (~perfume@175.244.199.159) has quit (Read error: Connection reset by peer)
2012-08-13 12:26:59	-->	SyouJyoA (~perfume@175.244.199.159) has joined ##c++
2012-08-13 12:27:41	<--	walmis (walmis@fsckyou.info) has quit (Read error: Connection reset by peer)
2012-08-13 12:28:00	-->	Kn|t3 (~Kn|t3@2401:fa00:a:0:3c8e:69a2:b5de:df53) has joined ##c++
2012-08-13 12:28:18	<--	Kn|t3_ (Kn|t3@nat/google/x-dgwymyoizelptwab) has quit (Ping timeout: 276 seconds)
2012-08-13 12:28:38	-->	funktronic (~funktroni@unaffiliated/funktronic) has joined ##c++
2012-08-13 12:29:36	morfin	why this is not moving?
2012-08-13 12:29:43	morfin	geordi, struct B{B(){cout<<" B* ";};~B(){cout<<" ~B ";};B(B&){cout<<" "<<"B&"<<" ";}; B(B&&){cout<<"B&&";}  B modify() {field++;return *this;} int field;B &operator=(B&& b){cout<<" B&& ";b.field = this->field;return *this;}}; int main() {B b;b.field=10; B c=b;}
2012-08-13 12:29:44	geordi	 B*  B&  ~B  ~B
2012-08-13 12:30:14	<--	jrgill (~jrgill@unaffiliated/jrgill) has quit (Read error: Connection reset by peer)
2012-08-13 12:30:16	endlesstars	uhm... i'm working with templates for the first time and this doesn't add up to me
2012-08-13 12:30:21	endlesstars	template <typename Ty> class Son : public Father<Ty> { private:	Ty content;};
2012-08-13 12:30:27	endlesstars	but it lets me specialize into
2012-08-13 12:30:31	endlesstars	template <> class Son<char>: public Father<int> { private:	Ty content;};
2012-08-13 12:30:32	morfin	can't understand what's wrong with operator= it's not being even called
2012-08-13 12:30:36	endlesstars	shouldn't the typename of father and son be locked to be the same?
2012-08-13 12:30:40	endlesstars	using clang++ version 1.1
2012-08-13 12:31:05	-->	jrgill (~jrgill@cpe-74-74-72-78.stny.res.rr.com) has joined ##c++
2012-08-13 12:31:05	<--	jrgill (~jrgill@cpe-74-74-72-78.stny.res.rr.com) has quit (Changing host)
2012-08-13 12:31:05	-->	jrgill (~jrgill@unaffiliated/jrgill) has joined ##c++
2012-08-13 12:31:06	et	no
2012-08-13 12:31:14	endlesstars	*template <> class Son<char>: public Father<int> { private:	char content;};
2012-08-13 12:31:28	et	morfin: where would you expect operator= and where would you expect move?
2012-08-13 12:31:39	morfin	c=b
2012-08-13 12:31:48	<--	mikroflops (~yogurt@h-34-21.a238.priv.bahnhof.se) has quit (Ping timeout: 244 seconds)
2012-08-13 12:31:49	scai	morfin: B c = b calls the copy constructor
2012-08-13 12:31:54	morfin	why :(
2012-08-13 12:32:06	n00b6502	specialize can replace implementation
2012-08-13 12:32:07	et	you did not do c=b, you did B c = b, which is different (it's B c(B(b)))
2012-08-13 12:32:12	-->	mike4_ (~mike4_@gateway/tor-sasl/mike4/x-38362156) has joined ##c++
2012-08-13 12:32:13	scai	because of copy initialization
2012-08-13 12:32:18	-->	walmis (walmis@fsckyou.info) has joined ##c++
2012-08-13 12:32:23	morfin	holy crap
2012-08-13 12:32:31	scai	indeed
2012-08-13 12:32:42	morfin	geordi, struct B{B(){cout<<" B* ";};~B(){cout<<" ~B ";};B(B&){cout<<" "<<"B&"<<" ";}; B(B&&){cout<<"B&&";}  B modify() {field++;return *this;} int field;B &operator=(B&& b){cout<<" B&& ";b.field = this->field;return *this;}}; int main() {B b;b.field=10; B c;c=b;}
2012-08-13 12:32:42	geordi	error: use of deleted function 'B& B::operator=(const B&)'
2012-08-13 12:32:49	morfin	what
2012-08-13 12:33:01	scai	;/
2012-08-13 12:33:13	-->	KAHR-Alpha (~Alpha@AAmiens-157-1-83-162.w86-208.abo.wanadoo.fr) has joined ##c++
2012-08-13 12:33:48	et	geordi: replace last b with move(b)
2012-08-13 12:33:50	geordi	 B*  B*  B&&  ~B  ~B
2012-08-13 12:33:55	n00b6502	endlesstars: you are saying for Son<char> use this specific implementation which derives from Father<Int> and has the replacement { private char content;}  ...all of tat could be rewritten as anything
2012-08-13 12:34:19	n00b6502	endlessstars: specialization is to override what you'd get just by replacing Ty automatically
2012-08-13 12:34:30	endlesstars	n00b6502: specialize can replace implementation? do you mean that when'm i'm specializing i coud have written something along the lines of template <> class Son<char>: public Father<int> { private:	int content;}; and it would have compiled?
2012-08-13 12:34:35	n00b6502	yes
2012-08-13 12:34:40	n00b6502	anything
2012-08-13 12:34:43	<--	Ichiro_Ino (~Ichiro_In@112.198.64.1) has quit (Quit: Leaving)
2012-08-13 12:34:58	-->	ruler501 (~ruler@pool-71-170-89-215.dllstx.fios.verizon.net) has joined ##c++
2012-08-13 12:35:00	n00b6502	it could be a different class even (i think)
2012-08-13 12:35:22	n00b6502	the only restriction is , its called Son<char>
2012-08-13 12:35:27	<--	ruler501 (~ruler@pool-71-170-89-215.dllstx.fios.verizon.net) has quit (Client Quit)
2012-08-13 12:35:28	n00b6502	the rest is over-ride
2012-08-13 12:35:45	--	julmaea is now known as julmuri
2012-08-13 12:35:48	n00b6502	i've never done that - only for functions
2012-08-13 12:35:53	-->	ruler501 (~ruler@pool-71-170-89-215.dllstx.fios.verizon.net) has joined ##c++
2012-08-13 12:35:54	-->	BadDesign (~quassel@2001:15c0:66a3:2:f000:d49:1b1f:d622) has joined ##c++
2012-08-13 12:36:23	endlesstars	so there's no way to force Son<char> to derive from Father<char> and contain a char?
2012-08-13 12:36:33	n00b6502	endlessstars: but on some compilers it only spits out all the errors when you actually instantiate something
2012-08-13 12:36:56	n00b6502	endlessstars: Son<char> : public Father<char> is automatically defined by the templates
2012-08-13 12:37:05	n00b6502	you only specialize when you explicitely want something else
2012-08-13 12:37:27	n00b6502	you only *need* to specialize to tell it the cases where you want somethign else
2012-08-13 12:37:35	morfin	hmmm
2012-08-13 12:37:44	<--	ZiauddinMK (~ZiauddinM@178.77.179.104) has quit (Remote host closed the connection)
2012-08-13 12:37:51	endlesstars	i need to implement only Son<char> because i need to print the content and if i don't know the type i don't know how to print it
2012-08-13 12:38:00	n00b6502	thats done automatically
2012-08-13 12:38:13	endlesstars	so i need to write a specific implementation
2012-08-13 12:38:14	n00b6502	you just make a print function and compile-time polymorphism - overloading - calls the right one
2012-08-13 12:38:45	n00b6502	in your template you can say {... Display()  {  MyPrint(content); ...}
2012-08-13 12:39:07	n00b6502	then elsewhere you say void MyPrint(char)  { } ... void MyPrint(int) { .. } and it picks the right one
2012-08-13 12:39:35	n00b6502	all due to overloading
2012-08-13 12:39:52	endlesstars	i tought i had to write something like string Son<char>::toString()
2012-08-13 12:40:02	-->	mikroflops (~yogurt@h-34-21.a238.priv.bahnhof.se) has joined ##c++
2012-08-13 12:40:05	endlesstars	and for that i needed a specialization of Son<char>
2012-08-13 12:40:08	n00b6502	not
2012-08-13 12:40:09	n00b6502	no
2012-08-13 12:40:18	n00b6502	well..
2012-08-13 12:40:30	endlesstars	i wanted print to be member of son
2012-08-13 12:40:35	<--	leo2007 (~leo@119.255.41.67) has quit (Quit: rcirc on GNU Emacs 24.1.2)
2012-08-13 12:40:46	n00b6502	make a templated generic method that calls functions
2012-08-13 12:40:56	n00b6502	then put the per-type behaviour in the functions
2012-08-13 12:41:04	n00b6502	you dont need to write out the whole classs again each time
2012-08-13 12:41:12	n00b6502	print(content);
2012-08-13 12:41:29	n00b6502	then overloads of print(content) provided elsewhere are automatically selected when the template is insantiated
2012-08-13 12:41:36	<--	jrgill (~jrgill@unaffiliated/jrgill) has quit (Read error: Connection reset by peer)
2012-08-13 12:42:03	n00b6502	i've only done that on free functions myslef,
2012-08-13 12:42:14	-->	vsrao_ (~quassel@59.92.190.233) has joined ##c++
2012-08-13 12:42:25	n00b6502	let me check if you can 'specialze' a method yourself outside ... (maybe someone else knows off hand)
2012-08-13 12:42:46	<--	vsrao_ (~quassel@59.92.190.233) has quit (Changing host)
2012-08-13 12:42:46	-->	vsrao_ (~quassel@unaffiliated/vsrao) has joined ##c++
2012-08-13 12:42:57	<--	kumelk (and@bl147a.studby.ntnu.no) has quit (Quit: Leaving)
2012-08-13 12:42:58	n00b6502	i think you can actually
2012-08-13 12:43:05	<--	vsrao (~quassel@unaffiliated/vsrao) has quit (Disconnected by services)
2012-08-13 12:43:07	--	vsrao_ is now known as vsrao
2012-08-13 12:43:15	<--	davv3 (davve@tapir.haninge.kth.se) has quit (Ping timeout: 276 seconds)
2012-08-13 12:43:39	<--	Bao (~bao@tcbl06.theophys.kth.se) has quit (Ping timeout: 244 seconds)
2012-08-13 12:43:52	n00b6502	endlesstars: yes
2012-08-13 12:43:56	-->	jrgill (~jrgill@cpe-74-74-72-78.stny.res.rr.com) has joined ##c++
2012-08-13 12:44:00	<--	jrgill (~jrgill@cpe-74-74-72-78.stny.res.rr.com) has quit (Changing host)
2012-08-13 12:44:01	-->	jrgill (~jrgill@unaffiliated/jrgill) has joined ##c++
2012-08-13 12:44:07	n00b6502	endlesstars:  [1]  declare your toString in the class template
2012-08-13 12:44:23	endlesstars	i'm here
2012-08-13 12:44:27	-->	googol (~matthew@ip68-4-137-125.oc.oc.cox.net) has joined ##c++
2012-08-13 12:44:38	n00b6502	[2] just write template<>  Son<char>::toString() { .... specific implementation ... }
2012-08-13 12:44:48	n00b6502	its the *method* you specialize
2012-08-13 12:45:04	n00b6502	the rest stays generic
2012-08-13 12:45:09	endlesstars	uhm... i'll try that
2012-08-13 12:45:12	<--	trigger (~trigger@gateway/tor-sasl/trigger) has quit (Ping timeout: 276 seconds)
2012-08-13 12:45:17	n00b6502	template<> Son<int>::toString() { ..... }
2012-08-13 12:45:17	n00b6502	etc
2012-08-13 12:45:21	BadDesign	How do I return NULL pointer in C++ pre C++11? I've tried return NULL and return 0 but it doesn't work, it say it can't convert 0l from long int to std::pair... the return type is std::pair<std::string, std::string>
2012-08-13 12:45:33	endlesstars	i tryed that before but i probably put another template<> in front of string and it complained
2012-08-13 12:45:55	n00b6502	sounds like the return type isn't a pointer , its actual data
2012-08-13 12:46:06	n00b6502	so you can't return null ptr.. you have to return an actual thing
2012-08-13 12:46:12	<--	BanderOS (~Nomad@85.26.241.244) has quit (Ping timeout: 252 seconds)
2012-08-13 12:46:12	<--	jrgill (~jrgill@unaffiliated/jrgill) has quit (Max SendQ exceeded)
2012-08-13 12:46:13	-->	paullik (~paullik@unaffiliated/paullik) has joined ##c++
2012-08-13 12:46:32	n00b6502	you might have just got a small detail wrong
2012-08-13 12:46:33	-->	jrgill (~jrgill@cpe-74-74-72-78.stny.res.rr.com) has joined ##c++
2012-08-13 12:46:33	<--	jrgill (~jrgill@cpe-74-74-72-78.stny.res.rr.com) has quit (Changing host)
2012-08-13 12:46:33	-->	jrgill (~jrgill@unaffiliated/jrgill) has joined ##c++
2012-08-13 12:46:54	n00b6502	maybe i'm just crap but it does take time to get templates to compile :) but when they do thye're great
2012-08-13 12:48:09	n00b6502	endlessstars, confirmed it works that way
2012-08-13 12:48:11	BadDesign	n00b6502: yeah, I forgot the *
2012-08-13 12:48:32	endlesstars	n00b6502: thanks a lot
2012-08-13 12:49:11	<--	googol (~matthew@ip68-4-137-125.oc.oc.cox.net) has quit (Ping timeout: 268 seconds)
2012-08-13 12:49:33	n00b6502	most of the time i would have got what i wanted without specializing, just overloads of things the template calls :)
2012-08-13 12:50:08	<--	molixiaoge (~molixiaog@58.215.204.118) has quit (Ping timeout: 245 seconds)
2012-08-13 12:50:29	<--	ARCADIVS (~RMM@68-113-119-83.static.leds.al.charter.com) has quit (Quit: WeeChat 0.3.7)
2012-08-13 12:50:33	<--	willll (~willll@75-119-253-47.dsl.teksavvy.com) has quit (Remote host closed the connection)
2012-08-13 12:50:42	<--	paullik (~paullik@unaffiliated/paullik) has quit (Read error: Connection reset by peer)
2012-08-13 12:50:57	--	Griswoldz_ is now known as Griswoldz
2012-08-13 12:51:03	-->	paullik (~paullik@unaffiliated/paullik) has joined ##c++
2012-08-13 12:52:55	<--	arossouw (~arossouw@196.36.203.18) has quit (Ping timeout: 272 seconds)
2012-08-13 12:53:29	-->	arossouw (~arossouw@196.36.203.18) has joined ##c++
2012-08-13 12:53:32	<--	suy (~modpow@113.Red-83-54-203.dynamicIP.rima-tde.net) has quit (Ping timeout: 252 seconds)
2012-08-13 12:53:33	<--	molqr (~m@proxy.iitk.ac.in) has quit (Remote host closed the connection)
2012-08-13 12:53:55	<--	jackarain|2 (~kvirc@223.255.243.111) has quit (Read error: Connection timed out)
2012-08-13 12:54:24	Kasreyn	what do you call fear of changing the lines of codes that matter? don't do it?
2012-08-13 12:54:28	-->	jackarain|2 (~kvirc@223.255.243.111) has joined ##c++
2012-08-13 12:55:05	-->	graspee (~graspee@02dd1c1b.bb.sky.com) has joined ##c++
2012-08-13 12:55:06	<--	BoomBox (~BoomBox@unaffiliated/boombox) has quit (Read error: Connection reset by peer)
2012-08-13 12:55:49	-->	BoomBox (~BoomBox@2607:f878:5:e:0:500:149:10) has joined ##c++
2012-08-13 12:55:49	<--	BoomBox (~BoomBox@2607:f878:5:e:0:500:149:10) has quit (Changing host)
2012-08-13 12:55:49	-->	BoomBox (~BoomBox@unaffiliated/boombox) has joined ##c++
2012-08-13 12:56:04	-->	Criztian (~criztian@89-96-175-137.ip13.fastwebnet.it) has joined ##c++
2012-08-13 12:56:23	<--	Forge_ (~forge@94.100.30.139) has quit (Remote host closed the connection)
2012-08-13 12:56:30	<--	BoomBox (~BoomBox@unaffiliated/boombox) has quit (Read error: Connection reset by peer)
2012-08-13 12:56:45	<--	jhunold (~hunold@p57B1746F.dip.t-dialin.net) has quit (Read error: Connection reset by peer)
2012-08-13 12:56:51	<--	jrgill (~jrgill@unaffiliated/jrgill) has quit (Read error: Connection reset by peer)
2012-08-13 12:56:55	-->	Bao (~bao@tcbl06.theophys.kth.se) has joined ##c++
2012-08-13 12:57:06	-->	davv3 (davve@tapir.haninge.kth.se) has joined ##c++
2012-08-13 12:57:18	-->	BoomBox (~BoomBox@unaffiliated/boombox) has joined ##c++
2012-08-13 12:57:38	-->	stratomarco (~marco@200.144.115.82) has joined ##c++
2012-08-13 12:57:40	Kasreyn	time for the it'll-probably-be-fine test :)
2012-08-13 12:57:40	-->	jrgill (~jrgill@cpe-74-74-72-78.stny.res.rr.com) has joined ##c++
2012-08-13 12:57:41	<--	jrgill (~jrgill@cpe-74-74-72-78.stny.res.rr.com) has quit (Changing host)
2012-08-13 12:57:41	-->	jrgill (~jrgill@unaffiliated/jrgill) has joined ##c++
2012-08-13 12:57:49	-->	jhunold (~hunold@p57B1746F.dip.t-dialin.net) has joined ##c++
2012-08-13 12:57:55	-->	trigger (~trigger@gateway/tor-sasl/trigger) has joined ##c++
2012-08-13 12:59:14	endlesstars	n00b6502: clang gives me error: C++ requires a type specifier for all declarations just after the ::
2012-08-13 12:59:42	endlesstars	my noob guess is that it wants the return type somewhere
2012-08-13 12:59:57	n00b6502	oh sure it wants that
2012-08-13 13:00:12	n00b6502	sorry if i missed it :) i have that in my example
2012-08-13 13:00:17	endlesstars	template <> string Son<char>::toString()?
2012-08-13 13:00:19	BadDesign	Compared to C#/Java -- code completion/intellisense sucks big time in C++
2012-08-13 13:00:23	n00b6502	yes definitely
2012-08-13 13:00:26	<--	jrgill (~jrgill@unaffiliated/jrgill) has quit (Read error: Connection reset by peer)
2012-08-13 13:00:53	n00b6502	template<> string ... yes
2012-08-13 13:01:13	-->	jrgill (~jrgill@cpe-74-74-72-78.stny.res.rr.com) has joined ##c++
2012-08-13 13:01:13	<--	jrgill (~jrgill@cpe-74-74-72-78.stny.res.rr.com) has quit (Changing host)
2012-08-13 13:01:13	-->	jrgill (~jrgill@unaffiliated/jrgill) has joined ##c++
2012-08-13 13:01:45	-->	KongoKong (~KongoKong@74.142.51.115) has joined ##c++
2012-08-13 13:01:46	<--	jrgill (~jrgill@unaffiliated/jrgill) has quit (Read error: Connection reset by peer)
2012-08-13 13:01:47	<--	davv3 (davve@tapir.haninge.kth.se) has quit (Ping timeout: 240 seconds)
2012-08-13 13:02:21	-->	Forge_ (~forge@94.100.30.139) has joined ##c++
2012-08-13 13:02:27	-->	jrgill (~jrgill@cpe-74-74-72-78.stny.res.rr.com) has joined ##c++
2012-08-13 13:02:28	<--	jrgill (~jrgill@cpe-74-74-72-78.stny.res.rr.com) has quit (Changing host)
2012-08-13 13:02:28	-->	jrgill (~jrgill@unaffiliated/jrgill) has joined ##c++
2012-08-13 13:02:41	-->	pferdone (~bla@pd95b81a3.dip0.t-ipconnect.de) has joined ##c++
2012-08-13 13:03:26	-->	davv3 (davve@tapir.haninge.kth.se) has joined ##c++
2012-08-13 13:03:37	ert3go	"the library might be asked to read from the standard input stream. In that case, the
2012-08-13 13:03:37	ert3go	library immediately flushes the output buffer without waiting for the buffer to become full.
2012-08-13 13:03:37	ert3go	"
2012-08-13 13:03:48	ert3go	Can anyone explain me that ^ ? I don't clearly get it.
2012-08-13 13:04:13	spb	if you ask it to read from standard input, it first flushes standard output
2012-08-13 13:04:14	n00b6502	endlessstars - are you sure you need specialized methods, they do work but i wondered if you can implement the toString in the template.    toString() { string ret="BlahBlah:"+toString(content); return ret; }
2012-08-13 13:04:53	speedy	B:A, C:B, C():A(){} C cannot call the A constructor because it is not directly derived from it, right ?
2012-08-13 13:04:53	morfin	 what for template <> string
2012-08-13 13:04:54	ert3go	but standard input and output are 2 different streams , so how/why does it matter spb ?
2012-08-13 13:05:17	n00b6502	for his templated class method speicalization
2012-08-13 13:05:37	<--	KAHR-Alpha (~Alpha@AAmiens-157-1-83-162.w86-208.abo.wanadoo.fr) has quit (Remote host closed the connection)
2012-08-13 13:06:07	n00b6502	speedy, as far as i know correct
2012-08-13 13:06:36	SaBer	ert3go: think about something like std::cout << "enter foo: "; std::cin >> foo;
2012-08-13 13:06:54	spb	ert3go: think about an interactive console application
2012-08-13 13:07:07	endlesstars	i have no idea i'm still learning, but if i understand the generic implementation would call itself? or it would call a specialized implementation that i have to define anyway?
2012-08-13 13:07:12	spb	if it asks the user for input, it helps that the user sees that request before having to provide it
2012-08-13 13:07:17	<--	Guest13709 (blublu214@95.77.208.44) has quit (Remote host closed the connection)
2012-08-13 13:07:29	-->	Burgundy (blublu214@95.77.208.44) has joined ##c++
2012-08-13 13:07:29	ert3go	makes sense
2012-08-13 13:07:44	n00b6502	endlessstars: i dont know what your exact context is but it looked like you are just trying to change one property inside
2012-08-13 13:07:49	n00b6502	Ty content
2012-08-13 13:08:22	n00b6502	its likely "toString()" itself would be very similar for char, int etc... the only part that changes is based on the statements that use the char, int content
2012-08-13 13:08:29	ert3go	so is it like that if a cin is seen , then the buffer is immediately flushed ?
2012-08-13 13:08:32	n00b6502	so those could probably be picked with overloading
2012-08-13 13:08:42	n00b6502	still .. you know how method specailize works now :)
2012-08-13 13:09:09	-->	KAHR-Alpha (~Alpha@AAmiens-157-1-83-162.w86-208.abo.wanadoo.fr) has joined ##c++
2012-08-13 13:09:15	n00b6502	you can provide a generic implementation that doesn't know its types - it relies on overloads to actually do anything
2012-08-13 13:09:31	<--	jrgill (~jrgill@unaffiliated/jrgill) has quit (Ping timeout: 244 seconds)
2012-08-13 13:09:35	ert3go	oh fail. I didn't read the next line where they explained it. Thanks SaBer , spb
2012-08-13 13:09:37	n00b6502	toString(int), toString(char) etc
2012-08-13 13:09:44	<--	Rabenklaue (~Rabe@f051038123.adsl.alicedsl.de) has quit (Quit: leaving)
2012-08-13 13:09:54	endlesstars	how would i define overloads without specializing? the function has no input
2012-08-13 13:10:02	endlesstars	ahhh you gave it one
2012-08-13 13:10:04	n00b6502	not overloads of the method
2012-08-13 13:10:17	n00b6502	you'd have a generic method - in the template .
2012-08-13 13:10:24	-->	nor5trom (~nor5trom@unaffiliated/nor5trom) has joined ##c++
2012-08-13 13:10:47	n00b6502	then when this generic method is instantiated per type, it looks for the right calls inside.
2012-08-13 13:10:52	n00b6502	example:-
2012-08-13 13:11:02	SaBer	!give n00b6502 method
2012-08-13 13:11:03	nolyc	n00b6502: The term `method' is not well-defined in C++. Did you mean to imply a function that is a member? Or one that is non-static? Or one that is virtual? Or one that is pure? To avoid misunderstandings, prefer standardized terminology: instead of `method' say `function' prefixed with those specifiers that are relevant.
2012-08-13 13:11:13	n00b6502	member function
2012-08-13 13:11:20	<--	nor5trom (~nor5trom@unaffiliated/nor5trom) has quit (Client Quit)
2012-08-13 13:11:29	SaBer	n00b6502: use function template or member function template instead of "generic method"
2012-08-13 13:11:31	-->	thalassarche (~thalassar@unaffiliated/thalassarche) has joined ##c++
2012-08-13 13:11:52	n00b6502	SaBer: i too prefer to say "member function" , i also like to abreviate.
2012-08-13 13:12:14	n00b6502	SaBer: in this instance "method" gets what i mean across in fewer characters
2012-08-13 13:12:23	n00b6502	and yes i know, "C++ does not have methods"
2012-08-13 13:13:48	<--	trigger (~trigger@gateway/tor-sasl/trigger) has quit (Ping timeout: 276 seconds)
2012-08-13 13:14:39	n00b6502	SaBer: hehe even if i said "member function" instead of method, that still doesn't clear up if its static, virtual , and just takes up more space. Zero points for you pedantism.
2012-08-13 13:14:41	-->	BanderOS (~Nomad@85.26.241.224) has joined ##c++
2012-08-13 13:15:26	-->	nojhan (~nojhan@2001:4b10:100:5::2) has joined ##c++
2012-08-13 13:15:26	<--	nojhan (~nojhan@2001:4b10:100:5::2) has quit (Changing host)
2012-08-13 13:15:26	-->	nojhan (~nojhan@pdpc/supporter/active/nojhan) has joined ##c++
2012-08-13 13:15:57	<--	vsrao (~quassel@unaffiliated/vsrao) has quit (Ping timeout: 240 seconds)
2012-08-13 13:16:01	SaBer	n00b6502: in some cases it doesn't matter if it's static or virtual. It's just rather hard to guess what "generic method" means...
2012-08-13 13:16:29	-->	syo (~Mew@host86-183-23-160.range86-183.btcentralplus.com) has joined ##c++
2012-08-13 13:17:36	-->	kayo (~kayo@opensuse/member/kayohf) has joined ##c++
2012-08-13 13:17:56	-->	nor5trom (~nor5trom@unaffiliated/nor5trom) has joined ##c++
2012-08-13 13:19:41	-->	vsrao (~quassel@unaffiliated/vsrao) has joined ##c++
2012-08-13 13:19:55	<--	ruler501 (~ruler@pool-71-170-89-215.dllstx.fios.verizon.net) has quit (Quit: Ex-Chat)
2012-08-13 13:20:12	-->	hz (~hz@unaffiliated/hz) has joined ##c++
2012-08-13 13:20:30	-->	suy (~modpow@113.Red-83-54-203.dynamicIP.rima-tde.net) has joined ##c++
2012-08-13 13:20:40	-->	ogelami_work (~ogelami@217.27.186.142) has joined ##c++
2012-08-13 13:20:40	ogelami_work	hp
2012-08-13 13:20:55	--	ogelami_work is now known as ogelami
2012-08-13 13:21:08	<--	ogelami (~ogelami@217.27.186.142) has left ##c++
2012-08-13 13:22:24	-->	Octal_ (~quassel@static.25.237.9.5.clients.your-server.de) has joined ##c++
2012-08-13 13:22:45	-->	a111 (~a111a111@host-2-98-110-13.as13285.net) has joined ##c++
2012-08-13 13:23:28	<--	gnathan (~jonathan@host86-162-20-43.range86-162.btcentralplus.com) has quit (Read error: Connection reset by peer)
2012-08-13 13:24:00	-->	delicado (~delicado2@121.54.44.226) has joined ##c++
2012-08-13 13:24:20	<--	higgs (~dennis@81-235-208-5-no62.tbcn.telia.com) has quit (Ping timeout: 268 seconds)
2012-08-13 13:25:03	-->	rajkosto (~rajkosto@2001:470:d76b:bee2:e960:b64e:6e8b:5116) has joined ##c++
2012-08-13 13:25:46	<--	henry______ (~henry@27.45.1.249) has left ##c++
2012-08-13 13:25:51	<--	trey (trey8221@2001:470:1f0f:c24::11) has quit (Ping timeout: 272 seconds)
2012-08-13 13:26:01	<--	kcj (~casey@unaffiliated/kcj) has quit (Ping timeout: 244 seconds)
2012-08-13 13:26:53	<--	Rajko (rajkosto@2001:470:d76b:bee2:e960:b64e:6e8b:5116) has quit (Read error: Operation timed out)
2012-08-13 13:28:08	-->	trey (trey8221@2001:470:1f0f:c24::11) has joined ##c++
2012-08-13 13:28:14	-->	jlhg (~jlhg@2001:288:1001:28:f126:90f6:b245:4403) has joined ##c++
2012-08-13 13:28:58	-->	Baum (~Baum@aFrtWEg.dhcp.studentenwerk-bielefeld.de) has joined ##c++
2012-08-13 13:29:36	-->	iPhoneMRZ (~iphonemrz@95.74.4.46) has joined ##c++
2012-08-13 13:29:50	-->	luigy (~luigy@pool-96-242-21-81.nwrknj.fios.verizon.net) has joined ##c++
2012-08-13 13:31:17	<--	Alt_of_C1rl (~Alt_of_Ct@bl13-145-122.dsl.telepac.pt) has quit (Ping timeout: 246 seconds)
2012-08-13 13:32:09	<--	vsrao (~quassel@unaffiliated/vsrao) has quit (Ping timeout: 252 seconds)
2012-08-13 13:32:55	-->	Lillia7 (~lillia7@6abb386d.t-net.ne.jp) has joined ##c++
2012-08-13 13:33:05	rdpate	!grab n00b6502
2012-08-13 13:33:06	nolyc	By your command.
2012-08-13 13:33:26	n00b6502	hello
2012-08-13 13:33:57	<--	suy (~modpow@113.Red-83-54-203.dynamicIP.rima-tde.net) has quit (Remote host closed the connection)
2012-08-13 13:34:03	-->	jonaias (~jonaias@187.66.184.89) has joined ##c++
2012-08-13 13:34:05	<--	Hopkinz (Hopkinz@204.12.223.13) has quit (Quit: Quited)
2012-08-13 13:34:55	rdpate	!rq
2012-08-13 13:34:56	nolyc	[7347]<hamror> ok i admit it, my crotch is retarded
2012-08-13 13:35:35	-->	Henke37 (~Henrik@90-230-202-243-no203.tbcn.telia.com) has joined ##c++
2012-08-13 13:35:57	-->	suy (~modpow@113.Red-83-54-203.dynamicIP.rima-tde.net) has joined ##c++
2012-08-13 13:39:29	<--	julmuri (~kamazharr@b881.ip15.netikka.fi) has quit (Ping timeout: 244 seconds)
2012-08-13 13:40:14	-->	Sachiru (~Sachiru@120.29.81.121) has joined ##c++
2012-08-13 13:40:25	<--	julmae (~MAXHARRIE@b881.ip15.netikka.fi) has quit (Ping timeout: 272 seconds)
2012-08-13 13:42:29	-->	Vir (~mkretz@kde/mkretz) has joined ##c++
2012-08-13 13:43:37	-->	Alt_of_Ctrl (~Alt_of_Ct@bl13-145-122.dsl.telepac.pt) has joined ##c++
2012-08-13 13:43:44	-->	j0hnsm1th (~jubei@197.87.42.167) has joined ##c++
2012-08-13 13:43:51	<--	kken (~kken@athedsl-348114.home.otenet.gr) has quit
2012-08-13 13:44:53	RokerHRO	!grab SaBer
2012-08-13 13:44:54	nolyc	By your command.
2012-08-13 13:45:10	<--	Vir (~mkretz@kde/mkretz) has quit (Client Quit)
2012-08-13 13:45:24	<--	thore (~anonymous@p57B2EAF6.dip.t-dialin.net) has quit (Quit: thore)
2012-08-13 13:46:09	-->	Vir (~mkretz@kde/mkretz) has joined ##c++
2012-08-13 13:47:16	-->	iiyo (~iiyo@cpc1-linc6-0-0-cust945.12-1.cable.virginmedia.com) has joined ##c++
2012-08-13 13:47:48	<--	MrSassyPants (thephil@84-74-111-70.dclient.hispeed.ch) has quit (Remote host closed the connection)
2012-08-13 13:49:39	<--	thalassarche (~thalassar@unaffiliated/thalassarche) has quit (Quit: ChatZilla 0.9.88.2 [Firefox 14.0.1/20120713224749])
2012-08-13 13:50:01	-->	Sairon (Sairon@46.59.83.5) has joined ##c++
2012-08-13 13:51:28	-->	mire_ (~mire@85.222.222.254) has joined ##c++
2012-08-13 13:52:18	<--	wolfbyte (~wolfbyte@unaffiliated/wolfbyte) has quit (Ping timeout: 265 seconds)
2012-08-13 13:52:26	-->	Astus (John@2a02:2f02:ff1:f012::567c:d702) has joined ##c++
2012-08-13 13:52:27	<--	Astus (John@2a02:2f02:ff1:f012::567c:d702) has quit (Changing host)
2012-08-13 13:52:27	-->	Astus (John@unaffiliated/astus) has joined ##c++
2012-08-13 13:53:04	<--	DarkPeak (~DarkPeak@unaffiliated/darkpeak) has quit (Quit: Leaving)
2012-08-13 13:54:44	-->	stuntmachine (~textual@apo.aweber.com) has joined ##c++
2012-08-13 13:55:44	-->	wolfbyte (~wolfbyte@unaffiliated/wolfbyte) has joined ##c++
2012-08-13 13:55:49	<--	drumr (~drumr@adsl-64-217-217-240.dsl.rcsntx.swbell.net) has quit (Read error: Connection reset by peer)
2012-08-13 13:56:00	-->	drumr (~drumr@adsl-64-217-217-240.dsl.rcsntx.swbell.net) has joined ##c++
2012-08-13 13:56:37	-->	drinkycrow (~whoreface@c-98-212-215-137.hsd1.in.comcast.net) has joined ##c++
2012-08-13 13:56:42	<--	arvind_khadri (~arvind@unaffiliated/arvind-khadri/x-2237230) has quit (Ping timeout: 276 seconds)
2012-08-13 13:58:06	-->	CharlesDM (~CharlesDM@76.193-243-81.adsl-dyn.isp.belgacom.be) has joined ##c++
2012-08-13 13:58:22	<--	delicado (~delicado2@121.54.44.226) has quit (Ping timeout: 245 seconds)
2012-08-13 13:58:36	<--	tyl (~tyl@bb115-66-189-189.singnet.com.sg) has quit (Quit: Computer has gone to sleep.)
2012-08-13 14:00:42	<--	jlhg (~jlhg@2001:288:1001:28:f126:90f6:b245:4403) has left ##c++ ("Leaving")
2012-08-13 14:01:00	 *	gibberish waits for n00b6502 to tire out
2012-08-13 14:01:44	<--	Nicknamehere (d31e042c@gateway/web/freenode/ip.211.30.4.44) has quit (Quit: Page closed)
2012-08-13 14:02:18	-->	snearch (~snearch@pD4B887CE.dip.t-dialin.net) has joined ##c++
2012-08-13 14:02:32	-->	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has joined ##c++
2012-08-13 14:02:32	<--	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has quit (Changing host)
2012-08-13 14:02:32	-->	sohail (~sohail@unaffiliated/sohail) has joined ##c++
2012-08-13 14:04:01	-->	netrino (~netrino@159.224.130.54) has joined ##c++
2012-08-13 14:05:01	Lleo	!gcc
2012-08-13 14:05:02	nolyc	gcc is The GNU Compiler Collection. ( http://gcc.gnu.org ) For windows gcc, see http://mingw.org or http://cygwin.com . For an introduction to using gcc and friends, see http://www.network-theory.co.uk/docs/gccintro/ . ( See !personality for libstdc++ linker errors )
2012-08-13 14:05:13	Domiiii	SaBer I think "method" is quite easy to grasp
2012-08-13 14:05:16	-->	nonick (~Alliz_Tah@p5DE6C3EA.dip.t-dialin.net) has joined ##c++
2012-08-13 14:05:17	Domiiii	I dont see the ambiguity either
2012-08-13 14:05:21	-->	MulleDK19 (~MulleDK19@31.185.89.154) has joined ##c++
2012-08-13 14:06:17	<--	SeriousJack (~Jack@212-198-41-245.rev.numericable.fr) has quit (Read error: Connection reset by peer)
2012-08-13 14:06:38	-->	julmuri (~kamazharr@b881.ip15.netikka.fi) has joined ##c++
2012-08-13 14:06:43	-->	SeriousJack (~Jack@212-198-41-245.rev.numericable.fr) has joined ##c++
2012-08-13 14:06:59	-->	rchatsiri (~chatsiri@ppp-124-121-111-242.revip2.asianet.co.th) has joined ##c++
2012-08-13 14:07:01	<--	Baum (~Baum@aFrtWEg.dhcp.studentenwerk-bielefeld.de) has quit (Ping timeout: 272 seconds)
2012-08-13 14:07:01	-->	julmuri- (~kamazharr@b881.ip15.netikka.fi) has joined ##c++
2012-08-13 14:07:20	<--	Voziv (~quassel@ec2-204-236-224-208.compute-1.amazonaws.com) has left ##c++ ("Just leaving, I'll be back eventually")
2012-08-13 14:09:09	-->	Jorpe (~Tatoma@a88-112-140-244.elisa-laajakaista.fi) has joined ##c++
2012-08-13 14:09:37	<--	sohail (~sohail@unaffiliated/sohail) has quit (Ping timeout: 240 seconds)
2012-08-13 14:09:42	<--	Criztian (~criztian@89-96-175-137.ip13.fastwebnet.it) has quit (Remote host closed the connection)
2012-08-13 14:10:05	-->	xump (ssqpso@69.41.182.142) has joined ##c++
2012-08-13 14:10:22	<--	xump (ssqpso@69.41.182.142) has quit (Client Quit)
2012-08-13 14:10:26	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2012-08-13 14:10:56	<--	julmuri (~kamazharr@b881.ip15.netikka.fi) has quit (Ping timeout: 240 seconds)
2012-08-13 14:11:27	<--	dhruvasagar (~dhruvasag@122.172.230.166) has quit (Ping timeout: 272 seconds)
2012-08-13 14:12:42	-->	Criztian (~criztian@89-96-175-137.ip13.fastwebnet.it) has joined ##c++
2012-08-13 14:12:46	-->	alan_w (~alan_w@216.57.96.2) has joined ##c++
2012-08-13 14:12:47	SaBer	Domiiii: "you'd have a generic method - in the template"  You really think that is not ambiguous? If the member function template is referred to as generic method, what is the template that it is supposed to "be in"?
2012-08-13 14:13:25	Domiiii	I didnt say anything about generic
2012-08-13 14:13:38	-->	argoneus (~argoneus@unaffiliated/argoneus) has joined ##c++
2012-08-13 14:13:40	-->	MonkeyMichael (~mmccarty1@adsl-99-91-96-30.dsl.ipltin.sbcglobal.net) has joined ##c++
2012-08-13 14:13:47	SaBer	my point was about "generic method" being very vague...
2012-08-13 14:14:05	<--	localhost (~chris@cpe-76-188-161-222.neo.res.rr.com) has quit (Remote host closed the connection)
2012-08-13 14:14:06	Domiiii	C++ has no generics
2012-08-13 14:14:12	<--	Repentinus (~Repentinu@150.20.190.90.dyn.estpak.ee) has quit (Ping timeout: 252 seconds)
2012-08-13 14:14:21	gibberish	touche
2012-08-13 14:14:33	Domiiii	im just saying that factoid about "method" makes no sense
2012-08-13 14:14:58	-->	iLogical (~iLogical@unaffiliated/ilogical) has joined ##c++
2012-08-13 14:14:59	SaBer	well, I was just telling the guy to rather use "member function template" than "generic method"
2012-08-13 14:15:24	SaBer	...and the factoid tells you to use function and add specifiers to it, "member" and "template" both fitting that
2012-08-13 14:16:02	Silex	member function method \o/
2012-08-13 14:18:00	Domiiii	member function = method
2012-08-13 14:18:06	Domiiii	is there any ambiguity?
2012-08-13 14:18:19	-->	Hopkinz (Hopkinz@204.12.223.13) has joined ##c++
2012-08-13 14:19:19	-->	trigger (~trigger@gateway/tor-sasl/trigger) has joined ##c++
2012-08-13 14:19:31	SaBer	method template sounds retarded :P
2012-08-13 14:20:44	-->	never_back (~xingzhe@58.35.238.157) has joined ##c++
2012-08-13 14:21:25	<--	never_back (~xingzhe@58.35.238.157) has left ##c++
2012-08-13 14:21:33	-->	localhost (~chris@2002:4cbc:a1de::1) has joined ##c++
2012-08-13 14:21:34	Silex	Domiiii: this method/function discussion is retarded. Each language has a preference to express how it calls its functions/methods and it's nicer if you try to use the conventions
2012-08-13 14:21:35	<--	inad922 (~inad925@host86-163-59-15.range86-163.btcentralplus.com) has quit (Ping timeout: 272 seconds)
2012-08-13 14:21:51	Silex	now showing !method upon every who says method when it's pretty guessable is equally retarded
2012-08-13 14:21:56	Silex	everyone*
2012-08-13 14:22:50	Domiiii	if two languages have some primitives that are 100%  the same, then they should be usable interchangeably...
2012-08-13 14:23:07	Domiiii	its like case-conventions
2012-08-13 14:23:34	-->	PigFlu (~herp@248.80-202-23.nextgentel.com) has joined ##c++
2012-08-13 14:23:34	<--	PigFlu (~herp@248.80-202-23.nextgentel.com) has quit (Changing host)
2012-08-13 14:23:34	-->	PigFlu (~herp@unaffiliated/pigflu) has joined ##c++
2012-08-13 14:23:35	-->	IndianaRonaldo (~IndianaRo@101.210.244.1) has joined ##c++
2012-08-13 14:23:50	Domiiii	if someone uses Captialized class names while the next guy does not, then that's just personal taste (as long as it does not contradict the standard of the framework that you are working in)
2012-08-13 14:24:01	-->	MrFahrenheit (~RageOfTho@cable-77-221-23-224.dynamic.vinet.ba) has joined ##c++
2012-08-13 14:24:06	-->	Buaha` (Zapper02@088156095136.wroclaw.vectranet.pl) has joined ##c++
2012-08-13 14:24:13	<--	Buaha` (Zapper02@088156095136.wroclaw.vectranet.pl) has quit (Client Quit)
2012-08-13 14:25:00	-->	hauron (~hauron@dyn1197-105.wlan.ic.ac.uk) has joined ##c++
2012-08-13 14:25:10	IndianaRonaldo	Does anybody use Cling ? The interpreter for c++?
2012-08-13 14:26:05	gibberish	We're too busy having a word fight.
2012-08-13 14:26:28	hauron	someone's probably talking gibberish again?
2012-08-13 14:27:05	IndianaRonaldo	A word fight?
2012-08-13 14:27:18	<--	iPhoneMRZ (~iphonemrz@95.74.4.46) has quit (Quit: Colloquy for iPhone - http://colloquy.mobi)
2012-08-13 14:27:46	<--	maum (~maum@210.119.60.152) has quit (Quit: Leaving)
2012-08-13 14:27:46	<--	IndianaRonaldo (~IndianaRo@101.210.244.1) has quit (Client Quit)
2012-08-13 14:28:06	-->	arcanis (~Mael@167.54.11.109.rev.sfr.net) has joined ##c++
2012-08-13 14:28:30	<--	luigy (~luigy@pool-96-242-21-81.nwrknj.fios.verizon.net) has quit (Quit: Computer has gone to sleep.)
2012-08-13 14:28:50	-->	rgb247 (~rgb@82.79.111.78) has joined ##c++
2012-08-13 14:28:58	<--	rchatsiri (~chatsiri@ppp-124-121-111-242.revip2.asianet.co.th) has left ##c++
2012-08-13 14:29:09	n00b6502	ok i admit, templated member function is better
2012-08-13 14:30:10	n00b6502	i've spent myy capacity for internet arguments today, nearly
2012-08-13 14:30:20	gibberish	Yay!
2012-08-13 14:30:33	Zharf	mine is infinite
2012-08-13 14:30:52	n00b6502	c/c++ or c++  ?
2012-08-13 14:31:16	gibberish	What's funny is I like "c++" and "memeber function".
2012-08-13 14:31:17	Zharf	??
2012-08-13 14:31:22	-->	thalassarche (~thalassar@unaffiliated/thalassarche) has joined ##c++
2012-08-13 14:31:34	gibberish	Or member function. Though memeber is funnier.
2012-08-13 14:32:48	n00b6502	like c++ ooop might hve methods
2012-08-13 14:32:52	-->	d3nys (~den@93-136-95-89.adsl.net.t-com.hr) has joined ##c++
2012-08-13 14:32:57	gibberish	It's just annoying when you see people who optimize things for the machine and someone goes "lol you're doing it wrong".
2012-08-13 14:33:17	-->	Praise (~Fat@unaffiliated/praise) has joined ##c++
2012-08-13 14:33:28	<--	Keshi (~Keshi@unaffiliated/keshi) has quit (Quit: Leaving)
2012-08-13 14:33:30	<--	Lleo (~Lleo@5355B522.cm-6-6c.dynamic.ziggo.nl) has quit (Ping timeout: 260 seconds)
2012-08-13 14:33:32	XAVeRY	n00b6502: it's sad that you're still here.
2012-08-13 14:33:36	-->	Repentinus (~Repentinu@150.20.190.90.dyn.estpak.ee) has joined ##c++
2012-08-13 14:33:38	n00b6502	ok
2012-08-13 14:34:18	BadDesign	I hate programming language names that have common words, used elsewhere, there are ambiguous and overused... like C named after a letter... try to search that on Google, C++, C# added unsearchable characters , Scala for "scala" something having to do with music... Java for an island...  etc..
2012-08-13 14:34:51	gibberish	Is there Java Inheritance island?
2012-08-13 14:34:51	n00b6502	try learning haskell and searching for their operators
2012-08-13 14:34:56	BadDesign	Ruby for a diamond... Python for a snake..
2012-08-13 14:35:04	n00b6502	yeah its ambiguous
2012-08-13 14:35:13	melba	i hate everything
2012-08-13 14:35:25	gibberish	I'm just surprised it's a problem.
2012-08-13 14:35:37	RokerHRO	BadDesign: so just use PHP!  :-D
2012-08-13 14:35:47	<--	ambro718 (~ambro@BSN-77-101-149.dsl.siol.net) has quit (Quit: Konversation terminated!)
2012-08-13 14:35:55	gibberish	My first hit for Python is the official website.
2012-08-13 14:36:17	gibberish	So is Ruby.
2012-08-13 14:36:30	gibberish	Wow, maybe Google finally figured me out.
2012-08-13 14:36:30	n00b6502	they have you in a search bubble ?
2012-08-13 14:36:43	gibberish	Yeah, I hope so. My dreams have come true.
2012-08-13 14:36:56	<--	em (~em@unaffiliated/emma) has quit (Ping timeout: 252 seconds)
2012-08-13 14:37:10	-->	Lleo (~Lleo@5355B522.cm-6-6c.dynamic.ziggo.nl) has joined ##c++
2012-08-13 14:37:27	gibberish	Yeah, I'm in a bubble. C goes to the Wikipedia for C.
2012-08-13 14:37:47	gibberish	Second link is for C: Summary for Citigroup
2012-08-13 14:37:57	gibberish	\o/
2012-08-13 14:38:28	-->	pmenon (~pmenon@75.98.196.98) has joined ##c++
2012-08-13 14:38:47	<--	Jorpe (~Tatoma@a88-112-140-244.elisa-laajakaista.fi) has quit (Ping timeout: 240 seconds)
2012-08-13 14:38:58	XAVeRY	melba: install gentoo.
2012-08-13 14:39:29	-->	em (~em@unaffiliated/emma) has joined ##c++
2012-08-13 14:39:35	melba	:)
2012-08-13 14:39:40	-->	TzilTzal (~TzilTzal@cm213.gamma65.maxonline.com.sg) has joined ##c++
2012-08-13 14:40:34	-->	wordToDaBird[Lap (~john@cpe-65-189-206-159.neo.res.rr.com) has joined ##c++
2012-08-13 14:40:34	-->	tworkin (~tw@rrcs-24-153-140-18.sw.biz.rr.com) has joined ##c++
2012-08-13 14:41:58	<--	wordToDaBird[Lap (~john@cpe-65-189-206-159.neo.res.rr.com) has left ##c++
2012-08-13 14:42:19	-->	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has joined ##c++
2012-08-13 14:42:20	<--	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has quit (Changing host)
2012-08-13 14:42:20	-->	sohail (~sohail@unaffiliated/sohail) has joined ##c++
2012-08-13 14:42:27	-->	wordToDaBird (~john@cpe-65-189-206-159.neo.res.rr.com) has joined ##c++
2012-08-13 14:42:32	<--	SyouJyoA (~perfume@175.244.199.159) has quit (Read error: Connection reset by peer)
2012-08-13 14:42:34	-->	Soci3ty (~Soci3ty@108-88-171-72.lightspeed.livnmi.sbcglobal.net) has joined ##c++
2012-08-13 14:42:45	-->	Aicasn_ (~aicasn@unaffiliated/aicasn) has joined ##c++
2012-08-13 14:43:20	-->	thore (~anonymous@p57B2EAF6.dip.t-dialin.net) has joined ##c++
2012-08-13 14:43:59	-->	studybot_ (~Tal@117.7.68.58) has joined ##c++
2012-08-13 14:44:44	-->	googol (~matthew@ip68-4-137-125.oc.oc.cox.net) has joined ##c++
2012-08-13 14:44:48	<--	Lleo (~Lleo@5355B522.cm-6-6c.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2012-08-13 14:44:53	<--	izhak (~izhak@213.87.240.31) has quit (Ping timeout: 248 seconds)
2012-08-13 14:46:51	-->	Rafa_ (~Rafa@208.157.150.150) has joined ##c++
2012-08-13 14:48:38	<--	em (~em@unaffiliated/emma) has quit (Ping timeout: 240 seconds)
2012-08-13 14:48:48	-->	vish (irc2gowebc@115.240.4.228) has joined ##c++
2012-08-13 14:48:59	vish	hiii
2012-08-13 14:49:09	<--	googol (~matthew@ip68-4-137-125.oc.oc.cox.net) has quit (Ping timeout: 252 seconds)
2012-08-13 14:49:17	vish	anyone?
2012-08-13 14:49:30	RokerHRO	oO
2012-08-13 14:49:37	ert3go	hi vish
2012-08-13 14:49:37	<--	studybot_ (~Tal@117.7.68.58) has quit (Quit: leaving)
2012-08-13 14:49:39	-->	em (~em@unaffiliated/emma) has joined ##c++
2012-08-13 14:49:54	vish	anyone having a good knowledge of c++....i have a bit of a doubt
2012-08-13 14:50:01	<--	xilo (~xilo@cpe-72-177-11-215.austin.res.rr.com) has quit (Ping timeout: 246 seconds)
2012-08-13 14:50:14	XAVeRY	shoot.
2012-08-13 14:50:21	mads-	vish, just ask your question :)
2012-08-13 14:50:31	n00b6502	no ask if its on topic
2012-08-13 14:50:33	<--	Matthias|PC (~Matthias@162.233-243-81.adsl-dyn.isp.belgacom.be) has quit (Ping timeout: 245 seconds)
2012-08-13 14:50:34	vish	i am moreover a beginner but my doubt is......
2012-08-13 14:51:06	vish	like..........
2012-08-13 14:51:06	-->	rogues (~rogues@183.83.82.7) has joined ##c++
2012-08-13 14:51:12	ert3go	you sound like an indian vish
2012-08-13 14:51:26	vish	my name sounds like that?
2012-08-13 14:51:33	ert3go	just ask your doubt :)
2012-08-13 14:52:18	vish	class check() { for(int i=0;i<=8;i++) { if(my condition) { return flow to last funtion...//what should be here???}}}
2012-08-13 14:52:45	vskaddanki	@vish return
2012-08-13 14:52:48	endlesstars	noob question
2012-08-13 14:53:02	n00b6502	you can have multiple exit points if you like
2012-08-13 14:53:08	endlesstars	i have a bunch of floats i need parametrized in a class
2012-08-13 14:53:16	endlesstars	but it won't let me use a template
2012-08-13 14:53:19	vish	i dont want to exit the program.
2012-08-13 14:53:22	vish	see
2012-08-13 14:53:23	-->	Oohm (~Oohm@ip54550b7a.speed.planet.nl) has joined ##c++
2012-08-13 14:53:24	vish	like
2012-08-13 14:53:25	n00b6502	else?
2012-08-13 14:53:30	endlesstars	is there something more C++ than a bunch of #define?
2012-08-13 14:53:34	vish	void sam()
2012-08-13 14:53:36	vish	{
2012-08-13 14:53:47	vish	check(); blah blah blah statements.
2012-08-13 14:53:49	vish	}
2012-08-13 14:53:55	vskaddanki	vish: Stop using newlines to phrase your thoughts and code. Use pastebin and ask a question in one single line.
2012-08-13 14:54:08	vish	pastebin????
2012-08-13 14:54:10	<--	Areks (~Areks@176.14.9.15) has quit (Quit: KVIrc 4.0.2 Insomnia http://www.kvirc.net/)
2012-08-13 14:54:11	vskaddanki	it would be easier for others to help you
2012-08-13 14:54:12	vish	help me with that?
2012-08-13 14:54:13	-->	mrcan__ (~mrcan@unaffiliated/mrcan) has joined ##c++
2012-08-13 14:54:21	n00b6502	google pastebin
2012-08-13 14:54:32	jesyspa	vish: See www.codepad.org or www.ideone.com
2012-08-13 14:54:33	<--	mrcan_ (~mrcan@unaffiliated/mrcan) has quit (Read error: Connection reset by peer)
2012-08-13 14:54:37	vish	kk i am  typing
2012-08-13 14:54:46	-->	Areks (~Areks@176.14.9.15) has joined ##c++
2012-08-13 14:54:47	<--	Criztian (~criztian@89-96-175-137.ip13.fastwebnet.it) has quit (Remote host closed the connection)
2012-08-13 14:55:08	-->	Baum (~Baum@aFrtWEg.dhcp.studentenwerk-bielefeld.de) has joined ##c++
2012-08-13 14:55:15	n00b6502	endlessstars what was your guess at your template
2012-08-13 14:55:50	n00b6502	oh you want to template a float literal?
2012-08-13 14:56:27	endlesstars	yes
2012-08-13 14:56:33	-->	molgrum (~molgrum@h-234-143.a189.priv.bahnhof.se) has joined ##c++
2012-08-13 14:56:38	endlesstars	it's really a bunch of defines
2012-08-13 14:56:49	et	i guess he's trying to template <float PI> ...
2012-08-13 14:56:50	n00b6502	you can make functions that return the float
2012-08-13 14:56:52	tworkin	;q
2012-08-13 14:56:53	endlesstars	but i'm not sure #define is still good in C++
2012-08-13 14:56:54	rgb247	I have a question. I'm reading a book and I find there this syntax: vector<T>::size_type
2012-08-13 14:57:10	rgb247	the T from < > is reffer to the type? which can be: int, double, bool ?
2012-08-13 14:57:26	vskaddanki	endlesstars: What kind of parametric behavior are you looking for?
2012-08-13 14:57:29	n00b6502	do you just want float literals .. const float; i'm guessing something not
2012-08-13 14:57:33	n00b6502	somethig else
2012-08-13 14:57:38	scai	rgb247: yes
2012-08-13 14:57:43	<--	BadDesign (~quassel@2001:15c0:66a3:2:f000:d49:1b1f:d622) has quit (Remote host closed the connection)
2012-08-13 14:57:56	scai	rgb247: as std::vector is a template
2012-08-13 14:58:06	<--	rogues (~rogues@183.83.82.7) has quit (Remote host closed the connection)
2012-08-13 14:58:09	rgb247	scai: so if anyone I'll find this structure, I will need to know that the <T> reffer to a type..
2012-08-13 14:58:13	n00b6502	what does the float depend on
2012-08-13 14:58:16	n00b6502	and where
2012-08-13 14:58:20	endlesstars	template <typename Ty, float OREXPRESSIONSPAWN = 0.4, 	float OREXPRESSIONEMPTY = 0.1> class SubExpression: public Expression<Ty>
2012-08-13 14:58:25	-->	rogues (~rogues@183.83.82.7) has joined ##c++
2012-08-13 14:58:37	endlesstars	in the body of the class i'll use the floats for some comparisions
2012-08-13 14:58:41	rgb247	scai: can you give me a definition what template mean?
2012-08-13 14:58:50	vish	void sam(int z)
2012-08-13 14:58:51	rgb247	scai: what's the difference between a template and an object
2012-08-13 14:58:52	n00b6502	you could put them in the constructor
2012-08-13 14:58:54	vish	oh so sorry
2012-08-13 14:58:58	-->	Criztian (~criztian@89-96-175-137.ip13.fastwebnet.it) has joined ##c++
2012-08-13 14:59:05	scai	rgb247: your c++ book should give you a good introduction about templates
2012-08-13 14:59:07	-->	luigy (~luigy@pool-96-242-21-81.nwrknj.fios.verizon.net) has joined ##c++
2012-08-13 14:59:08	n00b6502	or maybe static floats
2012-08-13 14:59:17	endlesstars	i tought something at compile time would be faster
2012-08-13 14:59:22	n00b6502	yeah you dont want something in the class
2012-08-13 14:59:37	endlesstars	static as in global static?
2012-08-13 14:59:42	n00b6502	yeah
2012-08-13 14:59:43	rgb247	scai: maybe it doesn't introducted me at more complicated things with template. I'm readding accelerated C++ book by addison wesley.
2012-08-13 14:59:55	ert3go	same here rgb247
2012-08-13 15:00:04	-->	drummer306 (~drummer30@149.151.167.154) has joined ##c++
2012-08-13 15:00:05	rgb247	scai: can you give me the definition please?
2012-08-13 15:00:07	vskaddanki	endlesstars: the usual idiom is to create a functor object with these values as parameters and use it in your class and make the functor object a parameter. Unless you are looking for some compile time binding (like metaprogramming) this approach is equivalent to using template parameters (such as ints)
2012-08-13 15:00:12	rgb247	ert3go: nice, at which page you are
2012-08-13 15:00:18	ert3go	rgb247, 67
2012-08-13 15:00:20	ert3go	you ?
2012-08-13 15:00:22	scai	rgb247: I don't know if this book handles templates, but I would expect it to handle them
2012-08-13 15:00:24	vish	hey everyone...
2012-08-13 15:00:38	vish	check this url http://codepad.org/K3gO2rIg
2012-08-13 15:00:39	wbooze	wtf, parametric types abstacted ?!
2012-08-13 15:00:45	rgb247	ert3go: 72 :)
2012-08-13 15:00:47	wbooze	*r
2012-08-13 15:00:48	n00b6502	how about an array of constants and a templated integer to select
2012-08-13 15:01:07	 *	ert3go skips 5 pages :P
2012-08-13 15:01:10	-->	Y_Less (~Y_Less@host-109-97.eg.le.ac.uk) has joined ##c++
2012-08-13 15:01:29	endlesstars	i'm picking up good practices so i'll go with whatever is more idiomatic
2012-08-13 15:01:33	scai	rgb247: better read it in a book, the topic is too complex to explain it in a few words
2012-08-13 15:01:52	vish	so anyone got....my doubt???
2012-08-13 15:01:56	rgb247	scai: ok, I'll continue to read from the book
2012-08-13 15:02:02	n00b6502	i've never needed this
2012-08-13 15:02:10	rgb247	ert3go: what's your experience with C++? or other languages?
2012-08-13 15:02:15	<--	ShishKabab (~vincent@195.191.202.173) has quit (Quit: Konversation terminated!)
2012-08-13 15:02:24	endlesstars	only i wanted something that compiled and didn't require costs at runtime
2012-08-13 15:02:28	n00b6502	how and when do you need to change the alue
2012-08-13 15:02:31	-->	zamn (~zamn@zamn.net) has joined ##c++
2012-08-13 15:02:31	<--	zamn (~zamn@zamn.net) has quit (Changing host)
2012-08-13 15:02:32	-->	zamn (~zamn@unaffiliated/zamn) has joined ##c++
2012-08-13 15:02:33	endlesstars	but if the functor is the way functor it is
2012-08-13 15:02:46	ert3go	rgb247, I am familiar with basics of c , asm , python . You ?
2012-08-13 15:02:46	endlesstars	i need to change it between compiles
2012-08-13 15:02:56	n00b6502	oh just use a constant
2012-08-13 15:03:00	-->	Matthias|PC (~Matthias@162.233-243-81.adsl-dyn.isp.belgacom.be) has joined ##c++
2012-08-13 15:03:03	vish	anyone.....?????????????? check this url and help me a bit http://codepad.org/K3gO2rIg
2012-08-13 15:03:05	n00b6502	static const float
2012-08-13 15:03:10	endlesstars	i could hardcode them but then it wouldn't be really parametric
2012-08-13 15:03:11	n00b6502	in the class
2012-08-13 15:03:15	vskaddanki	endlesstars: well, it is kind of standard. You can look at the way functors are implemented for comparisons in std::map
2012-08-13 15:03:19	rgb247	ert3go: almost same like you... without asm. I know PHP, played a little with python..
2012-08-13 15:03:27	-->	dhruvasagar (~dhruvasag@122.172.230.166) has joined ##c++
2012-08-13 15:03:45	n00b6502	how often will you call it
2012-08-13 15:03:50	vskaddanki	I mean if you put them in templates you are equivalently hardcoding them as you will need to recompile in order to change the values :)
2012-08-13 15:04:00	endlesstars	i know
2012-08-13 15:04:10	n00b6502	if you call it in one place, your parameterization might as well be function arguments
2012-08-13 15:04:14	-->	Ingmar (~ingmar@exherbo/developer/ingmar) has joined ##c++
2012-08-13 15:04:23	endlesstars	but when i learned C they chewed us out if we put inside a constant instead than using a #define
2012-08-13 15:04:30	n00b6502	if every instance uses one parameter in multiple places, make a static const float
2012-08-13 15:04:34	n00b6502	that the function uses.
2012-08-13 15:04:46	<--	Rafa_ (~Rafa@208.157.150.150) has quit (Quit: Leaving)
2012-08-13 15:04:52	vish	hey. no offence but anyone helping me???? just a nooby doubt.
2012-08-13 15:04:54	endlesstars	because with defines you have meaningful names and a single place to check to change them
2012-08-13 15:04:54	n00b6502	i struggle to see where you'd need to template it with const floats any other way
2012-08-13 15:04:57	vskaddanki	well using #define instead of magic numbers is still a good practice
2012-08-13 15:05:15	n00b6502	but you could have const float array, and pick a value with an int in the template
2012-08-13 15:05:18	vskaddanki	but depends on how tight your loop is and how much computation you want to push to compile time
2012-08-13 15:05:19	rgb247	ert3go: did you use a IM tool? I would like to have you on my messenger list for experiences changing
2012-08-13 15:05:42	RokerHRO	vish: how about ##c++-basic
2012-08-13 15:05:46	ert3go	I am always on here . You can talk to me here rgb247
2012-08-13 15:05:54	n00b6502	if you want the values in the class, another option with inlines is to put it in the constructor... perhaps the compiler will figure out for you
2012-08-13 15:06:01	scai	vish: your function is void, so obviously you don't want to return anything. just use "return;"
2012-08-13 15:06:04	n00b6502	that its compile time constant where you call it
2012-08-13 15:06:05	rgb247	ok ert3go :)
2012-08-13 15:06:09	-->	jrgill (~jrgill@cpe-74-74-72-78.stny.res.rr.com) has joined ##c++
2012-08-13 15:06:10	<--	jrgill (~jrgill@cpe-74-74-72-78.stny.res.rr.com) has quit (Changing host)
2012-08-13 15:06:10	-->	jrgill (~jrgill@unaffiliated/jrgill) has joined ##c++
2012-08-13 15:06:25	scai	and if you do want to return i, then use "return i;" as return is not a function. get a good C++ book.
2012-08-13 15:06:34	vish	scai:will using only " return;" will return flow ????
2012-08-13 15:06:48	<--	tjadc (~quassel@196-215-126-5.dynamic.isadsl.co.za) has quit (Ping timeout: 244 seconds)
2012-08-13 15:06:50	-->	Saint_ (~lord@133-107.34-65.panhandle.res.rr.com) has joined ##c++
2012-08-13 15:07:03	scai	vish: return returns from the current function
2012-08-13 15:07:09	scai	just try it
2012-08-13 15:07:13	--	Saint_ is now known as Guest93832
2012-08-13 15:07:14	ert3go	rgb247, you in university ?
2012-08-13 15:07:24	n00b6502	endlessstars: honestly not sure what to advise :) make it a const float global and ask again when you have 2 places you need to call with 2 different values
2012-08-13 15:07:28	vish	not getting u can u edit the code and give me the link????
2012-08-13 15:07:36	n00b6502	then you can see how you need to bind it
2012-08-13 15:07:40	vskaddanki	Does anyone know if we use 'auto' for a reference in assignment, does the compiler automatically create a copy? I burnt my hand today while doing that. I did not know if it is gcc or it is in the standard
2012-08-13 15:07:46	<--	kami (~user@85.234.37.158) has quit (Quit: Konversation terminated!)
2012-08-13 15:08:14	n00b6502	auto& p=something(); .. i thought that worked
2012-08-13 15:08:20	scai	vish: no, what part of my answer didn't you understand?
2012-08-13 15:08:39	vskaddanki	n00b6502: so you can use the & symbol after auto to make it a reference?
2012-08-13 15:08:49	n00b6502	ive used that in iteration macros
2012-08-13 15:08:57	n00b6502	possibly let me check..
2012-08-13 15:09:00	vskaddanki	I thought the type was automatically deduced without the reference
2012-08-13 15:09:01	vskaddanki	thanks
2012-08-13 15:09:11	<--	damir__ (~damir@217-72-91-162.ipv4.tusmobil.si) has quit (Quit: Leaving.)
2012-08-13 15:09:22	vish	what should i put to stop executing the FOR loop any further and return flow immidieatly to VOID SAM
2012-08-13 15:09:34	vskaddanki	i use it in range based algorithms using begin and end, but then it doesn't matter if it is copied or not as iterators are light objects anyways
2012-08-13 15:09:39	<--	iLogical (~iLogical@unaffiliated/ilogical) has quit (Read error: Connection reset by peer)
2012-08-13 15:09:41	n00b6502	for (auto& p : collection) { ... }
2012-08-13 15:09:58	-->	xormor (~xormor@188-67-175-25.bb.dnainternet.fi) has joined ##c++
2012-08-13 15:10:00	<--	mrcan__ (~mrcan@unaffiliated/mrcan) has quit (Read error: Connection reset by peer)
2012-08-13 15:10:15	endlesstars	vish: break
2012-08-13 15:10:45	vish	wow...let me try BREAK..thanks !
2012-08-13 15:10:46	vskaddanki	n00b6502: thanks
2012-08-13 15:11:00	<--	sohail (~sohail@unaffiliated/sohail) has quit (Ping timeout: 272 seconds)
2012-08-13 15:11:11	vskaddanki	unfortunately I am stuck in gcc 4.5.0 which doesn't have the foreach implemented
2012-08-13 15:11:12	vskaddanki	:(
2012-08-13 15:11:24	sam	hey can you call that function something else? thanks.
2012-08-13 15:11:27	n00b6502	oh shit no
2012-08-13 15:11:29	n00b6502	that makes a copu
2012-08-13 15:11:40	n00b6502	wait
2012-08-13 15:11:42	n00b6502	does it
2012-08-13 15:11:49	n00b6502	i'm trying to verify .. it certianly compiles
2012-08-13 15:12:05	endlesstars	vskaddanki: for a functor you mean a class that has lots of noargs() functions that return the constant values i need?
2012-08-13 15:12:14	-->	Keshi (~Keshi@unaffiliated/keshi) has joined ##c++
2012-08-13 15:12:20	n00b6502	i think its a reference as you expect, i'm just trying to verify with a sizeof..
2012-08-13 15:12:24	<--	deSilva (~deSilva@144.187.32.17) has quit
2012-08-13 15:12:41	vskaddanki	endlesstars: no. let me show you an example
2012-08-13 15:12:54	jesyspa	sizeof won't distinguish between a T and a T&, afaik.
2012-08-13 15:13:09	<--	zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has quit (Quit: zap0)
2012-08-13 15:13:15	endlesstars	right those would be thunks not functor
2012-08-13 15:13:24	jesyspa	<< sizeof(string&), sizeof(string)
2012-08-13 15:13:25	geordi	8, 8
2012-08-13 15:13:27	Irishmanluke	vskaddanki: you cant do _standard=c++0x?
2012-08-13 15:13:29	-->	Saint__ (~lord@133-107.34-65.panhandle.res.rr.com) has joined ##c++
2012-08-13 15:13:39	jesyspa	<< sizeof(vector&), sizeof(vector)
2012-08-13 15:13:40	geordi	error: missing template arguments before '&' token
2012-08-13 15:13:46	n00b6502	vskaddanki: it definitely makes a reference
2012-08-13 15:14:10	n00b6502	yes i shoved one in a class to measure it properly :)
2012-08-13 15:14:15	vish	hi again :)
2012-08-13 15:14:18	n00b6502	just to convince myself
2012-08-13 15:14:40	<--	MissionCritical (~MissionCr@unaffiliated/missioncritical) has quit (Ping timeout: 256 seconds)
2012-08-13 15:15:13	<--	yamamushi (~yamamushi@mobile-166-147-078-146.mycingular.net) has quit (Quit: I don't even see the code anymore...)
2012-08-13 15:16:17	-->	BadDesign (~quassel@2001:15c0:66a3:2:f000:d49:1b1f:d622) has joined ##c++
2012-08-13 15:16:37	<--	Guest93832 (~lord@133-107.34-65.panhandle.res.rr.com) has quit (Ping timeout: 244 seconds)
2012-08-13 15:16:51	-->	xissburg (~xissburg@187.3.50.233) has joined ##c++
2012-08-13 15:18:47	<--	eataix (~eataix@unaffiliated/eataix) has quit (Quit: ZNC - http://znc.in)
2012-08-13 15:18:51	<--	mire_ (~mire@85.222.222.254) has quit (Ping timeout: 252 seconds)
2012-08-13 15:19:03	vskaddanki	n00b6502: thanks
2012-08-13 15:19:21	<--	smokex (~smokex@122.150.67.220) has quit (Read error: Connection reset by peer)
2012-08-13 15:19:31	vskaddanki	endlesstars: http://codepad.org/UmnxNAnT
2012-08-13 15:19:36	vskaddanki	this is what i was talking about
2012-08-13 15:19:47	vskaddanki	all I had to do was to add the &
2012-08-13 15:19:50	vskaddanki	crap!
2012-08-13 15:19:59	<--	Targen (~iguana@190.39.181.108) has quit (Read error: Connection reset by peer)
2012-08-13 15:20:07	-->	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has joined ##c++
2012-08-13 15:20:07	<--	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has quit (Changing host)
2012-08-13 15:20:07	-->	sohail (~sohail@unaffiliated/sohail) has joined ##c++
2012-08-13 15:20:27	<--	nonick (~Alliz_Tah@p5DE6C3EA.dip.t-dialin.net) has quit (Quit: ChatZilla 0.9.88.2 [Firefox 14.0.1/20120713134347])
2012-08-13 15:20:29	vskaddanki	endlesstars: you need not just use boolean functions. You can use anything you like
2012-08-13 15:21:25	vskaddanki	Irishmanluke: well I do use -std=c++0x but it doesn't implement that functionality till gcc 4.7 I guess
2012-08-13 15:21:27	-->	smokex (~smokex@122.150.67.220) has joined ##c++
2012-08-13 15:21:40	<--	XAVeRY (~daniel@unaffiliated/xavery) has quit (Ping timeout: 252 seconds)
2012-08-13 15:21:48	-->	mike_sun_ (~quassel@189.27.163.164.dynamic.adsl.gvt.net.br) has joined ##c++
2012-08-13 15:22:04	Irishmanluke	I wonder if I have that on my gcc, never tried it
2012-08-13 15:22:08	<--	Josef_K (~jeremy@124-168-120-3.dyn.iinet.net.au) has quit (Ping timeout: 240 seconds)
2012-08-13 15:23:33	joel_falcou	till 4.4 vskaddanki
2012-08-13 15:25:49	<--	narfnarfnarf (~irc@vpn-ch.sonova.com) has left ##c++
2012-08-13 15:26:15	<--	d3nys (~den@93-136-95-89.adsl.net.t-com.hr) has quit (Quit: Leaving)
2012-08-13 15:26:19	-->	vish123 (irc2gowebc@115.240.4.228) has joined ##c++
2012-08-13 15:26:30	<--	vish123 (irc2gowebc@115.240.4.228) has left ##c++
2012-08-13 15:26:33	<--	vish (irc2gowebc@115.240.4.228) has quit (Quit: irc2go)
2012-08-13 15:27:10	-->	Matthias|Laptop (~matthias@162.233-243-81.adsl-dyn.isp.belgacom.be) has joined ##c++
2012-08-13 15:27:32	endlesstars	vskaddanki: uhm.. i see
2012-08-13 15:27:36	-->	xilo (~xilo@32.97.110.56) has joined ##c++
2012-08-13 15:27:43	endlesstars	but this still requires execution at runtime
2012-08-13 15:28:13	-->	MissionCritical (~MissionCr@unaffiliated/missioncritical) has joined ##c++
2012-08-13 15:28:18	endlesstars	guess it's back to #define, i'm losing too much time on details
2012-08-13 15:28:23	n00b6502	const float
2012-08-13 15:28:31	endlesstars	or const float yes
2012-08-13 15:28:38	vskaddanki	even if you put constants the will need to be executed at run time because you are comparing some input variable to the constant
2012-08-13 15:28:41	-->	Polenton (~Antonio@net-93-146-233-237.cust.dsl.teletu.it) has joined ##c++
2012-08-13 15:28:48	-->	jewels (~alexz@host234-72-dynamic.55-82-r.retail.telecomitalia.it) has joined ##c++
2012-08-13 15:28:50	vskaddanki	I don't know what you mean by run time
2012-08-13 15:29:04	n00b6502	if it can be inlined it might be
2012-08-13 15:29:07	endlesstars	the functor expression needs to be evaluated at runtime
2012-08-13 15:29:21	vskaddanki	once you instantiate the template, you will generate the code at compile time
2012-08-13 15:29:27	vskaddanki	if you use only constants that is fine then
2012-08-13 15:29:41	vskaddanki	but it allows you to truly parameterize the comparison object
2012-08-13 15:30:06	endlesstars	uhm... if(f_m(c)) is a call but it probably requires the same time as a comparision
2012-08-13 15:30:18	vskaddanki	it is cause it is inlined
2012-08-13 15:30:45	vskaddanki	and since you are passing the functor as const reference no overheads there also
2012-08-13 15:30:48	<--	Saint__ (~lord@133-107.34-65.panhandle.res.rr.com) has quit (Ping timeout: 240 seconds)
2012-08-13 15:30:52	endlesstars	what looks different to me is that i need a local variable const functor_T& f_m to keep track
2012-08-13 15:31:00	-->	d3nys (~den@93-136-95-89.adsl.net.t-com.hr) has joined ##c++
2012-08-13 15:31:02	endlesstars	but since it's const it will be hardcoded probably
2012-08-13 15:31:12	endlesstars	exactly
2012-08-13 15:31:29	vskaddanki	again all this matters if it is in a tight loop (O(n^4) or higher)
2012-08-13 15:31:38	vskaddanki	otherwise all these things contribute to microseconds
2012-08-13 15:32:14	<--	speedy (speedy@86.123.44.43) has quit (Ping timeout: 256 seconds)
2012-08-13 15:33:00	<--	Felix91 (~Chatzilla@pdbn-5d826132.pool.mediaWays.net) has quit (Ping timeout: 260 seconds)
2012-08-13 15:33:01	-->	Dynad (NO@5ED192D8.cm-7-2c.dynamic.ziggo.nl) has joined ##c++
2012-08-13 15:33:18	-->	whicling (~mike4_@gateway/tor-sasl/mike4/x-38362156) has joined ##c++
2012-08-13 15:33:22	-->	phao (phao@177.146.137.231) has joined ##c++
2012-08-13 15:33:53	<--	em (~em@unaffiliated/emma) has quit (Ping timeout: 245 seconds)
2012-08-13 15:34:04	-->	narfnarfnarf (~irc@vpn-ch.sonova.com) has joined ##c++
2012-08-13 15:35:19	<--	Polenton (~Antonio@net-93-146-233-237.cust.dsl.teletu.it) has left ##c++
2012-08-13 15:35:30	<--	mike4_ (~mike4_@gateway/tor-sasl/mike4/x-38362156) has quit (Ping timeout: 276 seconds)
2012-08-13 15:35:41	<--	hrehf (~ircclient@p4FE3A1D1.dip.t-dialin.net) has quit (Ping timeout: 272 seconds)
2012-08-13 15:35:44	-->	jessica_pp (~jessica_p@HSI-KBW-134-3-229-63.hsi14.kabel-badenwuerttemberg.de) has joined ##c++
2012-08-13 15:35:46	-->	em (~em@unaffiliated/emma) has joined ##c++
2012-08-13 15:36:09	--	whicling is now known as mike4_
2012-08-13 15:36:16	endlesstars	it's more a matter of good practices than performance
2012-08-13 15:36:29	endlesstars	don't use a magic number when you can use a define
2012-08-13 15:36:34	-->	Polenton (~Antonio@net-93-146-233-237.cust.dsl.teletu.it) has joined ##c++
2012-08-13 15:36:37	endlesstars	don't use a variable when you need a constant
2012-08-13 15:36:42	vskaddanki	cannot agree more.
2012-08-13 15:36:48	endlesstars	if you know it at compile time hardcode it
2012-08-13 15:37:03	vskaddanki	I try to emulate functional languages having very little side effects
2012-08-13 15:38:10	-->	inkjetunito (~fsww@unaffiliated/inkjetunit) has joined ##c++
2012-08-13 15:38:12	<--	Dynad (NO@5ED192D8.cm-7-2c.dynamic.ziggo.nl) has quit (Quit: It's a dud! It's a dud! It's a du...)
2012-08-13 15:38:27	<--	Polenton (~Antonio@net-93-146-233-237.cust.dsl.teletu.it) has left ##c++
2012-08-13 15:38:45	<--	impulse150 (~impulse15@188.183.95.151) has quit (Quit: ihavenolegs)
2012-08-13 15:38:52	<--	phao (phao@177.146.137.231) has left ##c++ ("Not Here")
2012-08-13 15:38:52	-->	mritz (~textual@cpe-70-112-3-176.austin.res.rr.com) has joined ##c++
2012-08-13 15:39:00	-->	Dynad (NO@5ED192D8.cm-7-2c.dynamic.ziggo.nl) has joined ##c++
2012-08-13 15:39:19	<--	BadDesign (~quassel@2001:15c0:66a3:2:f000:d49:1b1f:d622) has quit (Remote host closed the connection)
2012-08-13 15:39:22	<--	em (~em@unaffiliated/emma) has quit (*.net *.split)
2012-08-13 15:39:22	<--	zamn (~zamn@unaffiliated/zamn) has quit (*.net *.split)
2012-08-13 15:39:22	<--	alan_w (~alan_w@216.57.96.2) has quit (*.net *.split)
2012-08-13 15:39:22	<--	drinkycrow (~whoreface@c-98-212-215-137.hsd1.in.comcast.net) has quit (*.net *.split)
2012-08-13 15:39:22	<--	xormor (~xormor@188-67-175-25.bb.dnainternet.fi) has quit (*.net *.split)
2012-08-13 15:39:22	<--	Chestal (~thilo@141.99.42.43) has quit (*.net *.split)
2012-08-13 15:39:22	<--	altin (~altin@flossk/altin) has quit (*.net *.split)
2012-08-13 15:39:22	<--	Yustme (~fasdfa@dhcp-089-098-055-230.chello.nl) has quit (*.net *.split)
2012-08-13 15:39:22	<--	Boffers (~Bofu2U@pool-108-3-191-153.bltmmd.fios.verizon.net) has quit (*.net *.split)
2012-08-13 15:39:22	<--	obs (~chatzilla@203.pool80-103-162.dynamic.orange.es) has quit (*.net *.split)
2012-08-13 15:39:22	<--	blast_hardcheese (~blast_har@unaffiliated/blast-hardcheese/x-0199635) has quit (*.net *.split)
2012-08-13 15:39:22	<--	k299 (~me@host-239.180-235-182.cable.dynamic.kbtelecom.net) has quit (*.net *.split)
2012-08-13 15:39:22	<--	sporous (~sporous@antispammeta/bot/irssi/sporous) has quit (*.net *.split)
2012-08-13 15:39:22	<--	iKlsR (~iKlsR@unaffiliated/iklsr) has quit (*.net *.split)
2012-08-13 15:39:22	<--	lskaglsd (~voackd@68.168.208.216) has quit (*.net *.split)
2012-08-13 15:39:22	<--	gerrrt (~gert@84-50-202-129-dsl.est.estpak.ee) has quit (*.net *.split)
2012-08-13 15:39:22	<--	megaTherion (~therion@unix.io) has quit (*.net *.split)
2012-08-13 15:39:22	<--	blackace (~blackace@gentoo/developer/blackace) has quit (*.net *.split)
2012-08-13 15:39:22	<--	pedantic_ (~pedantic@unaffiliated/pedantic) has quit (*.net *.split)
2012-08-13 15:39:22	<--	Lasher` (~szuckerm@eastgate.capsl.udel.edu) has quit (*.net *.split)
2012-08-13 15:39:22	<--	wu_lmao (~wu_lmao@unaffiliated/wu-lmao/x-9069391) has quit (*.net *.split)
2012-08-13 15:39:22	<--	arnabkd_ (~quassel@80.65.52.67) has quit (*.net *.split)
2012-08-13 15:39:22	<--	toothrot (~mux@unaffiliated/toothrot) has quit (*.net *.split)
2012-08-13 15:39:22	<--	jesuisuntorrent (~imatorren@c75.152.27-202.clta.globetrotter.net) has quit (*.net *.split)
2012-08-13 15:39:22	<--	TMinus36 (~TMinus36@pdpc/supporter/student/tminus36) has quit (*.net *.split)
2012-08-13 15:39:22	<--	Motig (~Motig@g90028.upc-g.chello.nl) has quit (*.net *.split)
2012-08-13 15:39:22	<--	Brownhead (~jsullivan@wsip-70-164-99-62.sd.sd.cox.net) has quit (*.net *.split)
2012-08-13 15:39:22	<--	ido_ (~ido@pdpc/supporter/student/ido) has quit (*.net *.split)
2012-08-13 15:39:22	<--	BlastHardcheese (chris@pdpc/supporter/active/blasthardcheese) has quit (*.net *.split)
2012-08-13 15:39:22	<--	z|Andy (zAndy@c-71-207-43-134.hsd1.pa.comcast.net) has quit (*.net *.split)
2012-08-13 15:39:22	<--	bolt (~r00t@unaffiliated/bolt) has quit (*.net *.split)
2012-08-13 15:39:22	<--	efjboss (~nova@kumo.kassala.de) has quit (*.net *.split)
2012-08-13 15:39:22	<--	daryl_ (daryl@dog.thdo.woaf.net) has quit (*.net *.split)
2012-08-13 15:39:22	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (*.net *.split)
2012-08-13 15:39:22	<--	Cr8 (apage43@crate.im) has quit (*.net *.split)
2012-08-13 15:39:22	<--	Tidus- (~Tidus@50.7.20.83) has quit (*.net *.split)
2012-08-13 15:39:22	<--	rangergord (~realer@modemcable186.198-70-69.static.videotron.ca) has quit (*.net *.split)
2012-08-13 15:39:37	-->	ido (~ido@pdpc/supporter/student/ido) has joined ##c++
2012-08-13 15:39:50	-->	sporous (~sporous@antispammeta/bot/irssi/sporous) has joined ##c++
2012-08-13 15:39:54	<--	interop_madness (~invalid@unaffiliated/interop-madness/x-8858653) has quit (Quit: Leaving)
2012-08-13 15:40:10	-->	izhak (~izhak@188.244.180.190) has joined ##c++
2012-08-13 15:40:32	<--	d3nys (~den@93-136-95-89.adsl.net.t-com.hr) has quit (Quit: Leaving)
2012-08-13 15:40:40	-->	r0bby (~wakawaka@guifications/user/r0bby) has joined ##c++
2012-08-13 15:40:47	-->	em (~em@unaffiliated/emma) has joined ##c++
2012-08-13 15:40:55	-->	megaTherion (~therion@unix.io) has joined ##c++
2012-08-13 15:41:18	-->	toothr (~mux@unaffiliated/toothrot) has joined ##c++
2012-08-13 15:41:21	<--	wbooze (~wbooze@xdsl-78-35-129-235.netcologne.de) has quit (Ping timeout: 276 seconds)
2012-08-13 15:41:52	-->	wbooze (~wbooze@xdsl-78-35-157-23.netcologne.de) has joined ##c++
2012-08-13 15:42:09	-->	infa1488 (~infa1488@host31-42-17-151.tvkdiana.pl) has joined ##c++
2012-08-13 15:42:12	-->	indian (~owned@2.107.12.211) has joined ##c++
2012-08-13 15:42:12	<--	indian (~owned@2.107.12.211) has quit (Changing host)
2012-08-13 15:42:12	-->	indian (~owned@unaffiliated/londonmet050) has joined ##c++
2012-08-13 15:42:32	<--	mritz (~textual@cpe-70-112-3-176.austin.res.rr.com) has quit (Client Quit)
2012-08-13 15:43:38	-->	Jannevaa (~jjvenala@gateway/shell/tkk.fi/session) has joined ##c++
2012-08-13 15:43:57	<--	robbyoconnor (~wakawaka@guifications/user/r0bby) has quit (Ping timeout: 276 seconds)
2012-08-13 15:44:45	<--	jewels (~alexz@host234-72-dynamic.55-82-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2012-08-13 15:44:55	endlesstars	virtual ~Atom(){}; i'm trying to force a virtual destructor to use dynamic_cast later
2012-08-13 15:44:59	-->	BlastHardcheese (chris@pool-108-38-205-87.lsanca.dsl-w.verizon.net) has joined ##c++
2012-08-13 15:44:59	-->	xormor (~xormor@188-67-175-25.bb.dnainternet.fi) has joined ##c++
2012-08-13 15:44:59	-->	zamn (~zamn@unaffiliated/zamn) has joined ##c++
2012-08-13 15:44:59	-->	alan_w (~alan_w@216.57.96.2) has joined ##c++
2012-08-13 15:44:59	-->	drinkycrow (~whoreface@c-98-212-215-137.hsd1.in.comcast.net) has joined ##c++
2012-08-13 15:44:59	-->	Chestal (~thilo@141.99.42.43) has joined ##c++
2012-08-13 15:44:59	-->	altin (~altin@flossk/altin) has joined ##c++
2012-08-13 15:44:59	-->	Yustme (~fasdfa@dhcp-089-098-055-230.chello.nl) has joined ##c++
2012-08-13 15:44:59	-->	Boffers (~Bofu2U@pool-108-3-191-153.bltmmd.fios.verizon.net) has joined ##c++
2012-08-13 15:44:59	-->	k299 (~me@host-239.180-235-182.cable.dynamic.kbtelecom.net) has joined ##c++
2012-08-13 15:44:59	-->	iKlsR (~iKlsR@unaffiliated/iklsr) has joined ##c++
2012-08-13 15:44:59	-->	lskaglsd (~voackd@68.168.208.216) has joined ##c++
2012-08-13 15:44:59	-->	gerrrt (~gert@84-50-202-129-dsl.est.estpak.ee) has joined ##c++
2012-08-13 15:44:59	-->	blackace (~blackace@gentoo/developer/blackace) has joined ##c++
2012-08-13 15:44:59	-->	pedantic_ (~pedantic@unaffiliated/pedantic) has joined ##c++
2012-08-13 15:44:59	-->	Lasher` (~szuckerm@eastgate.capsl.udel.edu) has joined ##c++
2012-08-13 15:44:59	-->	wu_lmao (~wu_lmao@unaffiliated/wu-lmao/x-9069391) has joined ##c++
2012-08-13 15:44:59	-->	arnabkd_ (~quassel@80.65.52.67) has joined ##c++
2012-08-13 15:44:59	-->	jesuisuntorrent (~imatorren@c75.152.27-202.clta.globetrotter.net) has joined ##c++
2012-08-13 15:44:59	-->	TMinus36 (~TMinus36@pdpc/supporter/student/tminus36) has joined ##c++
2012-08-13 15:44:59	-->	Motig (~Motig@g90028.upc-g.chello.nl) has joined ##c++
2012-08-13 15:44:59	-->	Brownhead (~jsullivan@wsip-70-164-99-62.sd.sd.cox.net) has joined ##c++
2012-08-13 15:44:59	-->	z|Andy (zAndy@c-71-207-43-134.hsd1.pa.comcast.net) has joined ##c++
2012-08-13 15:44:59	-->	bolt (~r00t@unaffiliated/bolt) has joined ##c++
2012-08-13 15:44:59	-->	efjboss (~nova@kumo.kassala.de) has joined ##c++
2012-08-13 15:44:59	-->	daryl_ (daryl@dog.thdo.woaf.net) has joined ##c++
2012-08-13 15:44:59	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2012-08-13 15:44:59	-->	Cr8 (apage43@crate.im) has joined ##c++
2012-08-13 15:44:59	-->	Tidus- (~Tidus@50.7.20.83) has joined ##c++
2012-08-13 15:44:59	-->	rangergord (~realer@modemcable186.198-70-69.static.videotron.ca) has joined ##c++
2012-08-13 15:45:00	endlesstars	but it complains
2012-08-13 15:45:12	<--	BlastHardcheese (chris@pool-108-38-205-87.lsanca.dsl-w.verizon.net) has quit (Max SendQ exceeded)
2012-08-13 15:45:14	endlesstars	error: expected ';' after class
2012-08-13 15:45:25	<--	Jannevaa (~jjvenala@gateway/shell/tkk.fi/session) has quit (Changing host)
2012-08-13 15:45:25	-->	Jannevaa (~jjvenala@gateway/shell/tkk.fi/x-bsjpvpcpifxnvmup) has joined ##c++
2012-08-13 15:45:37	-->	BlastHardcheese (chris@pdpc/supporter/active/blasthardcheese) has joined ##c++
2012-08-13 15:46:02	<--	Matthias|Laptop (~matthias@162.233-243-81.adsl-dyn.isp.belgacom.be) has quit
2012-08-13 15:46:13	mama	Did you put ';' after class definition?
2012-08-13 15:46:26	-->	Matthias|Laptop (~matthias@162.233-243-81.adsl-dyn.isp.belgacom.be) has joined ##c++
2012-08-13 15:47:03	endlesstars	my god, that was really stupid of me
2012-08-13 15:47:19	endlesstars	but why should it complain midway trough the class and not at the end of it?
2012-08-13 15:47:31	endlesstars	i have 4 other member function after that
2012-08-13 15:48:16	-->	wroos (~wroos@h-62-8.a259.priv.bahnhof.se) has joined ##c++
2012-08-13 15:48:25	-->	hauron_ (~hauron@dyn1197-105.wlan.ic.ac.uk) has joined ##c++
2012-08-13 15:48:36	bruce14	endlesstars: gcc?
2012-08-13 15:48:48	bruce14	or well, g++? :)
2012-08-13 15:49:45	-->	blast_hardcheese (~blast_har@unaffiliated/blast-hardcheese/x-0199635) has joined ##c++
2012-08-13 15:49:48	<--	jragon (~jragon@unaffiliated/jragon) has quit (Ping timeout: 276 seconds)
2012-08-13 15:49:59	-->	rgenito (~rgenito@75-146-137-162-WestFlorida.hfc.comcastbusiness.net) has joined ##c++
2012-08-13 15:50:36	<--	rgenito (~rgenito@75-146-137-162-WestFlorida.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2012-08-13 15:50:54	<--	hauron (~hauron@dyn1197-105.wlan.ic.ac.uk) has quit (Ping timeout: 248 seconds)
2012-08-13 15:51:01	-->	rgenito (~rgenito@static-71-100-91-34.tampfl.fios.verizon.net) has joined ##c++
2012-08-13 15:51:17	<--	mads- (~mar@nat.statsbiblioteket.dk) has quit (Quit: Leaving)
2012-08-13 15:52:15	-->	rurufufuss (~rurufufus@115-64-27-246.static.tpgi.com.au) has joined ##c++
2012-08-13 15:52:30	-->	iLogical (~iLogical@unaffiliated/ilogical) has joined ##c++
2012-08-13 15:52:31	-->	Felix91 (~Chatzilla@pdbn-5d826132.pool.mediaWays.net) has joined ##c++
2012-08-13 15:52:36	-->	impulse150 (~impulse15@port790.ds1-arc.adsl.cybercity.dk) has joined ##c++
2012-08-13 15:52:38	-->	StPiere (~daniel@HSI-KBW-095-208-138-238.hsi5.kabel-badenwuerttemberg.de) has joined ##c++
2012-08-13 15:52:49	<--	infa1488 (~infa1488@host31-42-17-151.tvkdiana.pl) has quit
2012-08-13 15:53:00	endlesstars	bruce14: clang++ 1.1
2012-08-13 15:53:16	<--	StPiere (~daniel@HSI-KBW-095-208-138-238.hsi5.kabel-badenwuerttemberg.de) has left ##c++
2012-08-13 15:54:04	--	hauron_ is now known as hauron
2012-08-13 15:54:07	bruce14	okay, it was worth a shot :)
2012-08-13 15:54:12	-->	FunnyLookinHat (~funnylook@ubuntu/member/funnylookinhat) has joined ##c++
2012-08-13 15:55:11	<--	inkjetunito (~fsww@unaffiliated/inkjetunit) has quit (Quit: qQ)
2012-08-13 15:55:40	-->	dzonder (ajc@62-121-73-12.home.aster.pl) has joined ##c++
2012-08-13 15:55:41	-->	oldtopman (~oldtopman@unaffiliated/oldtopman) has joined ##c++
2012-08-13 15:55:49	endlesstars	error: expected ';' in 'for' statement specifier     for(vector< vector< Expression<Ty> > >::iterator i = subexp.or_list.begin(), e = subexp.or_list.end();;)
2012-08-13 15:56:09	endlesstars	it wants a ; after ::iterator before the i
2012-08-13 15:56:20	endlesstars	am i declaring the local variable to the loop wrong?
2012-08-13 15:56:30	<--	ert3go (~ert3go@unaffiliated/ert3go) has quit (Quit: Leaving)
2012-08-13 15:56:47	-->	Rutix (~rutix@188-142-5-156.FTTH.ispfabriek.nl) has joined ##c++
2012-08-13 15:56:47	<--	Rutix (~rutix@188-142-5-156.FTTH.ispfabriek.nl) has quit (Changing host)
2012-08-13 15:56:47	-->	Rutix (~rutix@unaffiliated/rutix) has joined ##c++
2012-08-13 15:57:06	<--	an0xx (~an0xx@193.108.249.9) has quit (Read error: Connection reset by peer)
2012-08-13 15:57:43	<--	KoVadim (~Vadim@kostina.tenet.odessa.ua) has quit (Remote host closed the connection)
2012-08-13 15:58:42	-->	Bigbird (~quassel@122.234.10.90) has joined ##c++
2012-08-13 15:59:12	<--	Bigbird (~quassel@122.234.10.90) has left ##c++ ("http://quassel-irc.org - 随时随地畅谈。")
2012-08-13 15:59:14	-->	Synthead (~max@107.7.53.122) has joined ##c++
2012-08-13 16:00:24	-->	EvilPenguin (~EvilPengu@206.169.57.98) has joined ##c++
2012-08-13 16:01:11	-->	DarkPeak (~DarkPeak@host-2-102-9-181.as13285.net) has joined ##c++
2012-08-13 16:01:11	<--	DarkPeak (~DarkPeak@host-2-102-9-181.as13285.net) has quit (Changing host)
2012-08-13 16:01:11	-->	DarkPeak (~DarkPeak@unaffiliated/darkpeak) has joined ##c++
2012-08-13 16:01:29	Eelis	endlesstars: you probably need typename
2012-08-13 16:01:31	Eelis	!give endlesstars typename
2012-08-13 16:01:32	nolyc	endlesstars: See http://womble.decadentplace.org.uk/c++/template-faq.html#disambiguation for reasons to use the typename keyword
2012-08-13 16:02:00	-->	mritz (~mritz@97.65.251.170) has joined ##c++
2012-08-13 16:02:38	Eelis	vector< vector< Expression<Ty> > >::iterator could be either a type or a non-type, depending on what Ty is. because Ty is presumably a template parameter, that means it is unknown whether vector< vector< Expression<Ty> > >::iterator will be a type or a non-type upon instantiation, and it may be different for different Ty (because of specialization)
2012-08-13 16:02:49	Eelis	so if you don't tell it otherwise, C++ just assumes it's a non-type
2012-08-13 16:02:49	-->	infa1488 (~infa1488@host31-42-17-151.tvkdiana.pl) has joined ##c++
2012-08-13 16:03:02	Eelis	but then it doesn't make sense as a declaration of i anymore, hence the error
2012-08-13 16:03:22	<--	melba (~melba@unaffiliated/lazz0) has quit (Ping timeout: 245 seconds)
2012-08-13 16:03:25	Eelis	you need to assure C++ that vector< vector< Expression<Ty> > >::iterator will always be a typename for all instantiations that matter, by prepending "typename"
2012-08-13 16:04:09	Eelis	of course this is all hypothetical since nobody would make vector<X>::iterator a non-type for /any/ X, but C++ doesn't know that
2012-08-13 16:04:13	endlesstars	that sounds... reasonable
2012-08-13 16:04:19	endlesstars	thanks
2012-08-13 16:04:22	Eelis	np
2012-08-13 16:04:33	-->	ftruzzi (8f6ba57c@gateway/web/freenode/ip.143.107.165.124) has joined ##c++
2012-08-13 16:05:18	<--	gilead (~gilead@moorhouse.amphora-research.com) has quit (Quit: This computer has gone to sleep)
2012-08-13 16:05:23	-->	Mycotoxin (~Mycotoxin@dynamic-78-8-245-212.ssp.dialog.net.pl) has joined ##c++
2012-08-13 16:05:23	<--	Mycotoxin (~Mycotoxin@dynamic-78-8-245-212.ssp.dialog.net.pl) has quit (Client Quit)
2012-08-13 16:05:38	-->	Mycotoxin (~Mycotoxin@dynamic-78-8-245-212.ssp.dialog.net.pl) has joined ##c++
2012-08-13 16:05:38	<--	Mycotoxin (~Mycotoxin@dynamic-78-8-245-212.ssp.dialog.net.pl) has quit (Changing host)
2012-08-13 16:05:38	-->	Mycotoxin (~Mycotoxin@unaffiliated/mycotoxin) has joined ##c++
2012-08-13 16:05:49	-->	petrol91 (~petrol@178.183.249.0.dsl.dynamic.t-mobile.pl) has joined ##c++
2012-08-13 16:05:55	ftruzzi	I have a program that has some matrices, when using double there are no problem, but when I change it to long double several nans appears, any ideas?
2012-08-13 16:06:53	-->	alvesjnr (~alvesjnr@pcpavel.intec.ugent.be) has joined ##c++
2012-08-13 16:06:56	<--	Kn|t3 (~Kn|t3@2401:fa00:a:0:3c8e:69a2:b5de:df53) has quit (Remote host closed the connection)
2012-08-13 16:07:34	<--	setmeaway (oosool3@119.201.52.168) has quit (Quit: Leaving)
2012-08-13 16:07:36	-->	Cruel` (~thomas@2002:4c7a:6028:1234:55fb:eecc:8e1b:2e21) has joined ##c++
2012-08-13 16:07:54	wbooze	is your platform able to perform long double operations ?
2012-08-13 16:07:57	<--	trigger (~trigger@gateway/tor-sasl/trigger) has quit (Quit: leaving)
2012-08-13 16:07:58	-->	tjadc (~quassel@196-209-167-218.dynamic.isadsl.co.za) has joined ##c++
2012-08-13 16:08:03	wbooze	or does it truncate ?!
2012-08-13 16:08:34	-->	d3nys (~den@93-136-95-89.adsl.net.t-com.hr) has joined ##c++
2012-08-13 16:08:52	ftruzzi	wbooze: Its 64bit computer (intel quadcore)
2012-08-13 16:09:10	<--	hyperair (~hyperair@ubuntu/member/hyperair) has quit (Ping timeout: 260 seconds)
2012-08-13 16:09:14	ftruzzi	wbooze: some values are correct, some appears nan when it should be 0
2012-08-13 16:11:20	<--	pretty_function (~iHackiOS@61.12.96.10) has quit (Remote host closed the connection)
2012-08-13 16:11:59	-->	floe (~flo@f052101240.adsl.alicedsl.de) has joined ##c++
2012-08-13 16:12:56	-->	phao (phao@177.174.121.25) has joined ##c++
2012-08-13 16:13:50	wbooze	nan == not a number
2012-08-13 16:13:52	-->	armyriad (~armyriad@96.246.246.189) has joined ##c++
2012-08-13 16:13:54	wbooze	hmmm
2012-08-13 16:13:55	<--	snearch (~snearch@pD4B887CE.dip.t-dialin.net) has quit (Quit: Verlassend)
2012-08-13 16:14:07	<--	PigFlu (~herp@unaffiliated/pigflu) has quit (Quit: dthdrthdrth)
2012-08-13 16:14:50	endlesstars	if i have a template <typename Ty> ostream &operator<<(ostream &os, const SubExpression<Ty> &subexp) with a general definition for it, do i have to specialize it? because the linker asks for regexpcreator::operator<<(std::basic_ostream<char, std::char_traits<char> >&, regexpcreator::SubExpression<char> const&), even tough i tought it would generate itself
2012-08-13 16:15:25	-->	ratatata (~nu@88-222-70-216.meganet.lt) has joined ##c++
2012-08-13 16:15:34	-->	d4de (~olorin@41.129.73.89) has joined ##c++
2012-08-13 16:15:34	<--	d4de (~olorin@41.129.73.89) has quit (Changing host)
2012-08-13 16:15:35	-->	d4de (~olorin@unaffiliated/d4de) has joined ##c++
2012-08-13 16:15:48	ratatata	nu
2012-08-13 16:19:05	<--	Astus (John@unaffiliated/astus) has quit (Ping timeout: 246 seconds)
2012-08-13 16:20:20	<--	dzonder (ajc@62-121-73-12.home.aster.pl) has quit (Ping timeout: 252 seconds)
2012-08-13 16:20:41	<--	the_real_crimper (~crimper@cpe-98-154-91-166.socal.res.rr.com) has quit (Ping timeout: 265 seconds)
2012-08-13 16:20:54	<--	ineb (~ineb@flnb-5f7709f3.pool.mediaWays.net) has quit (Quit: leaving)
2012-08-13 16:21:30	-->	seldon (~seldon@gateway/tor-sasl/seldon) has joined ##c++
2012-08-13 16:22:12	<--	egr (~egr@2001:420:44ff:fd0e:acbe:dc1a:758:6734) has quit (Quit: Leaving)
2012-08-13 16:22:47	<--	nor5trom (~nor5trom@unaffiliated/nor5trom) has quit (Quit: 5ee ya.)
2012-08-13 16:22:57	-->	ineb (~ineb@flnb-5f7709f3.pool.mediaWays.net) has joined ##c++
2012-08-13 16:24:45	--	dinesh_ is now known as dinesh___
2012-08-13 16:25:26	-->	floe_ (~flo@e179007098.adsl.alicedsl.de) has joined ##c++
2012-08-13 16:26:12	<--	floe (~flo@f052101240.adsl.alicedsl.de) has quit (Ping timeout: 276 seconds)
2012-08-13 16:26:21	-->	dobby156 (~dobson@host90-152-3-218.ipv4.regusnet.com) has joined ##c++
2012-08-13 16:26:32	<--	narfnarfnarf (~irc@vpn-ch.sonova.com) has left ##c++
2012-08-13 16:26:45	<--	Vert (~quassel@vlan116.pact.srf.ac.uk) has quit (Read error: Connection reset by peer)
2012-08-13 16:27:02	-->	narfnarfnarf (~irc@vpn-ch.sonova.com) has joined ##c++
2012-08-13 16:27:03	<--	xilo (~xilo@32.97.110.56) has quit (Ping timeout: 252 seconds)
2012-08-13 16:27:37	<--	hz (~hz@unaffiliated/hz) has quit (Ping timeout: 272 seconds)
2012-08-13 16:27:45	<--	narfnarfnarf (~irc@vpn-ch.sonova.com) has left ##c++
2012-08-13 16:27:58	-->	obs (~chatzilla@203.pool80-103-162.dynamic.orange.es) has joined ##c++
2012-08-13 16:28:20	<--	rajkosto (~rajkosto@2001:470:d76b:bee2:e960:b64e:6e8b:5116) has quit (Ping timeout: 246 seconds)
2012-08-13 16:28:24	-->	ryonagana (~quassel@186.223.200.220) has joined ##c++
2012-08-13 16:28:37	-->	Pfargtl (~danf@93-172-161-224.bb.netvision.net.il) has joined ##c++
2012-08-13 16:28:55	<--	em (~em@unaffiliated/emma) has quit (Ping timeout: 244 seconds)
2012-08-13 16:29:34	-->	enkomax (~enkomax@96-41-10-230.dhcp.mtpk.ca.charter.com) has joined ##c++
2012-08-13 16:30:04	<--	suy (~modpow@113.Red-83-54-203.dynamicIP.rima-tde.net) has quit (Remote host closed the connection)
2012-08-13 16:30:14	<--	k299 (~me@host-239.180-235-182.cable.dynamic.kbtelecom.net) has quit
2012-08-13 16:30:21	-->	jinjonBoo (~sudo@89.180.15.104) has joined ##c++
2012-08-13 16:32:01	Oxyd	endlesstars: Is the definition visible at the point of instantiation? If not, the compiler has no way to generate it. In other words, the definition has to be in a header.
2012-08-13 16:32:10	<--	ftruzzi (8f6ba57c@gateway/web/freenode/ip.143.107.165.124) has quit (Quit: Page closed)
2012-08-13 16:32:33	endlesstars	the definition is in the same file, above the use
2012-08-13 16:33:04	endlesstars	in a C file i'd say it has visibility
2012-08-13 16:33:10	endlesstars	but i'm new to C++
2012-08-13 16:33:21	-->	ISF (~ivan@143.106.196.217) has joined ##c++
2012-08-13 16:33:54	endlesstars	also if i use operator << <char>(cout,s); it generates an horrible trace of errors
2012-08-13 16:34:14	-->	inkjetunito (~fsww@unaffiliated/inkjetunit) has joined ##c++
2012-08-13 16:34:59	Oxyd	Well, make a testcase.
2012-08-13 16:35:11	endlesstars	will do
2012-08-13 16:35:12	-->	johnp_80 (~johnp80@67-61-108-223.cpe.cableone.net) has joined ##c++
2012-08-13 16:35:57	<--	mike4_ (~mike4_@gateway/tor-sasl/mike4/x-38362156) has quit (Ping timeout: 276 seconds)
2012-08-13 16:36:08	endlesstars	is it better to paste in pastebin or use ideone? i'd prefer pastebin but if the channel has rules i'll comply
2012-08-13 16:36:30	-->	Zogatribe (Zogatribe@host81-141-119-240.wlms-broadband.com) has joined ##c++
2012-08-13 16:36:52	-->	Astus (~Astus@82.78.176.152) has joined ##c++
2012-08-13 16:36:53	<--	Astus (~Astus@82.78.176.152) has quit (Changing host)
2012-08-13 16:36:53	-->	Astus (~Astus@unaffiliated/astus) has joined ##c++
2012-08-13 16:37:00	teotwaki	endlesstars: what does the topic say?
2012-08-13 16:37:18	endlesstars	pastes ideone but someone suggested pastebin before
2012-08-13 16:37:22	endlesstars	so i asked
2012-08-13 16:37:36	<--	Vir (~mkretz@kde/mkretz) has quit (Quit: Konversation terminated!)
2012-08-13 16:37:41	teotwaki	"pastebin" is used as a generic term to say "just put some code online for everyone to see"
2012-08-13 16:37:46	Mycotoxin	the best is .png we can see more there than just a code
2012-08-13 16:38:52	endlesstars	http://ideone.com/4mQ9c
2012-08-13 16:39:26	endlesstars	the error here is much bigger than the one clang++ gives
2012-08-13 16:39:33	-->	fuun00b (~fuun00b@109.98.235.87) has joined ##c++
2012-08-13 16:39:39	<--	fuun00b (~fuun00b@109.98.235.87) has left ##c++
2012-08-13 16:39:46	<--	Element9 (~Element9@cable-178-148-175-186.dynamic.sbb.rs) has quit (Ping timeout: 244 seconds)
2012-08-13 16:39:52	teotwaki	!grab endlesstars
2012-08-13 16:39:53	nolyc	By your command.
2012-08-13 16:40:08	endlesstars	rexpcreator.cpp:(.text+0x544): undefined reference to `regexpcreator::operator<<(std::basic_ostream<char, std::char_traits<char> >&, regexpcreator::SubExpression<char> const&)'
2012-08-13 16:40:18	teotwaki	crap, I read that as "much better" instead of "much bigger".
2012-08-13 16:40:29	endlesstars	what does !grab do?
2012-08-13 16:40:54	teotwaki	it takes what you said and puts it in a quote database
2012-08-13 16:40:58	tworkin	!quote endlesstars
2012-08-13 16:40:58	nolyc	<endlesstars> the error here is much bigger than the one clang++ gives
2012-08-13 16:41:15	tworkin	!quote teotwaki
2012-08-13 16:41:16	Mycotoxin	!quote geordi
2012-08-13 16:41:18	nolyc	<geordi> Cannot exec a shared library directlyStreams pipe errorFile descriptor in bad stateBlock device requiredProtocol not supportedResource deadlock avoidedStreams pipe errorProtocol not availableProtocol driver not attachedIs a directoryTimer expiredFile too largeMessage too longBad font file formatOut of streams resourcesText file busyToo many levels
2012-08-13 16:41:29	teotwaki	!quote teotwaki_
2012-08-13 16:41:32	teotwaki	!quote teotwaki__
2012-08-13 16:41:35	teotwaki	oh well
2012-08-13 16:41:51	d3nys	endlesstars:  read this http://www.parashift.com/c++-faq-lite/template-friends.html
2012-08-13 16:42:13	-->	silverwind (~silverwin@oftn/member/systemfault) has joined ##c++
2012-08-13 16:43:13	endlesstars	wow d3nys , visibility it was probably
2012-08-13 16:43:37	-->	suy (~modpow@113.Red-83-54-203.dynamicIP.rima-tde.net) has joined ##c++
2012-08-13 16:43:53	-->	errormsg (~user@cA049BF51.dhcp.as2116.net) has joined ##c++
2012-08-13 16:43:56	d3nys	endlesstars: yes it is
2012-08-13 16:44:34	endlesstars	c++ is really badly incapsulated
2012-08-13 16:44:47	dobby156	endlesstars: how is it
2012-08-13 16:44:49	errormsg	endlesstars: what does that mean?
2012-08-13 16:44:52	dobby156	endlesstars: you don't have to use friend
2012-08-13 16:44:58	endlesstars	you can't really learn a little part of it
2012-08-13 16:44:59	-->	googol (~matthew@ip68-4-137-125.oc.oc.cox.net) has joined ##c++
2012-08-13 16:45:11	endlesstars	without learning lots about the rest
2012-08-13 16:45:23	dobby156	endlesstars: you mean C++ has a steep learning curve?
2012-08-13 16:45:25	errormsg	friend is kindof an emergency sollution. Not well planned
2012-08-13 16:45:28	tworkin	errormsg: i got c++ leaking into my pythonjjjjjjjjj D: D: D:
2012-08-13 16:45:34	dobby156	endlesstars: if so you are correct
2012-08-13 16:45:40	endlesstars	dobby156: i tought about using accessors but then every function would have access to the interiors
2012-08-13 16:45:42	<--	floe_ (~flo@e179007098.adsl.alicedsl.de) has quit (Ping timeout: 276 seconds)
2012-08-13 16:45:46	dobby156	endlesstars: and I would say that is a valid critism
2012-08-13 16:45:51	endlesstars	and i didn't want that
2012-08-13 16:46:03	dobby156	endlesstars: what
2012-08-13 16:46:27	endlesstars	i need friend to let the operator<< access the interiors
2012-08-13 16:46:31	<--	wobster (~jan@ls12nb9.cs.uni-dortmund.de) has quit (Ping timeout: 244 seconds)
2012-08-13 16:46:36	dobby156	endlesstars: no you don't
2012-08-13 16:46:39	endlesstars	and the external stream
2012-08-13 16:46:40	endlesstars	or so i read online
2012-08-13 16:46:53	endlesstars	it's not so much steep as large
2012-08-13 16:46:55	errormsg	could be a not-so-well implemented piece of code...
2012-08-13 16:47:05	dobby156	you can have a member funciton  something like   .stream_to(ostream)
2012-08-13 16:47:23	dobby156	endlesstars: which is called by op<<
2012-08-13 16:47:35	dobby156	endlesstars: but usuaully this is indicative you doing something wrong
2012-08-13 16:47:49	dobby156	endlesstars: op<< is supposed to seriailise the objects state
2012-08-13 16:48:08	-->	lellolelliloood (What@ip-88-220-145-191.isp.tvkg.net) has joined ##c++
2012-08-13 16:48:19	dobby156	endlesstars: the objects state should not include the implementation dependant variables you are try to encapulate
2012-08-13 16:48:34	dobby156	endlesstars: for example
2012-08-13 16:48:38	lellolelliloood	hi, is there any substitute to old "auto" keyword and does it makes sense to use it?
2012-08-13 16:48:40	dobby156	endlesstars: operator << on a std::string
2012-08-13 16:48:49	dobby156	endlesstars: doesn't serailise the buffer size
2012-08-13 16:49:00	dobby156	endlesstars: or the character width
2012-08-13 16:49:06	<--	dhruvasagar (~dhruvasag@122.172.230.166) has quit (Ping timeout: 244 seconds)
2012-08-13 16:49:16	dobby156	endlesstars: just the publically visable state
2012-08-13 16:49:33	endlesstars	if you look at the implementation SubExpression and Atom are elements of a regexp
2012-08-13 16:49:41	<--	googol (~matthew@ip68-4-137-125.oc.oc.cox.net) has quit (Ping timeout: 268 seconds)
2012-08-13 16:49:44	-->	studybot_ (~studybot_@117.7.68.58) has joined ##c++
2012-08-13 16:49:44	-->	scampbell (~scampbell@c-98-224-240-62.hsd1.mi.comcast.net) has joined ##c++
2012-08-13 16:49:49	dobby156	endlesstars: which regexp
2012-08-13 16:50:12	endlesstars	i'm using << to have a string representation of it
2012-08-13 16:50:28	dobby156	endlesstars: which implementaiton of regexp
2012-08-13 16:50:29	Oxyd	lellolelliloood: No and no.
2012-08-13 16:50:30	-->	em (~em@unaffiliated/emma) has joined ##c++
2012-08-13 16:50:38	-->	BabyGotBook (~rep@AntiLiberal-1-pt.tunnel.tserv9.chi1.ipv6.he.net) has joined ##c++
2012-08-13 16:50:46	endlesstars	the whole Subexpression represent a regexp like a(bc)*
2012-08-13 16:50:51	errormsg	memoryleaks in C++ is caused by bad code not by implementation defects
2012-08-13 16:50:52	<--	BabyGotBook (~rep@AntiLiberal-1-pt.tunnel.tserv9.chi1.ipv6.he.net) has left ##c++
2012-08-13 16:51:09		irc: disconnected from server
2012-08-13 16:52:34	-->	JohnHamelink (~JohnHamel@ks393762.kimsufi.com) has joined ##c++
2012-08-13 16:52:34	--	Topic for ##c++ is "ISO/IEC 14882:2011 (a.k.a. C++11) is PUBLISHED!!  || Can't speak? Identify to NickServ || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/ || other channels: ##c++-basic, ##c++-general, ##c++-social, ##iso-c++ || we don't do homework"
2012-08-13 16:52:34	--	Topic set by Eelis (~Eelis@unaffiliated/eelis) on Sat, 03 Sep 2011 19:59:56
2012-08-13 16:52:34	--	Nicks ##c++: [a111 ace2001ac acrocity Adran Adrinael aguai ahf aib|2 Aicasn_ akiress alamar alan_w alastair AlbireoX_ alderz alek_br Alice3 AllenJB_ Alt_of_Ctrl altin alvesjnr an0maly_ An_Ony_Moose anaconda Anasazi Andon andres ansiwen antto ApEk Apocalypse apparat appofice arcanis Areks argoneus armyriad arnabkd_ arnoldB aroga arossouw Arttu arun asakura ashfagg assertsmart|2 Astus atubbs average_drifter awx Azzkikr b_jonas badone baedert Bamieater BanderOS Bao base84 bastih bastii Baum Bavo bburhans Beket Belgarion0 Bigcheese Biolunar Bish blackace blag blast_hardcheese BlastHardcheese blenny blo Bloodust bloony BoAnd_ Bobman Boffers bolosaur bolt BombStrike bone bool_ BoomBox boris`` boxofrox bps brexel Brklyn_ Brownhead bruce14 bryno BSDBlack Burgundy Buzzykins bvs Bwild C00re CaffeCorretto caveat- cdash004 cdidd Cecen cfairles chalcedony CharlesDM CharlieM75 Chaser chayin chayin__ cheese1756 chenwj Chestal ChibaPet chrisbuchholz ciaranm cic cinalyc cl0ud clang classix clipon CodeDroid_ coeus coldpizza72i comawhite companion_cube computerghost coppro cortana2 cp133 Cr8 crib cribert- Criztian crl Cruel` cruxeternus cryptic curfont cut^e cwkx cyberspace- cYmen d-old d1zzy d3nys d4de Danio dansan darkc0met DarkPeak darkstarbyte_ daryl_ dau DavidChenware davv3 dbr Deadboys DeadSix27 Deathzor decltype DeeTah Defaultti demi` dfletcher_ dflurker_ dh Dicebot dijital1 dindinx dinesh___ dirtydawg djfm djinni`_ dk5 dobby156 Dobz Dolan_pls Domiiii doodle77 Dotti Drajwer Dreadnaught drinkycrow dropdrive dross drummer306 drumr dumont DustyDin1o du|dx dv_ dvoid_ Dweezahr Dynad edlinde Eelis efjboss Eleth elliottcable em endlesstars enkomax envi EPIK ericP ernini_ errormsg et euphoria eusto evelyette EvilPenguin explodus FabTG failingkid fasta felipe Felix91 fhd_ Flannel Fleck flux Forge_ forrestv FriarTech FriskyKat froggey Fuco funktronic FunnyLookinHat Fuuzetsu Fuxx gaten geeeek gemelen gencha Gentle geordi gerrrt gg7 gibberish glenfe glenfern Godslastering Gorroth graphitemaster graspee GrecKo Greg44 gregj Griswoldz Griwes gry gsvolt guest1239 Guest90058 guifre gusnan_ hackkitten HaltingState Hamled hannes3 hauron haxi hays HeatHawk heatxsink heiner_ heinrich5991 Helios hello2you2 Henke37 HerzogDeXtEr1 Hopkinz houmles hrnt hubbe3 hyperboreean i7c iceisfun ido iiyo iKlsR ikonia iLogical Immutable impulse150 incognito_ InCognitO` indian ineb infa1488 ingenious Ingmar inkjetunito int0x27h Internet13 ircnode0 Irishmanluke ironzorg isbric ISF ivan\ iZeR_ izhak j0hnsm1th j`ey jackarain|2 jakoch jamesn Jannevaa jantje Jarvis javierHund Jaxan jayne jem777 jessica_pp jesuisuntorrent jesyspa Jeuzz jhoepken jhunold jimster jinjonBoo jlen joel_falcou JohnHamelink johnp_80 jonaias JonathanD jonnyli1125 jott JPeterson jrdnn jrgill JSharpe_ julmuri- jweinberg K1rk K3|Chris KAHR-Alpha Kaltiz kalven KaneTW Kartagis Kartrohm Kasreyn kavakava kayo kchodorow Keshi keyvan Kicer86 KindOne klip kloeri klow Knio knittl KongoKong Krabbe kramer3d KrzaQ kszatan ktch ktos kuplatupsu kurti_ Kuukunen l2esonance ladder4 lahwran LAMMJohnson lanemeyer larks larles Lasher` lellolelliloood levi501d libertas lilalinux Lillia7 lilltiger LjL LNCP localhost loglaunch Lokomotiv LordCrc Lordofsraam loxley lpvb LRN lskaglsd ltxda luigy luki- Lycanthropist lyindArk_ M-ou-se m3thyl mac^ Maccer maddoc maddog_ madmoose makissy mama MaNI marga martiert Martin8412 Martty Matthias|Laptop Matthias|PC maw_ maxorator maxtors mdkess_ megaTherion mertsas mf_ mgaunard mgaunard_ mikalv_ mike_sun_ mikroflops Minoulefou mishehu MissionCritical mitch0 mitsuhiko MK` mlody moeSeth Mogget molgrum MoMo MonkeyMichael mOo morfin Mosu Motig mousetrap MrFahrenheit mrh2 mritz MrKronus mrmist mtrd` muep MulleDK19 mulvane Munnu muteki Mws Mycotoxin n00b101 n00b6502 Nach0z nahhh nahmaste naquad nauman navatwo neersighted nenolod Neo17 Neptu nero netmind netrino neunon neurodamage neurodrone Nibato` Nickeeh niczkx_ nierob Nightmare Nik05 nikoJ nilg NimeshNeema_ NinjaPenguin noj_ nojhan nolyc nots nrd ntrb ntx o] o^nd_ Obfuscate obs Obvious Octal_ ofan oldtopman Olipro omni5cience Oohm orbitz Orginator ormaaj ormandj Orphis OxDeadC0de Oxyd Ozm pa Palmik parcs` PARLIAMENT patson Patteh paullik pbor peanuter pedantic_ Pelish peper perolsen petrol91 petteyg Pfargtl pferdone pgas phao phax phe pheredhel phr phschwartz Pilate Pilum piotr pippijn piti pix1 pixelblur plasickoto Plee plouffe pmenon polysix Posterdati pragma- Praise primepie_ PSIONIK pucko_ pwned qknight Qub1t r0bby radiofree rangergord Rapp ratatata RazielZ rcj_ rcxdude rdpate redec reffle reko_t rendar RePaste_ Repentinus retornam rexou rgb247 rgenito rhl rhodesd rhythmx richardwhiuk ricky26 riotz Rix rizzle rndbit robink roflin rogues roivas RokerHRO roland_ Rolz ross` rstrong ruediger rurufufuss rush2end Rutix rvchangue ryanakca ryonagana s0und saati SaBer Sachiru sacrebleu SAHChandler Sairon sam samek samii SanguineAnomaly Sausage savenger scai scampbell scharan Schoentoon schroedinbug Scorchin Scub SecretAgent seldon semeion Seppoz Sergonium SeriousJack SeySayux sh4wn shades shintah Shuba Silex silverwind SimonP86 sirdancealot7 SixtyFold Skywing SlashLife sleepee slummer smellynosery smokex Snaker snarkyboojum SNiLD snkl snuggl Soap__ Soci3ty sohail solarised solrize SorcererX sorressean soulcake Spark spb sphenxes sporous spq SpX sShintah Starfire SteelBanana stepnem stfn straterra stratomarco Stryyker studybot_ stuntmachine subanark sudokode SugarCube suiside sujeet sunfun suppahsrv suy Sweet-P sweet_kid symm- synapt Synthead syo syslock systemfault tayne tazle teotwaki Terminus- termos tgs3 thalassarche The_CooIest TheBeerinator TheFuzzball thelamb TheNull thore Thorn Tidus- Tiffy Timbo TinoDidriksen tjadc tk_ TMAnders1on TMinus36 TMM tmyklebu toddpratt Toes_ tomaw TomyLobo toothr torsan trapni trey trigen Trin ttvd tuxdev Twey tworkin tzarc TzilTzal Ububegin unreal_ urlgrabber UukGoblin V-ille vchang vdv vektor VeXocide ville Vinnie_win vjn voidcoder vsayer vskaddanki VvV_ walmis wbooze wd40s weeb1e_ WhatThePfargtl Wiz126 woggle wolfbyte wordToDaBird WormDrink wormphlegm wroos wting wu_lmao wuj xandy xantores xConMz Xethron xiliax xiphiasx_ xissburg Xjs|moonshine xnavor xormor xxtjaxx Y_Ichiro Y_Less yan_ ybit yeltzooo7 yorick Younos yroeht Yustme zamn zeleni_zub Zharf Zogatribe Zol ZsoL zyphex Zyrkon zyrtech zzing_ z|Andy]
2012-08-13 16:52:34	--	Channel ##c++: 793 nicks (0 ops, 0 halfops, 0 voices, 793 normals)
2012-08-13 16:52:36	Oxyd	It's a legacy probably from the days of BCPL or something.
2012-08-13 16:52:37	endlesstars	it's a project to tackle the steep learning curve
2012-08-13 16:52:50	dobby156	endlesstars: right oh
2012-08-13 16:52:50	--	Mode ##c++ [+CPcflnpt #overflow 850]
2012-08-13 16:52:50	--	Channel created on Sat, 15 Sep 2001 04:15:35
2012-08-13 16:52:59	endlesstars	it's not really usefol, given a regexp with | * and epsilon it generates a random string that matches it
2012-08-13 16:53:00	dobby156	endlesstars: because you know C++ has a regex library built in right
2012-08-13 16:53:13	endlesstars	yes but i need the other way around
2012-08-13 16:53:17	endlesstars	and i couldn't find it
2012-08-13 16:53:30	-->	julmuri (~kamazharr@b881.ip15.netikka.fi) has joined ##c++
2012-08-13 16:53:31	endlesstars	i need a string from a regexp, not a match from a string
2012-08-13 16:53:57	-->	pTrebor (~chatzilla@mail.inlightentertainment.com) has joined ##c++
2012-08-13 16:54:12	endlesstars	i've found something along that lines in perl, but they dind't support groups ( like (abc)*)
2012-08-13 16:54:31	<--	haxi (~anonycul@lan31-1-81-56-82-105.fbx.proxad.net) has quit (Ping timeout: 265 seconds)
2012-08-13 16:54:45	<--	lellolelliloood (What@ip-88-220-145-191.isp.tvkg.net) has left ##c++ ("I'm flying away, leaving thunderstorm behind")
2012-08-13 16:55:14	<--	ineb (~ineb@flnb-5f7709f3.pool.mediaWays.net) has quit (Ping timeout: 268 seconds)
2012-08-13 16:55:23	errormsg	Isn't this off-topic?
2012-08-13 16:55:46	errormsg	!Topic
2012-08-13 16:55:47	nolyc	Welcome to ##c++. This channel is for the discussion of standard C++, including potential and future standardizations. This channel is NOT for discussion of: development platforms (OSes and other tools not directly related to C++), non-standard libraries, programs written in C++, other programming languages, a/s/l, or anything else that isn't C++.
2012-08-13 16:55:50	<--	Criztian (~criztian@89-96-175-137.ip13.fastwebnet.it) has quit (Remote host closed the connection)
2012-08-13 16:56:08	-->	Gentlecat (~Roman@79.105.216.244) has joined ##c++
2012-08-13 16:57:07	<--	julmuri- (~kamazharr@b881.ip15.netikka.fi) has quit (Ping timeout: 240 seconds)
2012-08-13 16:57:35	<--	em (~em@unaffiliated/emma) has quit (Ping timeout: 260 seconds)
2012-08-13 16:57:42	<--	neurodrone (~neurodron@unaffiliated/neurodrone) has quit (Ping timeout: 268 seconds)
2012-08-13 16:58:16	-->	em (~em@unaffiliated/emma) has joined ##c++
2012-08-13 17:00:12	-->	yamamushi (~yamamushi@cpe-66-68-186-252.austin.res.rr.com) has joined ##c++
2012-08-13 17:00:26	<--	cfairles (~cfairles@216.16.242.198) has quit (Quit: Leaving)
2012-08-13 17:01:25	<--	rogues (~rogues@183.83.82.7) has quit (Ping timeout: 248 seconds)
2012-08-13 17:02:09	-->	orafu (~od@opensuse/member/odabrunz) has joined ##c++
2012-08-13 17:02:22	<--	stuntmachine (~textual@apo.aweber.com) has quit (Quit: Computer has gone to sleep.)
2012-08-13 17:02:39	-->	cfairles (~cfairles@216.16.242.198) has joined ##c++
2012-08-13 17:03:45	-->	Jesdisciple (~Jesdiscip@64-132-236-106.static.twtelecom.net) has joined ##c++
2012-08-13 17:04:28	-->	Jeaye (~jeaye@rrcs-208-105-169-77.nys.biz.rr.com) has joined ##c++
2012-08-13 17:06:04	<--	yamamushi (~yamamushi@cpe-66-68-186-252.austin.res.rr.com) has quit (Quit: If it moves, compile it!)
2012-08-13 17:07:09	<--	Pelish (~Pelish@unaffiliated/pelish) has quit (Ping timeout: 244 seconds)
2012-08-13 17:07:32	<--	BoomBox (~BoomBox@unaffiliated/boombox) has quit (Ping timeout: 245 seconds)
2012-08-13 17:08:51	-->	vsrao (~quassel@unaffiliated/vsrao) has joined ##c++
2012-08-13 17:09:12	<--	nojhan (~nojhan@pdpc/supporter/active/nojhan) has quit (Quit: Ex-Chat)
2012-08-13 17:09:13	<--	em (~em@unaffiliated/emma) has quit (Ping timeout: 244 seconds)
2012-08-13 17:10:18	-->	BoomBox (~BoomBox@unaffiliated/boombox) has joined ##c++
2012-08-13 17:10:38	-->	fragment (~fragment@chiku.silverwraith.com) has joined ##c++
2012-08-13 17:10:50	<--	fragment (~fragment@chiku.silverwraith.com) has left ##c++
2012-08-13 17:11:26	-->	PigFlu (~herp@80.202.23.248) has joined ##c++
2012-08-13 17:11:26	<--	PigFlu (~herp@80.202.23.248) has quit (Changing host)
2012-08-13 17:11:26	-->	PigFlu (~herp@unaffiliated/pigflu) has joined ##c++
2012-08-13 17:12:21	<--	kayo (~kayo@opensuse/member/kayohf) has quit (Ping timeout: 276 seconds)
2012-08-13 17:13:17	<--	alvesjnr (~alvesjnr@pcpavel.intec.ugent.be) has left ##c++ ("Nothing to do here...")
2012-08-13 17:13:46	-->	damir__ (~damir@tm.213.143.72.147.lc.telemach.net) has joined ##c++
2012-08-13 17:14:50	-->	rogues (~rogues@183.83.89.155) has joined ##c++
2012-08-13 17:14:53	<--	Dobz (~nHrXwwIG2@unaffiliated/dobz) has quit (Quit: Leaving)
2012-08-13 17:16:19	-->	Willy (~gwilly@ppp-110-137.29-151.libero.it) has joined ##c++
2012-08-13 17:17:22	-->	Kal` (~Kalessin@87-194-239-244.bethere.co.uk) has joined ##c++
2012-08-13 17:17:46	<--	mike_sun_ (~quassel@189.27.163.164.dynamic.adsl.gvt.net.br) has quit (Remote host closed the connection)
2012-08-13 17:18:15	-->	pedro_angelo (~pedro_ang@186-241-158-93.user.veloxzone.com.br) has joined ##c++
2012-08-13 17:18:25	-->	cjdavies (~cj@cjdavies.org) has joined ##c++
2012-08-13 17:18:27	<--	libertas (1200@60.215.189.46.rev.vodafone.pt) has quit (Ping timeout: 240 seconds)
2012-08-13 17:18:29	<--	cjdavies (~cj@cjdavies.org) has left ##c++
2012-08-13 17:18:37	-->	symm-_ (~symm-@178.168.29.31) has joined ##c++
2012-08-13 17:19:04	-->	klocatelli (~irc@adsl-75-30-115-40.dsl.pltn13.sbcglobal.net) has joined ##c++
2012-08-13 17:19:17	-->	wobster (~wobster@dslb-188-100-070-044.pools.arcor-ip.net) has joined ##c++
2012-08-13 17:20:09	<--	impulse150 (~impulse15@port790.ds1-arc.adsl.cybercity.dk) has quit (Quit: ihavenolegs)
2012-08-13 17:20:48	-->	Sven_Shady (~quassel@p548935CF.dip.t-dialin.net) has joined ##c++
2012-08-13 17:20:57	<--	studybot_ (~studybot_@117.7.68.58) has quit (Quit: Leaving...)
2012-08-13 17:21:05	-->	hoerup (~hoerup@90.185.226.118) has joined ##c++
2012-08-13 17:21:17	<--	DarkPeak (~DarkPeak@unaffiliated/darkpeak) has left ##c++ ("Leaving")
2012-08-13 17:24:14	<--	heiner_ (~heiner@p4FC4D6DC.dip.t-dialin.net) has quit (Remote host closed the connection)
2012-08-13 17:25:27	<--	smellynosery (~ashley@87-194-181-33.bethere.co.uk) has quit (Quit: Leaving)
2012-08-13 17:27:38	-->	Raistl|n (~chrisjenk@c-67-176-100-115.hsd1.co.comcast.net) has joined ##c++
2012-08-13 17:27:57	<--	xormor (~xormor@188-67-175-25.bb.dnainternet.fi) has quit (Quit: Lähdössä)
2012-08-13 17:28:52	<--	voidcoder (~androirc@82-171-102-39.ip.telfort.nl) has quit (Remote host closed the connection)
2012-08-13 17:29:03	-->	shurnor (~quassel@98.red-80-29-7.adsl.static.ccgg.telefonica.net) has joined ##c++
2012-08-13 17:29:05	-->	alek_br_ (~alek_br@cpe-76-88-36-3.san.res.rr.com) has joined ##c++
2012-08-13 17:29:38	-->	voidcoder (~androirc@82-171-102-39.ip.telfort.nl) has joined ##c++
2012-08-13 17:30:29	<--	voidcoder (~androirc@82-171-102-39.ip.telfort.nl) has quit (Client Quit)
2012-08-13 17:30:40	<--	dobby156 (~dobson@host90-152-3-218.ipv4.regusnet.com) has quit (Quit: leaving)
2012-08-13 17:30:50	-->	voidcoder (~androirc@82-171-102-39.ip.telfort.nl) has joined ##c++
2012-08-13 17:30:50	<--	alek_br (~alek_br@cpe-76-88-36-3.san.res.rr.com) has quit (Ping timeout: 260 seconds)
2012-08-13 17:30:52	<--	indian (~owned@unaffiliated/londonmet050) has quit (Ping timeout: 245 seconds)
2012-08-13 17:30:58	<--	joel_falcou (~joel_falc@gov91-4-83-152-215-118.fbx.proxad.net) has quit (Ping timeout: 245 seconds)
2012-08-13 17:31:10	-->	dispy (~dispy@lbck-4d060587.pool.mediaWays.net) has joined ##c++
2012-08-13 17:31:14	dispy	Hi
2012-08-13 17:31:32	-->	diverdude (~bdi@1709ds1-vbr.0.fullrate.dk) has joined ##c++
2012-08-13 17:31:32	dispy	http://pastebin.com/nvUQSCgQ << why does he output 22 the first time, -18 in the second? I'M unable to get a clue :X
2012-08-13 17:31:37	RePaste_	dispy: The paste nvUQSCgQ has been moved to http://ideone.com/KPQFF (see http://tinyurl.com/yv88ul for why)
2012-08-13 17:32:07	-->	floe_ (~flo@e179009102.adsl.alicedsl.de) has joined ##c++
2012-08-13 17:32:20	-->	Kulrak (~101001101@tlug/member/kulrak) has joined ##c++
2012-08-13 17:33:07	<--	Dreadnaught (~101001101@tlug/member/kulrak) has quit (Ping timeout: 260 seconds)
2012-08-13 17:33:11	diverdude	are there some recommended cheatsheet for autotools and makefiles?
2012-08-13 17:34:23	-->	maelytm (42570416@gateway/web/freenode/ip.66.87.4.22) has joined ##c++
2012-08-13 17:34:26	<--	NimeshNeema_ (u2689@gateway/web/irccloud.com/x-fhnaqxjwgyeylsxn) has quit
2012-08-13 17:34:33	--	maelytm is now known as maelym
2012-08-13 17:35:36	-->	NimeshNeema (u2689@gateway/web/irccloud.com/x-tsqxguoftmyljxor) has joined ##c++
2012-08-13 17:35:45	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2012-08-13 17:35:54	<--	Matthias|Laptop (~matthias@162.233-243-81.adsl-dyn.isp.belgacom.be) has quit
2012-08-13 17:36:12	-->	manel2020 (~manel2020@44.158.165.83.dynamic.mundo-r.com) has joined ##c++
2012-08-13 17:37:02	-->	joel_falcou (~joel_falc@gov91-4-83-152-215-118.fbx.proxad.net) has joined ##c++
2012-08-13 17:38:47	<--	Matthias|PC (~Matthias@162.233-243-81.adsl-dyn.isp.belgacom.be) has quit (Ping timeout: 240 seconds)
2012-08-13 17:38:57	-->	wilx (wilx@242.91.broadband5.iol.cz) has joined ##c++
2012-08-13 17:39:07	-->	ZoB (Dan@DanIRC.net) has joined ##c++
2012-08-13 17:39:15	-->	hrehf (~s@p4FE390DD.dip.t-dialin.net) has joined ##c++
2012-08-13 17:39:39	<--	Kulrak (~101001101@tlug/member/kulrak) has quit (Ping timeout: 260 seconds)
2012-08-13 17:40:01	-->	silverwolf (~silverwol@216.51.42.66) has joined ##c++
2012-08-13 17:40:19	-->	heiner (~heiner@p4FC4D6DC.dip.t-dialin.net) has joined ##c++
2012-08-13 17:40:56	-->	four33 (~four33@75.98.196.98) has joined ##c++
2012-08-13 17:41:10	-->	Kulrak (~101001101@tlug/member/kulrak) has joined ##c++
2012-08-13 17:41:10	-->	ShishKabab (~vincent@195.191.202.173) has joined ##c++
2012-08-13 17:41:52	tworkin	http://ideone.com/9Ibou this is in a header... why am I getting undefined reference to ImageTraits<u16>::PixelDepth in a TU that includes that header?
2012-08-13 17:42:20	<--	d3nys (~den@93-136-95-89.adsl.net.t-com.hr) has quit (Quit: Leaving)
2012-08-13 17:42:34	<--	Sachiru (~Sachiru@120.29.81.121) has quit (Quit: Shutting Down)
2012-08-13 17:42:43	tworkin	do you still need a line for `const size_t ImageTraits<u16>::PixelDepth = 16;` even for a static const?
2012-08-13 17:42:45	-->	hyperair (~hyperair@ubuntu/member/hyperair) has joined ##c++
2012-08-13 17:44:02	seldon	I don't think so; this should work. Old compiler?
2012-08-13 17:44:16	tworkin	gcc 4.6
2012-08-13 17:44:30	seldon	That should be well recent enough. Hm.
2012-08-13 17:44:44	tworkin	porting from vc10 which was happy with the struct definition
2012-08-13 17:45:34	seldon	You're not taking the address of it or anything?
2012-08-13 17:46:03	tworkin	nope
2012-08-13 17:46:24	seldon	Huh. Well, there's always the enum trick, but as far as I can tell, this should work.
2012-08-13 17:46:24	<--	o] (~achubergs@c-98-232-27-17.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2012-08-13 17:46:30	-->	drumr7 (~drumr@adsl-64-217-217-240.dsl.rcsntx.swbell.net) has joined ##c++
2012-08-13 17:46:34	<--	drumr (~drumr@adsl-64-217-217-240.dsl.rcsntx.swbell.net) has quit (Read error: Connection reset by peer)
2012-08-13 17:46:37	-->	General1337 (~General13@71-93-97-115.dhcp.mtpk.ca.charter.com) has joined ##c++
2012-08-13 17:47:06	seldon	enum { PixelDepth = 16; }; instead of static const size_t PixelDepth = 16; <-- even the oldest compilers should eat that.
2012-08-13 17:47:23	seldon	PixelDepth will be of type int, though.
2012-08-13 17:47:27	-->	o] (~achubergs@c-98-232-27-17.hsd1.wa.comcast.net) has joined ##c++
2012-08-13 17:47:56	-->	bluecode (~bluecode@p508F765A.dip.t-dialin.net) has joined ##c++
2012-08-13 17:51:23	<--	jonaias (~jonaias@187.66.184.89) has quit (Ping timeout: 245 seconds)
2012-08-13 17:52:17	-->	nocture (~nocture@3e6b4b9d.rev.stofanet.dk) has joined ##c++
2012-08-13 17:52:21	<--	Mycotoxin (~Mycotoxin@unaffiliated/mycotoxin) has quit (Ping timeout: 246 seconds)
2012-08-13 17:52:29	-->	Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
2012-08-13 17:53:24	dispy	did I misphrase my question? :X
2012-08-13 17:54:11	seldon	dispy: The parameter "list" in your constructor hides the member of the same name. Thus iter is not initialised with an iterator from the right string, and you get UB after the temporary is gone.
2012-08-13 17:54:22	-->	CMoH (~cipi@78.96.83.205) has joined ##c++
2012-08-13 17:54:23	<--	CMoH (~cipi@78.96.83.205) has quit (Changing host)
2012-08-13 17:54:23	-->	CMoH (~cipi@unaffiliated/c-moh) has joined ##c++
2012-08-13 17:54:53	tworkin	seldon: I moved the initializations to a cpp, a la `const size_t ImageTraits<double>::PixelDepth = 64;`. luckily this isnt aiming to be a header only library. rather still have everything a size_t
2012-08-13 17:55:00	-->	julmuri- (~kamazharr@b881.ip15.netikka.fi) has joined ##c++
2012-08-13 17:55:17	dispy	seldon: so what does iter(iter) exactly do?
2012-08-13 17:55:37	-->	thelazydeveloper (~lazydevel@unaffiliated/thelazydeveloper) has joined ##c++
2012-08-13 17:55:37	<--	thelazydeveloper (~lazydevel@unaffiliated/thelazydeveloper) has quit (Remote host closed the connection)
2012-08-13 17:55:50	seldon	That is not in your code.
2012-08-13 17:56:01	seldon	What you do have is iter(list.begin()), and the list you want it to be there is not the list it really is.
2012-08-13 17:56:22	<--	obs (~chatzilla@203.pool80-103-162.dynamic.orange.es) has quit (Quit: ChatZilla 0.9.87 [Iceape 2.7.5/20120608075204])
2012-08-13 17:56:36	dispy	ah OK I got it. Thank you very much :)
2012-08-13 17:56:38	-->	thelazydeveloper (~lazydevel@unaffiliated/thelazydeveloper) has joined ##c++
2012-08-13 17:56:53	<--	jinjonBoo (~sudo@89.180.15.104) has quit (Quit: Leaving)
2012-08-13 17:58:00	-->	Matthias|PC (~matthias@162.233-243-81.adsl-dyn.isp.belgacom.be) has joined ##c++
2012-08-13 17:58:07	dispy	seldon: is there any way how I can tell gcc to slap me in the face if he sees something like that?
2012-08-13 17:58:47	<--	ISF (~ivan@143.106.196.217) has quit (Ping timeout: 240 seconds)
2012-08-13 17:58:51	<--	julmuri (~kamazharr@b881.ip15.netikka.fi) has quit (Ping timeout: 244 seconds)
2012-08-13 17:59:15	<--	pedro_angelo (~pedro_ang@186-241-158-93.user.veloxzone.com.br) has quit (Remote host closed the connection)
2012-08-13 17:59:18	-->	Tyrfing (~SaschaMue@p508A3538.dip.t-dialin.net) has joined ##c++
2012-08-13 18:00:25	-->	impulse150 (~impulse15@port790.ds1-arc.adsl.cybercity.dk) has joined ##c++
2012-08-13 18:01:35	-->	Sarajev[o] (~Sarajevo@gateway/tor-sasl/sarajevo) has joined ##c++
2012-08-13 18:01:41	<--	maelym (42570416@gateway/web/freenode/ip.66.87.4.22) has quit (Ping timeout: 245 seconds)
2012-08-13 18:01:43	Sarajev[o]	I'm studying C++ for the first time
2012-08-13 18:01:57	<--	manel2020 (~manel2020@44.158.165.83.dynamic.mundo-r.com) has quit (Remote host closed the connection)
2012-08-13 18:02:00	Sarajev[o]	I know some C, but C++ floods my brain with so many things really
2012-08-13 18:02:14	<--	Astus (~Astus@unaffiliated/astus) has quit (Quit: Leaving)
2012-08-13 18:02:17	Sarajev[o]	constructors, destructors, templates, friend functions, operator overriding, all that stuff
2012-08-13 18:02:45	Sarajev[o]	It's gonna take me more time than I thought, thankfully I woke up a few hours ago, so I might learn it by the end of this day
2012-08-13 18:02:57	hauron	nice
2012-08-13 18:02:59	seldon	dispy: check the manpage for -fmudflap -lmudflap
2012-08-13 18:03:17	ville	Sarajev[o]: sounds like a really plausible plan.
2012-08-13 18:03:24	-->	Salonce (~Salonce@gateway/tor-sasl/salonce) has joined ##c++
2012-08-13 18:03:50	hauron	Sarajev[o], it's only monday today, perhaps java perl and python by friday? afterwards
2012-08-13 18:04:36	<--	Seppoz (~Invincibl@unaffiliated/seppoz) has quit (Ping timeout: 265 seconds)
2012-08-13 18:04:39	seldon	Heh. You fell for one of those "in 21 days" books, didn't you?
2012-08-13 18:06:01	Sarajev[o]	no, I didn't, but I don't find this particulary hard, there are just too many things I have to keep in mind
2012-08-13 18:06:06	Sarajev[o]	after C, this looks like a joke really
2012-08-13 18:06:17	Sarajev[o]	bunch of class-related stuff
2012-08-13 18:06:20	Sarajev[o]	no big deal
2012-08-13 18:06:29	ville	Sarajev[o]: you've a really good handle on things.
2012-08-13 18:06:34	seldon	Spoken like a true beginner.
2012-08-13 18:06:57	<--	paullik (~paullik@unaffiliated/paullik) has quit (Ping timeout: 276 seconds)
2012-08-13 18:07:35	Sarajev[o]	it doesn't bother me much, I don't have any plans to move on C++, I study it mostly because I want to gain basic understanding of OOP prog. language and because I'm having C++ exams soon
2012-08-13 18:07:43	Sarajev[o]	I am all chilled out when it comes to C++
2012-08-13 18:07:44	joel_falcou	hem
2012-08-13 18:07:46	Sarajev[o]	and you know what guys
2012-08-13 18:07:49	joel_falcou	C++ is not kosher OOP languages
2012-08-13 18:07:50	Sarajev[o]	you gonna help me.
2012-08-13 18:07:53	Sarajev[o]	thank you.
2012-08-13 18:08:16	-->	pedro_angelo (~pedro_ang@186-241-158-93.user.veloxzone.com.br) has joined ##c++
2012-08-13 18:08:29	joel_falcou	C++ is a multiparadigm language
2012-08-13 18:08:34	joel_falcou	its interpretation of OOP is lenient
2012-08-13 18:08:38	Sarajev[o]	I'm listening
2012-08-13 18:08:42	-->	mike4_ (~mike4_@gateway/tor-sasl/mike4/x-38362156) has joined ##c++
2012-08-13 18:08:43	Sarajev[o]	okay.
2012-08-13 18:08:47	<--	sohail (~sohail@unaffiliated/sohail) has quit (Ping timeout: 240 seconds)
2012-08-13 18:08:48	joel_falcou	so betetr learn OOP aside
2012-08-13 18:08:52	joel_falcou	without langauges tethers
2012-08-13 18:08:57	joel_falcou	then apply it to some languages
2012-08-13 18:08:57	Sarajev[o]	what's all that fuss about 'this' pointer
2012-08-13 18:09:00	Sarajev[o]	what is it used mostly
2012-08-13 18:09:05	Sarajev[o]	for*
2012-08-13 18:09:09	joel_falcou	this point to current obejct inside method
2012-08-13 18:09:16	Sarajev[o]	okay, thanks.
2012-08-13 18:09:19	Zogatribe	!give joel_falcou method
2012-08-13 18:09:21	nolyc	joel_falcou: The term `method' is not well-defined in C++. Did you mean to imply a function that is a member? Or one that is non-static? Or one that is virtual? Or one that is pure? To avoid misunderstandings, prefer standardized terminology: instead of `method' say `function' prefixed with those specifiers that are relevant.
2012-08-13 18:09:23	-->	Dreadnaught (~101001101@122.150.59.126) has joined ##c++
2012-08-13 18:09:23	<--	Dreadnaught (~101001101@122.150.59.126) has quit (Changing host)
2012-08-13 18:09:23	-->	Dreadnaught (~101001101@tlug/member/kulrak) has joined ##c++
2012-08-13 18:09:31	joel_falcou	Zogatribe sorry, method is a frenchism
2012-08-13 18:09:36	<--	MissionCritical (~MissionCr@unaffiliated/missioncritical) has quit (Ping timeout: 252 seconds)
2012-08-13 18:09:37	joel_falcou	ofc member function is better
2012-08-13 18:09:50	Zogatribe	method is not a frenchism
2012-08-13 18:09:55	Zogatribe	method is used in OOP circles
2012-08-13 18:10:12	<--	Kulrak (~101001101@tlug/member/kulrak) has quit (Ping timeout: 276 seconds)
2012-08-13 18:10:14	<--	Salonce (~Salonce@gateway/tor-sasl/salonce) has quit (Quit: Lost terminal)
2012-08-13 18:10:30	<--	scharan (~scharan@169.235.25.47) has quit (Quit: WeeChat 0.3.7)
2012-08-13 18:10:35	joel_falcou	Zogatribe i mean that in France everybody use method
2012-08-13 18:10:39	joel_falcou	even if it' snot correct
2012-08-13 18:10:39	-->	Collin_ (~Collin@206.214.33.242) has joined ##c++
2012-08-13 18:10:43	joel_falcou	and my reflex showed up
2012-08-13 18:10:56	Zogatribe	you speak for everyone in France? impressive.
2012-08-13 18:11:00	joel_falcou	na
2012-08-13 18:11:14	joel_falcou	i am french and i suffered the terrible C++ teachign over there when i was younger
2012-08-13 18:11:23	joel_falcou	consider this slip of tongues a flashback episode of this trauma
2012-08-13 18:11:30	Zogatribe	don't use "int"; use the sized typedefs such as "int32_t" instead; safer and portable.
2012-08-13 18:11:34	Sarajev[o]	throw, try, catch are parts of C++ language, correct?
2012-08-13 18:11:40	-->	Seppoz (~Invincibl@unaffiliated/seppoz) has joined ##c++
2012-08-13 18:13:27	-->	Anders_J (~anders@unaffiliated/anders-j/x-0508776) has joined ##c++
2012-08-13 18:14:54	-->	paullik (~paullik@unaffiliated/paullik) has joined ##c++
2012-08-13 18:15:11	-->	kvasir (~kvasir@dslb-092-075-122-035.pools.arcor-ip.net) has joined ##c++
2012-08-13 18:16:34	-->	Rayne (~Rayne@pD9E3E0E8.dip.t-dialin.net) has joined ##c++
2012-08-13 18:16:47	TinoDidriksen	Correct
2012-08-13 18:17:23	-->	o-O-o (36f0c4b9@gateway/web/freenode/ip.54.240.196.185) has joined ##c++
2012-08-13 18:18:44	-->	scharan (~scharan@169.235.25.47) has joined ##c++
2012-08-13 18:18:56	<--	scharan (~scharan@169.235.25.47) has quit (Client Quit)
2012-08-13 18:19:11	-->	scharan (~scharan@169.235.25.47) has joined ##c++
2012-08-13 18:20:15	-->	jonaias (~jonaias@gwsc.cisc.usp.br) has joined ##c++
2012-08-13 18:20:54	<--	Y_Less (~Y_Less@host-109-97.eg.le.ac.uk) has quit
2012-08-13 18:21:29	-->	googol (~matthew@ip68-4-137-125.oc.oc.cox.net) has joined ##c++
2012-08-13 18:21:31	-->	lyrae (~lyrae@pool-173-79-238-111.washdc.fios.verizon.net) has joined ##c++
2012-08-13 18:21:51	<--	rogues (~rogues@183.83.89.155) has quit (Ping timeout: 248 seconds)
2012-08-13 18:22:57	morfin	guys how would you store Players objects?
2012-08-13 18:23:25	-->	MissionCritical (~MissionCr@unaffiliated/missioncritical) has joined ##c++
2012-08-13 18:23:32	morfin	to let program easily find them
2012-08-13 18:23:41	-->	L3thal (~quassel@41.44.174.235) has joined ##c++
2012-08-13 18:24:54	morfin	nvm
2012-08-13 18:25:08	morfin	just forgot about topic sorry
2012-08-13 18:25:10	-->	Collin__ (~Collin@206.214.33.242) has joined ##c++
2012-08-13 18:25:12	-->	Element9 (~Element9@cable-178-148-175-186.dynamic.sbb.rs) has joined ##c++
2012-08-13 18:25:27	-->	ambroff (~ambroff@c-24-4-207-161.hsd1.ca.comcast.net) has joined ##c++
2012-08-13 18:25:39	-->	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has joined ##c++
2012-08-13 18:25:39	<--	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has quit (Changing host)
2012-08-13 18:25:39	-->	sohail (~sohail@unaffiliated/sohail) has joined ##c++
2012-08-13 18:26:32	<--	iLogical (~iLogical@unaffiliated/ilogical) has quit (Remote host closed the connection)
2012-08-13 18:26:38	-->	complex (~litehode@static243-173-74.mimer.net) has joined ##c++
2012-08-13 18:27:15	-->	Saint_ (~lord@133-107.34-65.panhandle.res.rr.com) has joined ##c++
2012-08-13 18:27:22	-->	TheGhostinator (~TheBeerin@c-69-180-168-147.hsd1.mn.comcast.net) has joined ##c++
2012-08-13 18:27:22	<--	TheBeerinator (~TheBeerin@c-69-180-168-147.hsd1.mn.comcast.net) has quit (Disconnected by services)
2012-08-13 18:27:25	--	TheGhostinator is now known as TheBeerinator
2012-08-13 18:27:26	<--	Collin_ (~Collin@206.214.33.242) has quit (Remote host closed the connection)
2012-08-13 18:27:39	--	Saint_ is now known as Guest38367
2012-08-13 18:29:55	<--	ambroff (~ambroff@c-24-4-207-161.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2012-08-13 18:30:46	-->	Questutis (~quatrux@78-60-66-154.static.zebra.lt) has joined ##c++
2012-08-13 18:31:13	-->	d3nys (~den@93-136-95-89.adsl.net.t-com.hr) has joined ##c++
2012-08-13 18:31:20	-->	l_r (~anon@dynamic-adsl-84-222-18-45.clienti.tiscali.it) has joined ##c++
2012-08-13 18:31:53	-->	mooijk (~moijk@ti0090a380-dhcp0845.bb.online.no) has joined ##c++
2012-08-13 18:31:58	<--	thore (~anonymous@p57B2EAF6.dip.t-dialin.net) has quit (Quit: thore)
2012-08-13 18:32:36	-->	eisenach (~eisenach@unaffiliated/eisenach) has joined ##c++
2012-08-13 18:32:57	<--	tk_ (~tk@p083055.doubleroute.jp) has quit (Quit: ばいばい)
2012-08-13 18:33:48	coldpizza72i	just checking but this is a legitimate condition for an if statement "0 < diff <= K"
2012-08-13 18:34:00	coldpizza72i	right?
2012-08-13 18:34:08	coldpizza72i	or do i need to break it up with &&
2012-08-13 18:34:12	<--	MulleDK19 (~MulleDK19@31.185.89.154) has quit (Ping timeout: 245 seconds)
2012-08-13 18:35:07	seldon	0 < diff <= K would be parsed as (0 < diff) <= K, where false =0 0 and true == 1. Unless that is what you expect, you'll have to break it up with &&.
2012-08-13 18:35:20	<--	phao (phao@177.174.121.25) has left ##c++ ("Not Here")
2012-08-13 18:35:21	seldon	s/=0/==/
2012-08-13 18:35:23	-->	phao (phao@177.174.121.25) has joined ##c++
2012-08-13 18:35:28	phao	hi
2012-08-13 18:35:38	<--	jonaias (~jonaias@gwsc.cisc.usp.br) has quit (Ping timeout: 240 seconds)
2012-08-13 18:35:43	phao	why do people say to not use wchar_t ?
2012-08-13 18:35:51	phao	or is that just an wrong impression that I have?
2012-08-13 18:36:08	<--	drinkycrow (~whoreface@c-98-212-215-137.hsd1.in.comcast.net) has quit (Ping timeout: 240 seconds)
2012-08-13 18:36:08	<--	rurufufuss (~rurufufus@115-64-27-246.static.tpgi.com.au) has quit (Remote host closed the connection)
2012-08-13 18:37:06	morfin	am i right?
2012-08-13 18:37:16	morfin	objects are being moved to freestore
2012-08-13 18:37:17	morfin	geordi, struct B{B(){cout<<" B* ";};~B(){cout<<" ~B ";};B(B&){cout<<" "<<"B&"<<" ";}; B(B&&){cout<<"B&&";}   int field;B &operator=(B&& b){cout<<" B&& ";b.field = this->field;return *this;}}; int main() {vector<B> bVec;bVec.push_back(B());}
2012-08-13 18:37:19	geordi	 B* B&& ~B  ~B
2012-08-13 18:37:34	-->	Hemite (~Hemite@169.232.214.151) has joined ##c++
2012-08-13 18:38:06	-->	kiten (~azriel@unaffiliated/kiten) has joined ##c++
2012-08-13 18:38:40	-->	julmuri (~kamazharr@b881.ip15.netikka.fi) has joined ##c++
2012-08-13 18:38:41	et	phao: its definition is not very useful - e.g. it does not guarantee that you can store utf-16 codeunits
2012-08-13 18:38:44	<--	phax (~phax@unaffiliated/phax) has quit (Quit: Leaving)
2012-08-13 18:38:58	phao	hmm
2012-08-13 18:39:07	-->	hz (~hz@unaffiliated/hz) has joined ##c++
2012-08-13 18:39:10	-->	rogues (~rogues@183.83.89.155) has joined ##c++
2012-08-13 18:39:17	phao	so "its usefulness is actually implementation dependent" ?
2012-08-13 18:40:27	--	kiten is now known as azriel
2012-08-13 18:40:31	seldon	morfin: Try that with emplace_back instead of push_back, and there will not be a move.
2012-08-13 18:40:34	<--	PigFlu (~herp@unaffiliated/pigflu) has quit (Quit: dthdrthdrth)
2012-08-13 18:40:36	Griwes	coldpizza72i, you cannot do that
2012-08-13 18:40:48	morfin	emplace_back? :O
2012-08-13 18:41:09	seldon	geordi, struct B{B(){cout<<" B* ";};~B(){cout<<" ~B ";};B(B&){cout<<" "<<"B&"<<" ";}; B(B&&){cout<<"B&&";}   int field;B &operator=(B&& b){cout<<" B&& ";b.field = this->field;return *this;}}; int main() {vector<B> bVec;bVec.emplace_back();}
2012-08-13 18:41:10	geordi	 B*  ~B
2012-08-13 18:41:15	<--	darkstarbyte_ (~branden@cpe-50-113-228-169.dc.res.rr.com) has quit (Ping timeout: 252 seconds)
2012-08-13 18:41:38	tworkin	emplace back with no arg?
2012-08-13 18:41:52	seldon	Sure, why not? Emplaces a default-constructed object.-
2012-08-13 18:42:08	morfin	geordi, struct B{B(){cout<<" B* ";};~B(){cout<<" ~B ";};B(B&){cout<<" "<<"B&"<<" ";}; B(B&&){cout<<"B&&";}   int field;B &operator=(B&& b){cout<<" B&& ";b.field = this->field;return *this;}}; int main() {vector<B> bVec;bVec.emplace_back(B());}
2012-08-13 18:42:09	geordi	 B* B&& ~B  ~B
2012-08-13 18:42:13	morfin	still moving :)
2012-08-13 18:42:16	-->	Youka (~youka@dslb-088-068-018-028.pools.arcor-ip.net) has joined ##c++
2012-08-13 18:42:23	seldon	If you insist on using the move ctor, sure.
2012-08-13 18:42:38	<--	julmuri- (~kamazharr@b881.ip15.netikka.fi) has quit (Ping timeout: 240 seconds)
2012-08-13 18:42:46	-->	michlemken-1 (~deta@static-090-153-042-038-teleos.ewe-ip-backbone.de) has joined ##c++
2012-08-13 18:43:11	morfin	i do not insist
2012-08-13 18:43:25	morfin	but it's still using moving ctor
2012-08-13 18:43:38	seldon	But you do. You create a temporary object and pass that to vector methods, where it binds to a rvalue ref.
2012-08-13 18:44:03	morfin	and ho do i act then
2012-08-13 18:44:08	<--	suy (~modpow@113.Red-83-54-203.dynamicIP.rima-tde.net) has quit (Remote host closed the connection)
2012-08-13 18:44:25	Soci3ty	hey, how would i go about derefencing a pointer to an integer array passed to a function?
2012-08-13 18:44:26	morfin	wait what
2012-08-13 18:44:37	seldon	If you want to create an object directly in the vector, emplace_back(stuff you would pass to the constructor goes here);
2012-08-13 18:44:42	Soci3ty	i tried just using the pointer but its giving me an error
2012-08-13 18:44:43	morfin	how this vorked
2012-08-13 18:44:47	morfin	geordi, struct B{B(){cout<<" B* ";};~B(){cout<<" ~B ";};B(B&){cout<<" "<<"B&"<<" ";}; B(B&&){cout<<"B&&";}   int field;B &operator=(B&& b){cout<<" B&& ";b.field = this->field;return *this;}}; int main() {vector<B> bVec;bVec.emplace_back();}
2012-08-13 18:44:48	geordi	 B*  ~B
2012-08-13 18:44:50	morfin	*worked
2012-08-13 18:44:55	Griwes	!give Soci3ty testcase
2012-08-13 18:44:57	nolyc	Soci3ty: Paste your test case (tick the compile checkbox!) to http://ideone.com/ or http://codepad.org. Using a recommended paste site increases the chances someone will take a look at it. Do _not_ paste to the channel. See the testcase checklist at http://www.eelis.net/iso-c++/testcase.xhtml .
2012-08-13 18:45:49	-->	kayo (~kayo@opensuse/member/kayohf) has joined ##c++
2012-08-13 18:45:49	seldon	emplace_back forwards the arguments you give it to the constructor of value_type, thereby removing the need for temporaries.
2012-08-13 18:45:58	morfin	hmm
2012-08-13 18:46:04	<--	vjn (~vjn@216.239.45.130) has quit (Quit: vjn)
2012-08-13 18:46:05	<--	hoerup (~hoerup@90.185.226.118) has quit (Quit: Leaving)
2012-08-13 18:46:14	morfin	i think that's solution to avoid temporaries trash
2012-08-13 18:47:29	-->	scroverty (~billhainh@117.5.35.118) has joined ##c++
2012-08-13 18:47:52	michlemken-1	having an enum class unsigned { a, b } , how do i get the underlaying type in a template typename<T> void f(const T& enum_value); ?
2012-08-13 18:48:02	Soci3ty	Griwes, okay, one min
2012-08-13 18:48:46	<--	o-O-o (36f0c4b9@gateway/web/freenode/ip.54.240.196.185) has quit (Ping timeout: 245 seconds)
2012-08-13 18:48:57	-->	benkay86 (cd8ec521@gateway/web/freenode/ip.205.142.197.33) has joined ##c++
2012-08-13 18:49:00	-->	kubuntu12 (~quassel@98.red-80-29-7.adsl.static.ccgg.telefonica.net) has joined ##c++
2012-08-13 18:49:22	seldon	michlemken-1: std::underlying_type in <type_traits>
2012-08-13 18:49:41	<--	izhak (~izhak@188.244.180.190) has quit (Read error: Operation timed out)
2012-08-13 18:49:58	tworkin	how do i disambugate my functionc all from operator< ? http://ideone.com/PDoo6
2012-08-13 18:50:34	seldon	Basis::template Transform<Param>(x);
2012-08-13 18:51:15	<--	Raistl|n (~chrisjenk@c-67-176-100-115.hsd1.co.comcast.net) has quit (Quit: Raistl|n)
2012-08-13 18:51:25	<--	dispy (~dispy@lbck-4d060587.pool.mediaWays.net) has quit (Quit: Ex-Chat)
2012-08-13 18:51:42	tworkin	funky. thanks
2012-08-13 18:51:48	seldon	You're welcome.
2012-08-13 18:52:02	-->	dhruvasagar (~dhruvasag@122.178.194.67) has joined ##c++
2012-08-13 18:52:07	<--	Guest38367 (~lord@133-107.34-65.panhandle.res.rr.com) has quit (Ping timeout: 245 seconds)
2012-08-13 18:52:22	seldon	The reason, if you're interested, is that Basis::Transform<Param>(x); is parsed as (Basis::Transform < Param) > (x)
2012-08-13 18:52:50	seldon	Since the whole lot is dependent.
2012-08-13 18:54:21	inkjetunito	how can i empty a std::stringstream?
2012-08-13 18:54:25	<--	Baum (~Baum@aFrtWEg.dhcp.studentenwerk-bielefeld.de) has quit (Ping timeout: 276 seconds)
2012-08-13 18:54:29	seldon	stream.str("");
2012-08-13 18:54:39	inkjetunito	seldon, thank you :)
2012-08-13 18:54:47	<--	vsrao (~quassel@unaffiliated/vsrao) has quit (Read error: Connection reset by peer)
2012-08-13 18:54:48	seldon	You may also want to stream.clear(); to remove error flags.
2012-08-13 18:54:58	inkjetunito	ok
2012-08-13 18:54:59	-->	darkstarbyte_ (~branden@cpe-50-113-228-169.dc.res.rr.com) has joined ##c++
2012-08-13 18:55:21	-->	xilo (~xilo@32.97.110.56) has joined ##c++
2012-08-13 18:55:39	<--	Tyrfing (~SaschaMue@p508A3538.dip.t-dialin.net) has quit (Ping timeout: 244 seconds)
2012-08-13 18:55:53	-->	hauron_ (~hauron@dyn1197-105.wlan.ic.ac.uk) has joined ##c++
2012-08-13 18:57:20	-->	perlsyntax (~perlsynta@unaffiliated/perlsyntax) has joined ##c++
2012-08-13 18:57:27	<--	klocatelli (~irc@adsl-75-30-115-40.dsl.pltn13.sbcglobal.net) has quit (Quit: Leaving)
2012-08-13 18:58:17	<--	hauron (~hauron@dyn1197-105.wlan.ic.ac.uk) has quit (Ping timeout: 240 seconds)
2012-08-13 18:58:19	<--	floe_ (~flo@e179009102.adsl.alicedsl.de) has quit (Ping timeout: 276 seconds)
2012-08-13 18:58:22	--	hauron_ is now known as hauron
2012-08-13 18:58:25	michlemken-1	seldon, thanks - but my gcc has no std::underlying_type, ii will use std::make_unsigned
2012-08-13 18:58:35	<--	thalassarche (~thalassar@unaffiliated/thalassarche) has quit (Ping timeout: 268 seconds)
2012-08-13 18:58:51	-->	BadDesign (~BadDesign@2a02:2f02:a023:f008::4f74:d6c9) has joined ##c++
2012-08-13 18:58:57	-->	AlbireoX (~AlbireoX@99-136-83-34.lightspeed.rcsntx.sbcglobal.net) has joined ##c++
2012-08-13 18:58:59	seldon	It appears to be new in 4.7.
2012-08-13 18:59:01	-->	samik (~smukherje@2607:fc48:400:2:ca2a:14ff:fe04:5562) has joined ##c++
2012-08-13 18:59:33	-->	em_ (~em@user-0ccem0s.cable.mindspring.com) has joined ##c++
2012-08-13 18:59:34	-->	floe__ (~flo@e179019030.adsl.alicedsl.de) has joined ##c++
2012-08-13 19:01:15	<--	Hemite (~Hemite@169.232.214.151) has quit (Quit: Hemite)
2012-08-13 19:01:49	four33	I'm currently quite newbish at C++, but there's something that's been bothering me about the documentation i've been following: In the examples of the use of void in functions, the main function is still an int type with a "return 0" statement at the bottom.
2012-08-13 19:01:57	four33	Why not make main() a void?
2012-08-13 19:02:15	inkjetunito	because main has type int in c++
2012-08-13 19:02:18	seldon	Because main has to return a status code to the surrounding shell. 0 is (by convention) the code for success.
2012-08-13 19:02:26	morfin	yes^
2012-08-13 19:02:30	four33	oh!
2012-08-13 19:02:34	four33	well that makes sense.
2012-08-13 19:02:40	morfin	geordi, void main(){};
2012-08-13 19:02:40	geordi	error: '::main' must return 'int'
2012-08-13 19:02:57	four33	thanks people
2012-08-13 19:02:59	morfin	C allows void i think
2012-08-13 19:03:18	morfin	not sure *should try that
2012-08-13 19:03:25	four33	well I was looking over a little Java and the main class in that seemed always to be a String type
2012-08-13 19:03:30	four33	but a void string
2012-08-13 19:03:32	seldon	This is mainly interesting when you write shell scripts/batch files/similar. Also, the return 0; is not actually necessary; main returns 0 by default. This is only the case in main, mind you, so don't go leaving out return statements in other int functions in your code.
2012-08-13 19:03:55	morfin	that's C++11 feature as i know
2012-08-13 19:04:02	morfin	retutning 0 by default
2012-08-13 19:04:05	-->	paul424 (~chatzilla@91.207.68.2) has joined ##c++
2012-08-13 19:04:06	morfin	*returning
2012-08-13 19:04:08	seldon	No, that was the case in C++98, too. Not in C89, though.
2012-08-13 19:04:13	morfin	hmmm
2012-08-13 19:04:24	four33	well I guess as best practice you should always return?
2012-08-13 19:04:30	seldon	I think it is in C99, but I'd have to check.
2012-08-13 19:04:34	-->	darvein (~darvein@static-190-181-30-115.acelerate.net) has joined ##c++
2012-08-13 19:04:48	morfin	i always write return 0;
2012-08-13 19:04:49	<--	symm-_ (~symm-@178.168.29.31) has quit (Ping timeout: 276 seconds)
2012-08-13 19:05:01	morfin	just to be sure
2012-08-13 19:05:09	-->	floe (~flo@f052102110.adsl.alicedsl.de) has joined ##c++
2012-08-13 19:05:12	Zogatribe	in main? not required.
2012-08-13 19:05:23	seldon	I usually don't. But it's not something to get worked up about.
2012-08-13 19:05:32	seldon	Use your own discretion.
2012-08-13 19:05:37	morfin	oh Zogatribe
2012-08-13 19:06:07	morfin	will you recommend std::list<shared_ptr<Player>> for list of player objects?
2012-08-13 19:06:20	Zogatribe	std::list <Player>
2012-08-13 19:06:26	-->	b1tgl0w (~b1tgl0w@unaffiliated/enigmaticcoder) has joined ##c++
2012-08-13 19:06:30	morfin	i can do that but
2012-08-13 19:06:55	morfin	like this
2012-08-13 19:06:56	morfin	geordi, struct B{B(){cout<<" B* ";};~B(){cout<<" ~B ";};B(B&){cout<<" "<<"B&"<<" ";}; B(B&&){cout<<"B&&";}   int field;B &operator=(B&& b){cout<<" B&& ";b.field = this->field;return *this;}}; int main() {std::list<B> bVec;bVec.emplace_back();}
2012-08-13 19:06:57	geordi	 B*  ~B
2012-08-13 19:07:40	<--	floe__ (~flo@e179019030.adsl.alicedsl.de) has quit (Ping timeout: 260 seconds)
2012-08-13 19:08:26	<--	l_r (~anon@dynamic-adsl-84-222-18-45.clienti.tiscali.it) has quit (Quit: Sto andando via)
2012-08-13 19:08:49	<--	luigy (~luigy@pool-96-242-21-81.nwrknj.fios.verizon.net) has quit (Quit: Computer has gone to sleep.)
2012-08-13 19:09:07	<--	eisenach (~eisenach@unaffiliated/eisenach) has quit (Quit: brb)
2012-08-13 19:09:48	seldon	You might want to consider using a deque instead. Lists are very cache-unfriendly.
2012-08-13 19:10:19	Zogatribe	seldon: custom allocator
2012-08-13 19:10:30	four33	who wrote geordi?
2012-08-13 19:11:02	Sarajev[o]	pragma-
2012-08-13 19:11:06	--	Sarajev[o] is now known as Sarajevo
2012-08-13 19:11:11	Zogatribe	and I imagine deque to be almost as cache unfriendly as list; use vector if that is your concern
2012-08-13 19:11:26	phao	et, hey
2012-08-13 19:11:36	phao	what is the usual way people deal with special character strings?
2012-08-13 19:11:42	seldon	The slices of a deque will always be larger than cache lines.
2012-08-13 19:11:44	phao	like "É verão"
2012-08-13 19:11:45	<--	floe (~flo@f052102110.adsl.alicedsl.de) has quit (Ping timeout: 260 seconds)
2012-08-13 19:11:56	<--	assertsmart|2 (~assertsma@78.97.253.170) has quit (Ping timeout: 252 seconds)
2012-08-13 19:12:01	Zogatribe	seldon: many chunks = many cache misses
2012-08-13 19:12:02	phao	I think C++11 has support for that, right?
2012-08-13 19:12:25	<--	shurnor (~quassel@98.red-80-29-7.adsl.static.ccgg.telefonica.net) has quit (Remote host closed the connection)
2012-08-13 19:12:27	<--	kubuntu12 (~quassel@98.red-80-29-7.adsl.static.ccgg.telefonica.net) has quit (Remote host closed the connection)
2012-08-13 19:12:57	inkjetunito	phao, modern ui toolkits provide their own string classes with utf-8 support
2012-08-13 19:13:01	-->	floe (~flo@e179003168.adsl.alicedsl.de) has joined ##c++
2012-08-13 19:13:09	phao	inkjetunito, thx
2012-08-13 19:13:12	seldon	Look, I'm not getting into this argument with you again. You displayed an astounding inability to learn that time and you have not given me reason to believe it would be better this time.
2012-08-13 19:13:32	Zogatribe	seldon: you are talking crap.
2012-08-13 19:13:58	Zogatribe	deque chunks are tyipically quite small
2012-08-13 19:14:04	Zogatribe	if you want locality use vector
2012-08-13 19:14:11	<--	jrdnn (~jrdnn@unaffiliated/jrdnn) has quit (Ping timeout: 272 seconds)
2012-08-13 19:14:52	Zogatribe	and custom pool allocator does improve the situation.
2012-08-13 19:14:59	coppro	/win 14
2012-08-13 19:15:33	Zogatribe	don't use "int"; use the sized typedefs such as "int32_t" instead; safer and portable.
2012-08-13 19:15:43	Zogatribe	(/troll1)
2012-08-13 19:16:06	-->	higgs_ (~dennis@81-235-208-5-no62.tbcn.telia.com) has joined ##c++
2012-08-13 19:16:08	-->	mikko777 (~quassel@dsl-hkibrasgw2-ff77c300-69.dhcp.inet.fi) has joined ##c++
2012-08-13 19:16:31	--	higgs_ is now known as Guest46041
2012-08-13 19:17:25	-->	killerboy (~mateusz@217.17.38.43) has joined ##c++
2012-08-13 19:18:25	<--	floe (~flo@e179003168.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2012-08-13 19:18:32	-->	floe (~flo@e179003168.adsl.alicedsl.de) has joined ##c++
2012-08-13 19:19:19	<--	Willy (~gwilly@ppp-110-137.29-151.libero.it) has quit (Ping timeout: 245 seconds)
2012-08-13 19:20:38	-->	jinjonBoo (sudo@89-180-15-104.net.novis.pt) has joined ##c++
2012-08-13 19:21:40	<--	perlsyntax (~perlsynta@unaffiliated/perlsyntax) has quit (Quit: Leaving)
2012-08-13 19:22:52	michlemken-1	geordi, enum class E  : unsigned  { e = 1  }; unsigned x = E::e;  // why ?
2012-08-13 19:22:53	geordi	error: cannot convert 'E' to 'unsigned int' in initialization
2012-08-13 19:23:00	<--	joel_falcou (~joel_falc@gov91-4-83-152-215-118.fbx.proxad.net) has quit
2012-08-13 19:23:07	-->	izhak (~izhak@188.244.180.190) has joined ##c++
2012-08-13 19:23:38	-->	thalassarche (~thalassar@unaffiliated/thalassarche) has joined ##c++
2012-08-13 19:23:57	-->	spobat (~lib@p5DC77511.dip.t-dialin.net) has joined ##c++
2012-08-13 19:24:13	<--	Keshi (~Keshi@unaffiliated/keshi) has quit (Read error: Connection reset by peer)
2012-08-13 19:24:58	<--	darkstarbyte_ (~branden@cpe-50-113-228-169.dc.res.rr.com) has quit (Remote host closed the connection)
2012-08-13 19:25:20	-->	jrdnn (~jrdnn@unaffiliated/jrdnn) has joined ##c++
2012-08-13 19:27:05	Oxyd	Because no implicit conversion for scoped enumerations.
2012-08-13 19:27:21	Oxyd	Explicit one should work, though.
2012-08-13 19:27:28	<--	localhost (~chris@2002:4cbc:a1de::1) has quit (Remote host closed the connection)
2012-08-13 19:27:30	Griwes	because C++ is type safe language! :P
2012-08-13 19:27:31	Oxyd	geordi: replace E::e with static_cast<unsigned>(E::e)
2012-08-13 19:27:33	geordi	Success
2012-08-13 19:27:35	Oxyd	That.
2012-08-13 19:27:45	<--	n00b101 (~n00b@CPE001a70d1c1a8-CM0019479342d0.cpe.net.cable.rogers.com) has quit (Read error: Connection reset by peer)
2012-08-13 19:28:02	<--	ShishKabab (~vincent@195.191.202.173) has quit (Quit: Konversation terminated!)
2012-08-13 19:28:07	-->	n00b101 (~n00b@CPE001a70d1c1a8-CM0019479342d0.cpe.net.cable.rogers.com) has joined ##c++
2012-08-13 19:28:11	Griwes	it's not C, when you write int * a = malloc(sizeof(*a)) and it compiles ;d
2012-08-13 19:29:09	<--	Sarajevo (~Sarajevo@gateway/tor-sasl/sarajevo) has quit (Remote host closed the connection)
2012-08-13 19:29:39	-->	Sarajevo (~Sarajevo@gateway/tor-sasl/sarajevo) has joined ##c++
2012-08-13 19:34:21	paul424	I want to have a hierarchy of actions to which my entities should respond. What would be better RTTI or some chain of strings like : monster actions -> attack -. split accied -> large ball acid ?
2012-08-13 19:34:53	-->	teotwaki_ (~slau@Maemo/community/contributor/crashanddie) has joined ##c++
2012-08-13 19:36:10	paul424	the event receiver should match toward the most concrete event class ... anyone ?
2012-08-13 19:37:30	-->	derevo (~KangarooL@c-98-201-2-40.hsd1.tx.comcast.net) has joined ##c++
2012-08-13 19:37:48	-->	Fireblasto (~Fiery@unaffiliated/fireblasto) has joined ##c++
2012-08-13 19:38:08	BadDesign	paul424: What about just a mapping? std::map<Monster, std::list<Action>>
2012-08-13 19:38:36	Zogatribe	signals and slots?
2012-08-13 19:39:04	<--	TzilTzal (~TzilTzal@cm213.gamma65.maxonline.com.sg) has quit (Quit: Good bye)
2012-08-13 19:39:15	paul424	heh I ask you how to code such hirarchies .... I don't wanna neither singals nor mapping ...
2012-08-13 19:39:24	paul424	hierarchies*
2012-08-13 19:39:34	Zogatribe	sausages.
2012-08-13 19:39:49	Soci3ty	any ideas how i could return an array?
2012-08-13 19:39:56	Soci3ty	right now im returning a pointer
2012-08-13 19:40:02	Zogatribe	use std::array
2012-08-13 19:40:10	TinoDidriksen	Or std::vector
2012-08-13 19:40:21	Soci3ty	let me try that
2012-08-13 19:40:21	Soci3ty	ty
2012-08-13 19:40:22	-->	sohail_ (~sohail@75-119-249-160.dsl.teksavvy.com) has joined ##c++
2012-08-13 19:40:24	BadDesign	Soci3ty: do you need arrays?
2012-08-13 19:40:32	-->	BaronFacekicker (~Dan@027fe6a7.bb.sky.com) has joined ##c++
2012-08-13 19:40:36	Soci3ty	yea
2012-08-13 19:40:44	-->	Lleo (~Lleo@5355B522.cm-6-6c.dynamic.ziggo.nl) has joined ##c++
2012-08-13 19:40:47	paul424	zogatribes*
2012-08-13 19:40:47	<--	Oohm (~Oohm@ip54550b7a.speed.planet.nl) has quit (Read error: Connection reset by peer)
2012-08-13 19:40:48	-->	mire_ (~mire@85.222.222.254) has joined ##c++
2012-08-13 19:40:54	<--	Lleo (~Lleo@5355B522.cm-6-6c.dynamic.ziggo.nl) has left ##c++
2012-08-13 19:40:59	Soci3ty	std::array  provides an error
2012-08-13 19:41:02	Soci3ty	when i add it to the header
2012-08-13 19:41:09	-->	haxi (~anonycul@lan31-1-81-56-82-105.fbx.proxad.net) has joined ##c++
2012-08-13 19:41:15	Zogatribe	then you are doing something wrong.
2012-08-13 19:41:23	<--	FriskyKat (SomeWhere@027a7de0.bb.sky.com) has quit (Ping timeout: 252 seconds)
2012-08-13 19:41:24	<--	MissionCritical (~MissionCr@unaffiliated/missioncritical) has quit (Ping timeout: 245 seconds)
2012-08-13 19:41:37	Soci3ty	where i normally have int/void in the header im placing std::array
2012-08-13 19:41:43	Soci3ty	in both the header and the .cpp right?
2012-08-13 19:41:44	<--	mOo (~moo@lighttpd/moo) has quit (Remote host closed the connection)
2012-08-13 19:41:58	<--	zeleni_zub (~zz@195.178.42.82) has quit (Quit: return (-1);)
2012-08-13 19:42:04	<--	infa1488 (~infa1488@host31-42-17-151.tvkdiana.pl) has quit
2012-08-13 19:42:07	<--	sohail (~sohail@unaffiliated/sohail) has quit (Ping timeout: 252 seconds)
2012-08-13 19:42:07	Soci3ty	im getting error Namespace std has no member array
2012-08-13 19:42:34	Zogatribe	#include <array>
2012-08-13 19:42:36	BadDesign	Soci3ty: Have you done?: #include <array>
2012-08-13 19:42:49	BadDesign	http://en.cppreference.com/w/cpp/container/array
2012-08-13 19:42:52	Soci3ty	:o no
2012-08-13 19:42:56	Soci3ty	i didnt think it was needed
2012-08-13 19:43:04	Soci3ty	thank you
2012-08-13 19:44:06	<--	izhak (~izhak@188.244.180.190) has quit (Read error: Connection reset by peer)
2012-08-13 19:44:44	-->	ineb (~ineb@flnb-5f7709f3.pool.mediaWays.net) has joined ##c++
2012-08-13 19:45:12	Soci3ty	one last question,
2012-08-13 19:45:29	Soci3ty	how would i store that in another array inside the call per say
2012-08-13 19:45:36	Soci3ty	one sec, ill ideone an example
2012-08-13 19:45:42	-->	JSchwag (~JSchwag@S01060026f3e11bf0.vn.shawcable.net) has joined ##c++
2012-08-13 19:45:42	<--	JSchwag (~JSchwag@S01060026f3e11bf0.vn.shawcable.net) has quit (Changing host)
2012-08-13 19:45:42	-->	JSchwag (~JSchwag@unaffiliated/jschwag) has joined ##c++
2012-08-13 19:46:00	Soci3ty	http://ideone.com/OowqQ
2012-08-13 19:46:07	Griwes	wow, ideone has already became a verb?
2012-08-13 19:46:22	Soci3ty	yes, <3 ideone
2012-08-13 19:46:31	<--	phao (phao@177.174.121.25) has left ##c++ ("Not Here")
2012-08-13 19:46:31	-->	KAHR-Alpha_ (~Alpha@AAmiens-157-1-83-162.w86-208.abo.wanadoo.fr) has joined ##c++
2012-08-13 19:46:32	<--	voidcoder (~androirc@82-171-102-39.ip.telfort.nl) has quit (Read error: Connection reset by peer)
2012-08-13 19:46:35	-->	Mycotoxin (~Mycotoxin@dynamic-78-8-245-212.ssp.dialog.net.pl) has joined ##c++
2012-08-13 19:46:36	<--	Mycotoxin (~Mycotoxin@dynamic-78-8-245-212.ssp.dialog.net.pl) has quit (Changing host)
2012-08-13 19:46:36	-->	Mycotoxin (~Mycotoxin@unaffiliated/mycotoxin) has joined ##c++
2012-08-13 19:47:11	-->	Kyzz (~quassel@cpe-24-166-81-109.neo.res.rr.com) has joined ##c++
2012-08-13 19:47:12	<--	wobster (~wobster@dslb-188-100-070-044.pools.arcor-ip.net) has quit (Quit: wobster)
2012-08-13 19:47:16	<--	Kyzz (~quassel@cpe-24-166-81-109.neo.res.rr.com) has quit (Client Quit)
2012-08-13 19:47:41	-->	Kyzz (~quassel@cpe-24-166-81-109.neo.res.rr.com) has joined ##c++
2012-08-13 19:47:45	-->	gabriel9 (~gabriel9@47-71-246-188-bl.cable.dyn.broadband.blic.net) has joined ##c++
2012-08-13 19:47:53	Soci3ty	im getting an erro about a modifable lvalue
2012-08-13 19:47:59	Soci3ty	error*
2012-08-13 19:48:28	<--	KAHR-Alpha (~Alpha@AAmiens-157-1-83-162.w86-208.abo.wanadoo.fr) has quit (Ping timeout: 240 seconds)
2012-08-13 19:48:31	<--	plouffe (kaixin@gateway/shell/devio.us/x-vyredxhyxpeokzwf) has quit (Ping timeout: 265 seconds)
2012-08-13 19:48:41	--	KAHR-Alpha_ is now known as KAHR-Alpha
2012-08-13 19:48:54	-->	voidcoder (~androirc@82-171-102-39.ip.telfort.nl) has joined ##c++
2012-08-13 19:49:06	Oxyd	Soci3ty: What do you expect that to do_
2012-08-13 19:49:08	Oxyd	?
2012-08-13 19:49:25	-->	snearch (~snearch@pD4B887CE.dip.t-dialin.net) has joined ##c++
2012-08-13 19:49:32	Soci3ty	i was hoping to copy the returned arrray
2012-08-13 19:49:38	Soci3ty	to something i could use in the main function
2012-08-13 19:49:43	-->	assertsmart (~assertsma@78.97.253.170) has joined ##c++
2012-08-13 19:49:47	Oxyd	What type is integers1 and integers2?
2012-08-13 19:49:50	Oxyd	Also int[100]?
2012-08-13 19:49:55	Oxyd	Perhaps you want valarray?
2012-08-13 19:50:06	<--	molgrum (~molgrum@h-234-143.a189.priv.bahnhof.se) has quit (Quit: Lämnar)
2012-08-13 19:50:09	Oxyd	Or then -- perhaps you don't.
2012-08-13 19:50:19	<--	MrFahrenheit (~RageOfTho@cable-77-221-23-224.dynamic.vinet.ba) has quit (Ping timeout: 276 seconds)
2012-08-13 19:50:22	Soci3ty	integers1 and integers2 are arrays
2012-08-13 19:50:24	Oxyd	I mean -- valarray seems to be just for this purpose. But then -- does anybody really use it?
2012-08-13 19:50:38	Soci3ty	they are passed to my function which finds the remainder after dividing them
2012-08-13 19:50:40	Oxyd	Soci3ty: Well -- there's no op % for arrays. You can't assign them either.
2012-08-13 19:50:43	Soci3ty	then it returns it as an array
2012-08-13 19:51:05	-->	xazax (~xazax@87.229.85.223.z-net.hu) has joined ##c++
2012-08-13 19:51:07	Soci3ty	well i go object by overject in the function
2012-08-13 19:51:12	Soci3ty	since %= calls it
2012-08-13 19:51:19	Oxyd	What?
2012-08-13 19:51:27	--	xazax is now known as Guest64979
2012-08-13 19:52:32	Soci3ty	i have two arrays integers 1 and integers2 they are passed to my function by the overloaded operator %= it then stores the remainders of each object in a third array, then it returns that array
2012-08-13 19:52:42	Soci3ty	my issue is gaining access to that third array
2012-08-13 19:52:50	Oxyd	{ valarray<int> a{6, 6, 6, 6, 6}, b{1, 2, 3, 4, 5}, result(5); result = a % b; cout << result; }
2012-08-13 19:52:51	<--	jackarain|2 (~kvirc@223.255.243.111) has quit (Read error: Connection reset by peer)
2012-08-13 19:52:52	geordi	{0, 0, 0, 2, 1}
2012-08-13 19:52:54	Oxyd	Is that what you want?
2012-08-13 19:52:57	-->	TheAscended (~michael@99-60-103-23.lightspeed.wepbfl.sbcglobal.net) has joined ##c++
2012-08-13 19:53:05	-->	dbank (~danthedev@unaffiliated/danthedev) has joined ##c++
2012-08-13 19:53:10	Oxyd	I don't see any overloaded operator %= in your paste.
2012-08-13 19:53:19	Oxyd	Perhaps make a real testcase.
2012-08-13 19:53:21	<--	dbank (~danthedev@unaffiliated/danthedev) has left ##c++
2012-08-13 19:53:27	-->	Mission-Critical (~MissionCr@unaffiliated/missioncritical) has joined ##c++
2012-08-13 19:53:47	Zogatribe	6 % 1 is not 0
2012-08-13 19:53:47	<--	floe (~flo@e179003168.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2012-08-13 19:54:03	-->	floe (~flo@e179003168.adsl.alicedsl.de) has joined ##c++
2012-08-13 19:54:03	Soci3ty	Zogatribe, yes it is
2012-08-13 19:54:08	Soci3ty	6/1 is 6
2012-08-13 19:54:10	Zogatribe	<< 6 % 1;
2012-08-13 19:54:11	geordi	0
2012-08-13 19:54:18	Soci3ty	which has a remander of 0
2012-08-13 19:54:29	Soci3ty	Oxyd, ill work up a testcase :)
2012-08-13 19:54:31	Zogatribe	oh yeah
2012-08-13 19:54:41	Zogatribe	of course; thinking bakwards
2012-08-13 19:54:47	Oxyd	Soci3ty: And then again -- why are you doing raw arrays instead of valarray?
2012-08-13 19:54:48	Soci3ty	haha i did that the first time i saw it
2012-08-13 19:54:52	Soci3ty	thought it was a /
2012-08-13 19:54:54	-->	jackarain|2 (~kvirc@223.255.243.111) has joined ##c++
2012-08-13 19:54:55	-->	impulse1_ (~impulse15@port790.ds1-arc.adsl.cybercity.dk) has joined ##c++
2012-08-13 19:55:23	-->	DarkPeak (~DarkPeak@unaffiliated/darkpeak) has joined ##c++
2012-08-13 19:55:57	Soci3ty	Oxyd, umm ive never heard of valarray before
2012-08-13 19:56:09	<--	m3thyl (~m3th@cpe-76-169-228-195.socal.res.rr.com) has quit (Remote host closed the connection)
2012-08-13 19:56:10	<--	em_ (~em@user-0ccem0s.cable.mindspring.com) has quit (Ping timeout: 276 seconds)
2012-08-13 19:56:15	<--	impulse150 (~impulse15@port790.ds1-arc.adsl.cybercity.dk) has quit (Ping timeout: 265 seconds)
2012-08-13 19:56:22	<--	Lillia7 (~lillia7@6abb386d.t-net.ne.jp) has quit (Quit: Leaving...)
2012-08-13 19:56:32	-->	irwinb (~irwinb@99.47.9.242) has joined ##c++
2012-08-13 19:56:38	Oxyd	Soci3ty: Then perhaps look it up. I admit I never really used it or saw anyone else use it -- but then, it seems to be doing exactly what you want to be doing.
2012-08-13 19:56:39	<--	scroverty (~billhainh@117.5.35.118) has quit (Remote host closed the connection)
2012-08-13 19:56:48	Soci3ty	okay :)
2012-08-13 19:57:01	Soci3ty	ty
2012-08-13 19:57:14	-->	Programmer_ (~khaotic@unaffiliated/khaotic) has joined ##c++
2012-08-13 19:59:10	<--	Rayne (~Rayne@pD9E3E0E8.dip.t-dialin.net) has quit (Quit: FATAL ERROR)
2012-08-13 19:59:32	-->	magellanicloud (~magellani@HSI-KBW-091-089-175-206.hsi2.kabel-badenwuerttemberg.de) has joined ##c++
2012-08-13 19:59:33	<--	Matthias|PC (~matthias@162.233-243-81.adsl-dyn.isp.belgacom.be) has quit (Ping timeout: 248 seconds)
2012-08-13 19:59:35	-->	Criztian (~criztian@239-210.198-178.cust.bluewin.ch) has joined ##c++
2012-08-13 19:59:36	--	Mission-Critical is now known as MissionCritical
2012-08-13 19:59:57	-->	Matthias|PC (~matthias@65.128-243-81.adsl-dyn.isp.belgacom.be) has joined ##c++
2012-08-13 20:00:01	<--	mooijk (~moijk@ti0090a380-dhcp0845.bb.online.no) has quit (Quit: Leaving...)
2012-08-13 20:00:55	-->	jophish (~jophish@cpc25-cmbg15-2-0-cust16.5-4.cable.virginmedia.com) has joined ##c++
2012-08-13 20:01:32	<--	iKlsR (~iKlsR@unaffiliated/iklsr) has quit (Quit: respawning..)
2012-08-13 20:02:41	coldpizza72i	Can someone help me with this http://ideone.com/GJJur
2012-08-13 20:02:50	-->	iKlsR (~iKlsR@216.10.208.205) has joined ##c++
2012-08-13 20:02:54	<--	zyphex (~zyphex@cpe-98-28-19-244.columbus.res.rr.com) has quit
2012-08-13 20:02:54	<--	iKlsR (~iKlsR@216.10.208.205) has quit (Changing host)
2012-08-13 20:02:54	-->	iKlsR (~iKlsR@unaffiliated/iklsr) has joined ##c++
2012-08-13 20:03:19	--	Guest64979 is now known as xazax_
2012-08-13 20:04:38	-->	JBlitzen (JBlitzen@cpe-72-230-241-202.rochester.res.rr.com) has joined ##c++
2012-08-13 20:05:06	Oxyd	Why are you trying to capture a function template_
2012-08-13 20:05:08	Oxyd	?
2012-08-13 20:05:50	coldpizza72i	Oxyd: me?
2012-08-13 20:06:00	Oxyd	Sure.
2012-08-13 20:06:30	coldpizza72i	what do you mean
2012-08-13 20:06:38	-->	mooijk (~moijk@ti0090a380-dhcp0845.bb.online.no) has joined ##c++
2012-08-13 20:06:48	Oxyd	I mean, what do you expect it to do?
2012-08-13 20:07:02	<--	blag (~bergeot@host26.181-0-217.telecom.net.ar) has quit (Ping timeout: 268 seconds)
2012-08-13 20:07:04	coldpizza72i	What part?
2012-08-13 20:07:08	seldon	line 58, as the compiler tells you.
2012-08-13 20:07:17	Oxyd	coldpizza72i: Line 58, the "&prev" part.
2012-08-13 20:07:27	-->	vjn (~vjn@108-225-17-247.lightspeed.sntcca.sbcglobal.net) has joined ##c++
2012-08-13 20:07:55	coldpizza72i	Im updating the pointer in that function
2012-08-13 20:07:56	<--	ApEk (43ead23e@gateway/web/freenode/ip.67.234.210.62) has quit (Ping timeout: 245 seconds)
2012-08-13 20:08:05	Oxyd	Okay. Why are you trying to capture a function template, though?
2012-08-13 20:08:18	coldpizza72i	Im not sure what you mean
2012-08-13 20:08:21	<--	benkay86 (cd8ec521@gateway/web/freenode/ip.205.142.197.33) has quit (Ping timeout: 245 seconds)
2012-08-13 20:08:25	-->	unomystEz (~maruchan@cpe-68-173-64-143.nyc.res.rr.com) has joined ##c++
2012-08-13 20:08:37	Oxyd	coldpizza72i: std::prev is a function template. Why are you trying to capture it in the lambda?
2012-08-13 20:08:38	<--	vjn (~vjn@108-225-17-247.lightspeed.sntcca.sbcglobal.net) has quit (Remote host closed the connection)
2012-08-13 20:08:57	BadDesign	coldpizza72i: http://en.cppreference.com/w/cpp/iterator/prev
2012-08-13 20:09:17	BadDesign	One more reason not to use: using namespace std;
2012-08-13 20:09:17	coldpizza72i	oh do i need to rename my node variable
2012-08-13 20:09:31	Oxyd	You first need to explain what you want the "&prev" part to do at all.
2012-08-13 20:09:50	Oxyd	Especially since you then accept a node* prev as a function parameter of the lambda, which would shadow the captured prev.
2012-08-13 20:10:13	coldpizza72i	I have never used lambda before, what so you mean shadow
2012-08-13 20:10:31	-->	melba (~melba@unaffiliated/lazz0) has joined ##c++
2012-08-13 20:10:33	Oxyd	The same kind of shadow as in non-lambda code.
2012-08-13 20:10:43	Oxyd	geordi: { int i = 42; { int i = 13; cout << i; } }
2012-08-13 20:10:43	-->	uman (~grammar_s@unaffiliated/uman) has joined ##c++
2012-08-13 20:10:45	geordi	13
2012-08-13 20:10:49	Oxyd	The inner i shadowed the outer one.
2012-08-13 20:10:52	coldpizza72i	I havent heard of someone refering to shadows before
2012-08-13 20:10:56	-->	vocodork (vocoder@d54C62C1C.access.telenet.be) has joined ##c++
2012-08-13 20:10:58	coldpizza72i	oh
2012-08-13 20:10:59	BadDesign	coldpizza72i: once you have a variable with the same name it will always take the one that is closer to the scope you are
2012-08-13 20:11:19	Oxyd	geordi: struct foo { int i = 42; void bar() { int i = 13; cout << i; } }; int main() { foo f; f.bar(); }
2012-08-13 20:11:20	geordi	13
2012-08-13 20:11:25	Oxyd	The local i shadowed the member one.
2012-08-13 20:11:36	-->	em_ (~em@user-0ccem0s.cable.mindspring.com) has joined ##c++
2012-08-13 20:11:44	BadDesign	coldpizza72i: http://en.wikipedia.org/wiki/Variable_shadowing
2012-08-13 20:11:59	Oxyd	And since a lambda is basically a syntax sugar for a class with overloaded op (), this kind of "local variable shadows a member" shadowing is exactly what would get.
2012-08-13 20:12:19	coldpizza72i	so I should uncapture prev?
2012-08-13 20:12:26	Oxyd	Most likely.
2012-08-13 20:12:27	<--	hz (~hz@unaffiliated/hz) has quit
2012-08-13 20:12:45	-->	blag (~bergeot@host32.181-0-217.telecom.net.ar) has joined ##c++
2012-08-13 20:13:23	<--	derevo (~KangarooL@c-98-201-2-40.hsd1.tx.comcast.net) has quit
2012-08-13 20:13:54	<--	unomystEz (~maruchan@cpe-68-173-64-143.nyc.res.rr.com) has quit (Ping timeout: 245 seconds)
2012-08-13 20:13:58	-->	Agro (~Agro@108-79-20-223.lightspeed.hstntx.sbcglobal.net) has joined ##c++
2012-08-13 20:13:59	-->	litb (~litb@ip-109-84-0-5.web.vodafone.de) has joined ##c++
2012-08-13 20:14:06	litb	hello all folks
2012-08-13 20:14:07	coldpizza72i	So what exactly does capturing accomplish
2012-08-13 20:14:24	-->	floe_ (~flo@e179004010.adsl.alicedsl.de) has joined ##c++
2012-08-13 20:14:41	Oxyd	Places a variable into the closure object.
2012-08-13 20:14:42	BadDesign	coldpizza72i: with capturing you have access inside the lamba expression to outer scoped variables
2012-08-13 20:14:44	-->	zyphex (~zyphex@cpe-98-28-19-244.columbus.res.rr.com) has joined ##c++
2012-08-13 20:15:01	<--	floe (~flo@e179003168.adsl.alicedsl.de) has quit (Ping timeout: 276 seconds)
2012-08-13 20:15:14	coldpizza72i	BadDesign: why not just pass by reference
2012-08-13 20:15:18	<--	snearch (~snearch@pD4B887CE.dip.t-dialin.net) has quit (Quit: Verlassend)
2012-08-13 20:15:35	-->	gelignite (~gelignite@i5387AEE7.versanet.de) has joined ##c++
2012-08-13 20:15:37	Oxyd	geordi: function<int()> foo(int i) { return [i] { return i; }; } int main() { cout << foo(42)(); }
2012-08-13 20:15:39	geordi	42
2012-08-13 20:15:48	Oxyd	The i needs to be stored within the return type somewhere.
2012-08-13 20:15:59	<--	zzing_ (~zzing@206-188-73-104.cpe.distributel.net) has quit (Quit: Computer has gone to sleep.)
2012-08-13 20:16:17	<--	inkjetunito (~fsww@unaffiliated/inkjetunit) has quit (Ping timeout: 244 seconds)
2012-08-13 20:16:29	Oxyd	geordi: struct closure { int i; closure(int i) : i(i) { } int operator () () { return i; } }; closure foo(int i) { return closure(i); } int main() { cout << foo(42)(); }
2012-08-13 20:16:30	geordi	42
2012-08-13 20:16:30	<--	nocture (~nocture@3e6b4b9d.rev.stofanet.dk) has quit (Quit: Linkinus - http://linkinus.com)
2012-08-13 20:16:40	<--	kvasir (~kvasir@dslb-092-075-122-035.pools.arcor-ip.net) has quit (Remote host closed the connection)
2012-08-13 20:16:47	-->	nojhan (~nojhan@epe28-1-78-216-192-6.fbx.proxad.net) has joined ##c++
2012-08-13 20:16:47	<--	nojhan (~nojhan@epe28-1-78-216-192-6.fbx.proxad.net) has quit (Changing host)
2012-08-13 20:16:47	-->	nojhan (~nojhan@pdpc/supporter/active/nojhan) has joined ##c++
2012-08-13 20:16:52	Oxyd	^ That code is basically what you get with the lambda.
2012-08-13 20:17:17	coldpizza72i	Whats the point of capturing when you can just pass by reference
2012-08-13 20:17:37	<--	floe_ (~flo@e179004010.adsl.alicedsl.de) has quit (Remote host closed the connection)
2012-08-13 20:17:45	Zogatribe	Oxyd: that wouldn't work if i was changed by lambda
2012-08-13 20:17:47	-->	floe_ (~flo@e179004010.adsl.alicedsl.de) has joined ##c++
2012-08-13 20:17:51	Oxyd	Pass what by reference?
2012-08-13 20:17:57	BadDesign	coldpizza72i: look here: http://pastebin.com/txCkH9tL for different examples of lambda captures ; When you pass by reference you can modify the outter scopped variable inside the lambda expression and the modification is seen outside
2012-08-13 20:18:02	RePaste_	BadDesign: The paste txCkH9tL has been moved to http://ideone.com/AO73h (see http://tinyurl.com/yv88ul for why)
2012-08-13 20:18:40	<--	paullik (~paullik@unaffiliated/paullik) has quit (Quit: WeeChat 0.3.8)
2012-08-13 20:18:59	BadDesign	Need to make myself and account at ideone :)
2012-08-13 20:18:59	Oxyd	If you need to pass a function that, let's say, accepts no parameters to somewhere, you have pretty much no other option to give it access to some variables other than capturing them.
2012-08-13 20:19:15	<--	sleepee (~sleepee@adsl-64-237-154-187.prtc.net) has quit (Quit: Leaving)
2012-08-13 20:19:17	<--	rcxdude (~rcxdude@host86-169-43-24.range86-169.btcentralplus.com) has quit (Remote host closed the connection)
2012-08-13 20:19:34	Oxyd	geordi: void stuff(function<void()> f) { f(); } int main() { int i = 42; stuff([i] { cout << i; }); }
2012-08-13 20:19:36	geordi	42
2012-08-13 20:19:42	-->	rcxdude (~rcxdude@host86-169-43-24.range86-169.btcentralplus.com) has joined ##c++
2012-08-13 20:19:51	Oxyd	How would you do that without a capture? Pretend that "stuff" is some library function that you can't change.
2012-08-13 20:21:08	coldpizza72i	ohhh
2012-08-13 20:21:17	-->	DataStream (~DataStrea@5ac31eba.bb.sky.com) has joined ##c++
2012-08-13 20:21:32	coldpizza72i	So is this the thing I recall tha breaks the whole encapsulation idea?
2012-08-13 20:21:45	Oxyd	How does it break encapsulation?
2012-08-13 20:21:54	-->	PigFlu (~herp@80.202.23.248) has joined ##c++
2012-08-13 20:21:54	<--	PigFlu (~herp@80.202.23.248) has quit (Changing host)
2012-08-13 20:21:54	-->	PigFlu (~herp@unaffiliated/pigflu) has joined ##c++
2012-08-13 20:22:09	coldpizza72i	Cant you get access to provate functions?
2012-08-13 20:22:35	<--	wroos (~wroos@h-62-8.a259.priv.bahnhof.se) has quit (Quit: Lämnar)
2012-08-13 20:22:43	Oxyd	Uh.. What does this have to do with gaining access to private functions?
2012-08-13 20:22:44	coldpizza72i	Or maybe im thinking about something else
2012-08-13 20:22:55	Oxyd	!private
2012-08-13 20:22:56	nolyc	(private <text>) -- Replies with <text> in private. Use nested commands to your benefit here.
2012-08-13 20:23:01	Oxyd	>x(
2012-08-13 20:23:09	Oxyd	!fs private
2012-08-13 20:23:09	nolyc	template<typename Tag, typename Tag::type t> struct rob { friend typename Tag::type get(Tag) { return t; } }; class chock { long cock; }; struct C_c { typedef long chock::*type; friend type get(C_c); }; template struct rob<C_c,&chock::cock>; int main() { return chock().*get(C_c()); }
2012-08-13 20:23:25	Oxyd	That is a hack to get access to private members.
2012-08-13 20:23:27	-->	mads- (~mads@0x55510ba3.adsl.cybercity.dk) has joined ##c++
2012-08-13 20:24:00	-->	Baum (~Baum@aFrtWEg.dhcp.studentenwerk-bielefeld.de) has joined ##c++
2012-08-13 20:24:17	<--	NinjaPenguin (aintelliny@cable-prv-fe61dd00-134.dhcp.inet.fi) has quit (Ping timeout: 252 seconds)
2012-08-13 20:24:21	<--	bastih (~bastih@c-24-7-13-45.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2012-08-13 20:24:22	<--	envi (kvirc@220.121.234.166) has quit (Read error: Connection reset by peer)
2012-08-13 20:24:29	et	"long cock" :/
2012-08-13 20:24:39	-->	envi (kvirc@220.121.234.166) has joined ##c++
2012-08-13 20:25:08	<--	sohail_ (~sohail@75-119-249-160.dsl.teksavvy.com) has quit (Ping timeout: 240 seconds)
2012-08-13 20:26:13	<--	Henke37 (~Henrik@90-230-202-243-no203.tbcn.telia.com) has quit (Ping timeout: 248 seconds)
2012-08-13 20:27:38	<--	altin (~altin@flossk/altin) has quit (Ping timeout: 240 seconds)
2012-08-13 20:28:13	-->	altin (~altin@flossk/altin) has joined ##c++
2012-08-13 20:28:29	<--	JSchwag (~JSchwag@unaffiliated/jschwag) has quit (Ping timeout: 245 seconds)
2012-08-13 20:28:30	-->	iLogical (~iLogical@unaffiliated/ilogical) has joined ##c++
2012-08-13 20:29:09	<--	michlemken-1 (~deta@static-090-153-042-038-teleos.ewe-ip-backbone.de) has quit (Quit: Leaving)
2012-08-13 20:29:53	-->	o-O-o (36f0c4b9@gateway/web/freenode/ip.54.240.196.185) has joined ##c++
2012-08-13 20:30:46	<--	rcxdude (~rcxdude@host86-169-43-24.range86-169.btcentralplus.com) has quit (Remote host closed the connection)
2012-08-13 20:30:49	<--	altin (~altin@flossk/altin) has quit (Max SendQ exceeded)
2012-08-13 20:30:51	-->	inkjetunito (~fsww@unaffiliated/inkjetunit) has joined ##c++
2012-08-13 20:31:00	-->	floe__ (~flo@e179004010.adsl.alicedsl.de) has joined ##c++
2012-08-13 20:31:09	-->	rcxdude (~rcxdude@host86-169-43-24.range86-169.btcentralplus.com) has joined ##c++
2012-08-13 20:31:15	-->	altin (~altin@46.19.230.21) has joined ##c++
2012-08-13 20:31:15	<--	altin (~altin@46.19.230.21) has quit (Changing host)
2012-08-13 20:31:15	-->	altin (~altin@flossk/altin) has joined ##c++
2012-08-13 20:31:16	<--	floe_ (~flo@e179004010.adsl.alicedsl.de) has quit (Ping timeout: 276 seconds)
2012-08-13 20:32:55	-->	Lleo (~Lleo@5355B522.cm-6-6c.dynamic.ziggo.nl) has joined ##c++
2012-08-13 20:33:25	<--	Patteh (~BOB@unaffiliated/patteh) has quit (Ping timeout: 260 seconds)
2012-08-13 20:33:45	<--	Lleo (~Lleo@5355B522.cm-6-6c.dynamic.ziggo.nl) has left ##c++
2012-08-13 20:33:52	<--	Criztian (~criztian@239-210.198-178.cust.bluewin.ch) has quit
2012-08-13 20:34:26	<--	dhruvasagar (~dhruvasag@122.178.194.67) has quit (Ping timeout: 252 seconds)
2012-08-13 20:34:55	<--	dvoid_ (~quassel@h44n1-sde-a31.ias.bredband.telia.com) has quit (Ping timeout: 264 seconds)
2012-08-13 20:34:57	<--	TheAscended (~michael@99-60-103-23.lightspeed.wepbfl.sbcglobal.net) has quit (Quit: Leaving)
2012-08-13 20:35:26	-->	m4ggus (~marcus@p5B3E1CF0.dip.t-dialin.net) has joined ##c++
2012-08-13 20:35:26	<--	m4ggus (~marcus@p5B3E1CF0.dip.t-dialin.net) has quit (Changing host)
2012-08-13 20:35:26	-->	m4ggus (~marcus@unaffiliated/m4ggus) has joined ##c++
2012-08-13 20:35:38	<--	Anders_J (~anders@unaffiliated/anders-j/x-0508776) has quit (Quit: Anders_J)
2012-08-13 20:35:51	-->	dzonder (ajc@62-121-73-12.home.aster.pl) has joined ##c++
2012-08-13 20:36:34	-->	aarch (~z@ip-68.viapori.fi) has joined ##c++
2012-08-13 20:37:03	<--	Jeaye (~jeaye@rrcs-208-105-169-77.nys.biz.rr.com) has quit (Quit: WeeChat 0.3.8)
2012-08-13 20:39:17	<--	inkjetunito (~fsww@unaffiliated/inkjetunit) has quit (Quit: qQQ)
2012-08-13 20:39:23	-->	sohail (~sohail@unaffiliated/sohail) has joined ##c++
2012-08-13 20:39:39	-->	jmknsd_ (86868b48@gateway/web/freenode/ip.134.134.139.72) has joined ##c++
2012-08-13 20:41:03	-->	dvoid (~quassel@h44n1-sde-a31.ias.bredband.telia.com) has joined ##c++
2012-08-13 20:41:32	<--	jophish (~jophish@cpc25-cmbg15-2-0-cust16.5-4.cable.virginmedia.com) has quit (Remote host closed the connection)
2012-08-13 20:42:16	<--	teotwaki_ (~slau@Maemo/community/contributor/crashanddie) has quit (Quit: Leaving)
2012-08-13 20:42:46	-->	sohail_ (~sohail@75-119-249-160.dsl.teksavvy.com) has joined ##c++
2012-08-13 20:44:08	<--	sohail (~sohail@unaffiliated/sohail) has quit (Ping timeout: 240 seconds)
2012-08-13 20:44:50	-->	kasu300 (~Kasu@c83-253-20-105.bredband.comhem.se) has joined ##c++
2012-08-13 20:46:09	<--	rcxdude (~rcxdude@host86-169-43-24.range86-169.btcentralplus.com) has quit (Remote host closed the connection)
2012-08-13 20:47:37	<--	Felix91 (~Chatzilla@pdbn-5d826132.pool.mediaWays.net) has quit (Quit: Leaving)
2012-08-13 20:48:44	-->	rcxdude (~rcxdude@host86-169-43-24.range86-169.btcentralplus.com) has joined ##c++
2012-08-13 20:48:51	<--	Programmer_ (~khaotic@unaffiliated/khaotic) has quit (Remote host closed the connection)
2012-08-13 20:50:56	<--	Collin__ (~Collin@206.214.33.242) has quit (Ping timeout: 252 seconds)
2012-08-13 20:51:26	<--	blag (~bergeot@host32.181-0-217.telecom.net.ar) has quit (Ping timeout: 268 seconds)
2012-08-13 20:51:52	-->	blag (~bergeot@host73.186-110-236.telecom.net.ar) has joined ##c++
2012-08-13 20:53:37	<--	LordCrc (LordCrc@135.70.202.84.customer.cdi.no) has quit (Ping timeout: 240 seconds)
2012-08-13 20:54:08	-->	rtjure (~rtjure@46.249.91.213) has joined ##c++
2012-08-13 20:54:20	<--	mikko777 (~quassel@dsl-hkibrasgw2-ff77c300-69.dhcp.inet.fi) has quit (Remote host closed the connection)
2012-08-13 20:54:25	<--	bluecode (~bluecode@p508F765A.dip.t-dialin.net) has quit (Quit: Konversation terminated!)
2012-08-13 20:54:56	--	kramer3d is now known as kramkram
2012-08-13 20:54:59	-->	shurnor (~quassel@98.red-80-29-7.adsl.static.ccgg.telefonica.net) has joined ##c++
2012-08-13 20:56:03	-->	floe (~flo@e179004010.adsl.alicedsl.de) has joined ##c++
2012-08-13 20:56:24	-->	manel2020 (~manel2020@44.158.165.83.dynamic.mundo-r.com) has joined ##c++
2012-08-13 20:56:26	<--	b1tgl0w (~b1tgl0w@unaffiliated/enigmaticcoder) has quit (Ping timeout: 246 seconds)
2012-08-13 20:56:29	<--	floe__ (~flo@e179004010.adsl.alicedsl.de) has quit (Remote host closed the connection)
2012-08-13 20:57:41	-->	kubuntu12 (~quassel@73.Red-80-39-198.dynamicIP.rima-tde.net) has joined ##c++
2012-08-13 20:57:55	--	kubuntu12 is now known as shurnormal
2012-08-13 20:59:09	-->	rcxdude_ (~rcxdude@host86-149-81-82.range86-149.btcentralplus.com) has joined ##c++
2012-08-13 20:59:52	<--	shurnor (~quassel@98.red-80-29-7.adsl.static.ccgg.telefonica.net) has quit (Ping timeout: 276 seconds)
2012-08-13 20:59:58	<--	rcxdude (~rcxdude@host86-169-43-24.range86-169.btcentralplus.com) has quit (Ping timeout: 272 seconds)
2012-08-13 21:00:01	-->	Jenny (~Jenny@gateway/tor-sasl/awkwardsilence) has joined ##c++
2012-08-13 21:00:20	Jenny	ho
2012-08-13 21:00:22	Jenny	hi
2012-08-13 21:00:25	tworkin	what does gcc mean by "j" returned from typeid(S).name()? avoiding imaginary number implication? i expected i/int/int32
2012-08-13 21:00:43	-->	Programmer_ (~khaotic@unaffiliated/khaotic) has joined ##c++
2012-08-13 21:00:45	Jenny	Can someone help me out? I'm new to C++ and I'm trying to create a vector of boost threads.
2012-08-13 21:01:01	mama	threads aren't copyable.
2012-08-13 21:01:17	mama	C++03's vector requires copyability.
2012-08-13 21:01:20	<--	baedert (~baedert@dslb-088-066-110-146.pools.arcor-ip.net) has quit (Ping timeout: 246 seconds)
2012-08-13 21:01:29	iKlsR	how would i suppress warnings with gcc compiler?
2012-08-13 21:01:36	graspee	-W0
2012-08-13 21:01:37	spb	iKlsR: by reading 'man gcc'
2012-08-13 21:01:41	Oxyd	They are movable, though. So in C++11, there's no problem with std::vector<std::thread>.
2012-08-13 21:01:55	mama	That's why I said 03!
2012-08-13 21:02:16	Jenny	Oxyd: C++ has threads by default?
2012-08-13 21:02:16	<--	klip (klip@gollum.klapka.cz) has quit (Remote host closed the connection)
2012-08-13 21:02:18	Oxyd	I'm not disagreeing with you. I'm just adding to what you said.
2012-08-13 21:02:21	Oxyd	Jenny: Sure.
2012-08-13 21:02:40	spb	Jenny: either use C++11, or do something like std::vector<boost::unique_ptr<boost::thread> >
2012-08-13 21:02:42	Oxyd	Jenny: C++11 does, that is. Not C++03.
2012-08-13 21:03:07	<--	litb (~litb@ip-109-84-0-5.web.vodafone.de) has quit (Ping timeout: 276 seconds)
2012-08-13 21:03:08	<--	magellanicloud (~magellani@HSI-KBW-091-089-175-206.hsi2.kabel-badenwuerttemberg.de) has quit (Ping timeout: 272 seconds)
2012-08-13 21:03:20	<--	impulse1_ (~impulse15@port790.ds1-arc.adsl.cybercity.dk) has quit (Quit: ihavenolegs)
2012-08-13 21:04:14	o-O-o	are C++11 threads copyable?
2012-08-13 21:04:17	<--	errormsg (~user@cA049BF51.dhcp.as2116.net) has left ##c++ ("ERC Version 5.3 (IRC client for Emacs)")
2012-08-13 21:04:18	TinoDidriksen	No
2012-08-13 21:04:25	o-O-o	so emplace_back :)
2012-08-13 21:05:09	Oxyd	push_back. emplace_back is for stuffing multiple values at the end at the same time.
2012-08-13 21:05:22	Oxyd	push_back is overloaded for both T const&&, and T&&.
2012-08-13 21:05:22	-->	CJKay (~chris@unaffiliated/cjkay) has joined ##c++
2012-08-13 21:05:37	<--	blag (~bergeot@host73.186-110-236.telecom.net.ar) has quit (Ping timeout: 268 seconds)
2012-08-13 21:05:39	four33	what is this talk of C++11 and c++03 and so on? are these different versions?
2012-08-13 21:05:39	TinoDidriksen	emplace is for constructing in-place, not for multiple items...
2012-08-13 21:05:54	-->	Brklyn (~brklyn@215.Red-95-122-167.staticIP.rima-tde.net) has joined ##c++
2012-08-13 21:06:04	Bigcheese	four33: the new standard came out recently.
2012-08-13 21:06:04	TinoDidriksen	four33, yes.
2012-08-13 21:06:12	Bigcheese	Not everyone is awesome enough yet to have it.
2012-08-13 21:06:14	four33	what's the newest standard?
2012-08-13 21:06:22	TinoDidriksen	C++11
2012-08-13 21:06:23	tworkin	four33: check your compiler for support http://wiki.apache.org/stdcxx/C%2B%2B0xCompilerSupport
2012-08-13 21:06:27	<--	Agro (~Agro@108-79-20-223.lightspeed.hstntx.sbcglobal.net) has quit (Quit: Leaving)
2012-08-13 21:06:49	-->	Agro (~Agro@108-79-20-223.lightspeed.hstntx.sbcglobal.net) has joined ##c++
2012-08-13 21:07:00	four33	oh wow, im using GCC and it seems rather outdated
2012-08-13 21:07:07	Oxyd	{ vector<thread> v; auto f = [] { cout << "yay "; }; for (size_t i = 0; i < 5; ++i) v.push_back(thread(f)); for_each(begin(v), end(v), [](thread& t) { t.join(); }); }
2012-08-13 21:07:08	geordi	yay yay yay yay yay
2012-08-13 21:07:24	<--	An_Ony_Moose (~linus@skysimulation.de) has quit (Remote host closed the connection)
2012-08-13 21:07:36	TinoDidriksen	four33, g++ 4.7+ is pretty good at C++11
2012-08-13 21:07:43	Oxyd	Except of course, I guess access to cout should be protected with a mutex in real code.
2012-08-13 21:07:46	<--	Sven_Shady (~quassel@p548935CF.dip.t-dialin.net) has quit (Remote host closed the connection)
2012-08-13 21:07:49	four33	oh, my bad, I was just confused by that chart
2012-08-13 21:08:15	-->	Patteh (~BOB@cpc11-hari15-2-0-cust199.20-2.cable.virginmedia.com) has joined ##c++
2012-08-13 21:08:15	<--	Patteh (~BOB@cpc11-hari15-2-0-cust199.20-2.cable.virginmedia.com) has quit (Changing host)
2012-08-13 21:08:16	-->	Patteh (~BOB@unaffiliated/patteh) has joined ##c++
2012-08-13 21:08:17	--	sweet_kid is now known as sweet|kid
2012-08-13 21:08:21	<--	Patteh (~BOB@unaffiliated/patteh) has quit (Remote host closed the connection)
2012-08-13 21:08:29	TinoDidriksen	!c++11support
2012-08-13 21:08:30	nolyc	c++11 support: clang: http://clang.llvm.org/cxx_status.html g++: http://gcc.gnu.org/projects/cxx0x.html micros~1: http://blogs.msdn.com/b/vcblog/archive/2011/09/12/10209291.aspx
2012-08-13 21:08:38	<--	samik (~smukherje@2607:fc48:400:2:ca2a:14ff:fe04:5562) has quit (Remote host closed the connection)
2012-08-13 21:08:46	<--	Brklyn_ (~brklyn@80.30.246.89) has quit (Ping timeout: 265 seconds)
2012-08-13 21:08:49	-->	samik (~smukherje@2607:fc48:400:2:e2f8:47ff:fe17:5bac) has joined ##c++
2012-08-13 21:08:50	-->	Henke37 (~Henrik@90-230-202-243-no203.tbcn.telia.com) has joined ##c++
2012-08-13 21:10:50	-->	zagabar (~zagabar@c-83-219-220-244.cust.bredband2.com) has joined ##c++
2012-08-13 21:11:24	-->	ISF (~ivan@143.106.196.239) has joined ##c++
2012-08-13 21:12:07	--	rcxdude_ is now known as rcxdude
2012-08-13 21:12:13	o-O-o	{ vector<thread> v; auto f = [] { cout << "yay "; }; thread t(f); v.push_back(t); }
2012-08-13 21:12:14	geordi	error: use of deleted function 'thread::thread(const thread&)'
2012-08-13 21:12:17	o-O-o	lol
2012-08-13 21:12:24	o-O-o	so push_back uses move too
2012-08-13 21:12:24	o-O-o	:)
2012-08-13 21:12:31	<--	irwinb (~irwinb@99.47.9.242) has quit (Read error: Connection reset by peer)
2012-08-13 21:12:40	-->	RockstarRaccoon (~cchristia@c-98-208-155-216.hsd1.fl.comcast.net) has joined ##c++
2012-08-13 21:13:02	-->	irwinb (~irwinb@99.47.9.242) has joined ##c++
2012-08-13 21:13:18	ville	how's that move?
2012-08-13 21:13:19	<--	Domiiii (domi@1-162-49-139.dynamic.hinet.net) has quit
2012-08-13 21:13:37	Griwes	thread(const thread &) is copy
2012-08-13 21:13:44	-->	Jeaye (~jeaye@rrcs-208-105-169-77.nys.biz.rr.com) has joined ##c++
2012-08-13 21:13:47	Griwes	(ctor, ofc)
2012-08-13 21:13:53	Zogatribe	{ vector<thread> v; auto f = [] { cout << "yay "; }; v.emplace_back(f); }
2012-08-13 21:13:55	geordi	terminated
2012-08-13 21:14:00	Oxyd	geordi: replace (t) with (move(t))
2012-08-13 21:14:00	geordi	error: String `(t)` does not occur.
2012-08-13 21:14:18	Griwes	Zogatribe, gz
2012-08-13 21:14:23	Zogatribe	?
2012-08-13 21:14:27	SorcererX	{ vector<thread> v; auto f = [] { cout << "yay "; v.push_back( thread(f) ); }
2012-08-13 21:14:28	geordi	error: Unexpected end of request. Expected '}' or balanced code.
2012-08-13 21:14:44	four33	im a pretty huge newb at C++ currently, and i'm using version 4.2 of gcc, do you think it's necessary to update to the latest version, or will some of the new standards not be necessary for a newb programmer?
2012-08-13 21:14:53	<--	Jeaye (~jeaye@rrcs-208-105-169-77.nys.biz.rr.com) has quit (Client Quit)
2012-08-13 21:14:57	et	geordi: insert } after ";
2012-08-13 21:14:57	geordi	error: expected ',' or ';' before 'v'
2012-08-13 21:15:02	<--	irwinb (~irwinb@99.47.9.242) has quit (Read error: No route to host)
2012-08-13 21:15:08	Griwes	geordi, insert ; after ;}
2012-08-13 21:15:10	geordi	terminated
2012-08-13 21:15:20	Zogatribe	{ vector<thread> v; auto f = [] { cout << "yay "; }; v.emplace_back(f); v.back().join(); }
2012-08-13 21:15:23	geordi	yay
2012-08-13 21:15:24	melba	four33, you should try to update
2012-08-13 21:15:28	-->	irwinb (~irwinb@99.47.9.242) has joined ##c++
2012-08-13 21:15:34	<--	KongoKong (~KongoKong@74.142.51.115) has quit (Remote host closed the connection)
2012-08-13 21:15:35	SorcererX	{ vector<thread> v; auto f = [] { cout << "yay "; }; v.push_back( thread(f) ); }
2012-08-13 21:15:37	geordi	terminated
2012-08-13 21:16:05	Griwes	four33, in case you are on mac (guessing from gcc version), just use clang
2012-08-13 21:16:06	-->	wisey (~Steven@host86-130-49-164.range86-130.btcentralplus.com) has joined ##c++
2012-08-13 21:16:16	four33	I am on a mac
2012-08-13 21:16:22	four33	is clang another compiler?
2012-08-13 21:16:24	Zogatribe	a crapple mac?
2012-08-13 21:16:40	Griwes	yay, knowledge that apple is stuck with pre-gplv3 gcc was useful once again
2012-08-13 21:16:57	Griwes	four33, yeah, one with much more friendly error messages et al
2012-08-13 21:17:03	four33	hmm
2012-08-13 21:17:07	four33	OK thanks very much
2012-08-13 21:18:31	<--	Henke37 (~Henrik@90-230-202-243-no203.tbcn.telia.com) has quit (Read error: Connection reset by peer)
2012-08-13 21:18:32	<--	iiyo (~iiyo@cpc1-linc6-0-0-cust945.12-1.cable.virginmedia.com) has quit (Read error: Connection reset by peer)
2012-08-13 21:18:43	endlesstars	n00b6502: vskaddanki thanks for before the code is ready
2012-08-13 21:19:03	-->	Lleo (~Lleo@5355B522.cm-6-6c.dynamic.ziggo.nl) has joined ##c++
2012-08-13 21:19:04	-->	Henke37 (~Henrik@90-230-202-243-no203.tbcn.telia.com) has joined ##c++
2012-08-13 21:19:08	-->	iiyo (~iiyo@cpc1-linc6-0-0-cust945.12-1.cable.virginmedia.com) has joined ##c++
2012-08-13 21:19:11	four33	geordi: cout << "Hello, world";
2012-08-13 21:19:11	geordi	error: 'cout' does not name a type
2012-08-13 21:19:18	--	AllenJB_ is now known as AllenJB
2012-08-13 21:19:18	endlesstars	if you could have a look and tell me any blatant non-C++ idioms (execpt for the defines :P) i'd be grateful
2012-08-13 21:19:25	endlesstars	http://ideone.com/nYiqC
2012-08-13 21:19:34	Griwes	geordi, insert { before cout and } after ;
2012-08-13 21:19:34	geordi	error: String `}` does not occur after semicolon.
2012-08-13 21:19:43	-->	phao_ (phao@187.117.192.208) has joined ##c++
2012-08-13 21:19:44	<--	sohail_ (~sohail@75-119-249-160.dsl.teksavvy.com) has quit (Ping timeout: 245 seconds)
2012-08-13 21:19:44	Griwes	geordi, show
2012-08-13 21:19:44	geordi	cout << "Hello, world";
2012-08-13 21:19:45	<--	Lleo (~Lleo@5355B522.cm-6-6c.dynamic.ziggo.nl) has quit (Read error: Connection reset by peer)
2012-08-13 21:19:53	Griwes	geordi, insert { before cout
2012-08-13 21:19:53	geordi	error: Unexpected end of request. Expected '}' or balanced code.
2012-08-13 21:19:56	--	phao_ is now known as phao
2012-08-13 21:20:04	Griwes	geordi, insert } after ;
2012-08-13 21:20:05	geordi	error: Unexpected `}` after `world";`. Expected balanced code or end of request.
2012-08-13 21:20:10	Griwes	lol
2012-08-13 21:20:12	Griwes	geordi, show
2012-08-13 21:20:12	geordi	cout << "Hello, world";
2012-08-13 21:20:15	four33	lol
2012-08-13 21:20:17	four33	I was just testing
2012-08-13 21:20:18	Griwes	eh
2012-08-13 21:20:41	-->	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has joined ##c++
2012-08-13 21:20:41	<--	sohail (~sohail@75-119-249-160.dsl.teksavvy.com) has quit (Changing host)
2012-08-13 21:20:41	-->	sohail (~sohail@unaffiliated/sohail) has joined ##c++
2012-08-13 21:20:43	Griwes	ok, speaking simply: either << "Hello, world" or { cout << "Hello, world"; }
2012-08-13 21:21:02	-->	Namphiz (~namphiz@gateway/tor-sasl/namphiz) has joined ##c++
2012-08-13 21:21:20	-->	Jeaye (~jeaye@gateway/tor-sasl/jeaye) has joined ##c++
2012-08-13 21:21:32	Mycotoxin	!quote clang
2012-08-13 21:21:33	nolyc	<clang> (╯°□°）╯︵ ┻━┻
2012-08-13 21:21:35	four33	geordi: int main() { cout << "Hello, world"; return 0; }
2012-08-13 21:21:36	geordi	Hello, world
2012-08-13 21:21:55	CJKay	geordi: { cout << "Hello, world"; }
2012-08-13 21:21:57	geordi	Hello, world
2012-08-13 21:22:04	<--	scai (~scai@erft-4d07de74.pool.mediaWays.net) has left ##c++ ("[IRSSI]")
2012-08-13 21:22:16	-->	Format (58f03fd8@gateway/web/freenode/ip.88.240.63.216) has joined ##c++
2012-08-13 21:22:39	<--	snuggl (~krs@ip-91-123-200-160.kna.citycloud.se) has quit (Ping timeout: 248 seconds)
2012-08-13 21:22:46	seldon	There's #geordi for all your bot-bothering needs.
2012-08-13 21:23:03	<--	kayo (~kayo@opensuse/member/kayohf) has quit (Quit: Saindo)
2012-08-13 21:23:17	endlesstars	any library to spawn a subprocess and read the stdout from it in C++? something along the lines of popen in Python
2012-08-13 21:23:44	V-ille	poco probably has what you need
2012-08-13 21:23:55	<--	Jenny (~Jenny@gateway/tor-sasl/awkwardsilence) has quit (Ping timeout: 276 seconds)
2012-08-13 21:24:01	-->	mitchnull (~mitch@2E6B3AE7.catv.pool.telekom.hu) has joined ##c++
2012-08-13 21:24:08	Format	How can I declare a std::map<std::string, std::function<> > without defining the type of std::function (like in the example)
2012-08-13 21:24:09	Griwes	endlesstars, http://www.highscore.de/boost/process/
2012-08-13 21:24:48	-->	Saint_ (~lord@133-107.34-65.panhandle.res.rr.com) has joined ##c++
2012-08-13 21:24:54	endlesstars	ahh boost
2012-08-13 21:24:58	endlesstars	a solution for everything
2012-08-13 21:25:04	Zogatribe	Format: you can't
2012-08-13 21:25:12	--	Saint_ is now known as Guest36855
2012-08-13 21:25:21	Griwes	not really "boost", but always something :P
2012-08-13 21:25:47	four33	seldon: sorry :P Can we start private chats with Geordi to discuss matters with a little more discretion?
2012-08-13 21:26:10	seldon	Dunno. Try it.
2012-08-13 21:26:12	Format	So can I change it after declaration like std::map<std::string, std::function<int(myVar.type, mySecond.type)> >
2012-08-13 21:26:13	Griwes	!gr four33
2012-08-13 21:26:14	nolyc	By your command.
2012-08-13 21:26:30	four33	?
2012-08-13 21:26:32	four33	!gr
2012-08-13 21:26:32	nolyc	(grab [<channel>] <nick>) -- Grabs a quote from <channel> by <nick> for the quotegrabs table. <channel> is only necessary if the message isn't sent in the channel itself.
2012-08-13 21:26:44	Griwes	Format, you cannot
2012-08-13 21:26:45	Format	If I don't know the type of myVar and mySecond?
2012-08-13 21:26:50	Griwes	!give four33 quotes
2012-08-13 21:26:52	Format	Oh...
2012-08-13 21:26:52	nolyc	four33: http://www.projectiwear.org/~plasmahh/cpp/quotes.sh
2012-08-13 21:27:00	<--	shurnormal (~quassel@73.Red-80-39-198.dynamicIP.rima-tde.net) has quit (Remote host closed the connection)
2012-08-13 21:27:14	Griwes	Format, you can do it with some polymorphic and templated magic
2012-08-13 21:27:14	Format	So maybe you can possibly suggest me something?
2012-08-13 21:27:26	four33	did you just quote me?
2012-08-13 21:27:42	Format	Oh, I think I figured it out
2012-08-13 21:28:01	-->	qdii (~qdii@juv34-1-82-225-183-37.fbx.proxad.net) has joined ##c++
2012-08-13 21:28:06	Griwes	in short: make own interface you want the function to have. derive class template from it and rely on polymorphism and pointers
2012-08-13 21:28:09	Format	I will make a new class template and just make map<string, function<int(T,C)> >
2012-08-13 21:28:20	Griwes	but that certainly qualifies as magic
2012-08-13 21:28:32	Griwes	ah
2012-08-13 21:28:49	Format	Can't I?
2012-08-13 21:29:00	four33	btw, you can totally private chat with geordi!
2012-08-13 21:29:01	Griwes	you want fixed, but templated parameters there? silly me, I had something different on mind
2012-08-13 21:29:07	four33	he's awesome.
2012-08-13 21:29:14	Zogatribe	your program will run faster if it doesn't use any memory.
2012-08-13 21:29:25	Griwes	!grab Zogatribe
2012-08-13 21:29:25	nolyc	By your command.
2012-08-13 21:29:42	Zogatribe	actually I was repeating something that was already in the grab list from me :)
2012-08-13 21:29:52	Mycotoxin	!yoda
2012-08-13 21:29:53	nolyc	C++, C++. You must learn C++.
2012-08-13 21:29:55	Format	Hmm not fixed but I can make different maps for 0, 1, 2, 3, 4, 5, 6 amount of parameters which are enough for now.
2012-08-13 21:30:17	Griwes	Zogatribe, good for you. it's now twice, probably :P
2012-08-13 21:30:19	Griwes	!quotes
2012-08-13 21:30:21	nolyc	http://www.projectiwear.org/~plasmahh/cpp/quotes.sh
2012-08-13 21:30:26	Format	Any wiser idea?
2012-08-13 21:30:29	<--	spobat (~lib@p5DC77511.dip.t-dialin.net) has quit (Quit: Leaving)
2012-08-13 21:30:50	Griwes	uh, nope
2012-08-13 21:30:58	four33	Griwes, why did you grab my quote about geordi?
2012-08-13 21:31:04	Griwes	(that was to my previous message)
2012-08-13 21:31:05	-->	private (~private@128-73-125-88.broadband.corbina.ru) has joined ##c++
2012-08-13 21:31:18	Griwes	four33, it was funny ;P
2012-08-13 21:31:29	four33	Griwes, haha why?
2012-08-13 21:31:30	--	private is now known as Guest88958
2012-08-13 21:31:49	Griwes	oh, there are 4 quotes about that famous long long long
2012-08-13 21:32:12	Griwes	four33, I don't have to explain my grabs
2012-08-13 21:32:48	four33	geordi: int main() { exit(0); }
2012-08-13 21:32:49	-->	rcxdude_ (~rcxdude@host86-130-9-136.range86-130.btcentralplus.com) has joined ##c++
2012-08-13 21:32:50	geordi	<no output>
2012-08-13 21:32:55	four33	hah, damn
2012-08-13 21:32:55	<--	zagabar (~zagabar@c-83-219-220-244.cust.bredband2.com) has quit (Ping timeout: 260 seconds)
2012-08-13 21:33:02	<--	Namphiz (~namphiz@gateway/tor-sasl/namphiz) has quit (Quit: Verlassend)
2012-08-13 21:33:06	<--	floe (~flo@e179004010.adsl.alicedsl.de) has quit (Remote host closed the connection)
2012-08-13 21:33:09	<--	Rutix (~rutix@unaffiliated/rutix) has quit
2012-08-13 21:33:31	-->	floe (~flo@e179004010.adsl.alicedsl.de) has joined ##c++
2012-08-13 21:33:40	Neo17	http://pastebin.com/efcV9b7B
2012-08-13 21:33:45	RePaste_	Neo17: The paste efcV9b7B has been moved to http://ideone.com/r1b3s (see http://tinyurl.com/yv88ul for why)
2012-08-13 21:33:53	<--	mritz (~mritz@97.65.251.170) has quit (Ping timeout: 246 seconds)
2012-08-13 21:34:57	<--	graspee (~graspee@02dd1c1b.bb.sky.com) has quit (Read error: Connection reset by peer)
2012-08-13 21:34:58	<--	rcxdude (~rcxdude@host86-149-81-82.range86-149.btcentralplus.com) has quit (Ping timeout: 276 seconds)
2012-08-13 21:35:44	-->	mritz (~mritz@97.65.251.170) has joined ##c++
2012-08-13 21:35:48	-->	Raistl|n (~chrisjenk@c-67-176-100-115.hsd1.co.comcast.net) has joined ##c++
2012-08-13 21:36:06		irc: disconnected from server
2012-08-14 08:56:50	-->	JohnHamelink (~JohnHamel@ks393762.kimsufi.com) has joined ##c++
2012-08-14 08:56:50	--	Topic for ##c++ is "ISO/IEC 14882:2011 (a.k.a. C++11) is PUBLISHED!!  || Can't speak? Identify to NickServ || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/ || other channels: ##c++-basic, ##c++-general, ##c++-social, ##iso-c++ || we don't do homework"
2012-08-14 08:56:50	--	Topic set by Eelis (~Eelis@unaffiliated/eelis) on Sat, 03 Sep 2011 19:59:56
2012-08-14 08:56:50	--	Nicks ##c++: [aarch ace2001ac acrocity Adran Adrinael aguai ahf aib|2 akiress alamar alastair AlbireoX_ alek_br_ alexluya AllenJB Alt_of_Ctrl an0maly_ an0xx anaconda Anasazi Anders_J Andon andres ansiwen antto ApEk Apocalypse apparat appofice armyriad arnabkd_ arnoldB aroga arossouw Arttu arun arvind_khadri asakura ashfagg assertsmart|2 atubbs average_drifter awx azriel Azzkikr b_jonas BadDesign badone badone_home baedert Bamieater BanderOS Bao base84 bastii Bavo bburhans Beket Belgarion0 Bigcheese Bish bitrot blackace blast_hardcheese BlastHardcheese blenny blo Bloodust bloony Blue_Hat BoAnd Bobman Boffers bolosaur bolt BombStrike bone bool_ BoomBox boris`` boxofrox bps brexel Brklyn Brownhead bruce14 bryno BSDBlack bvs Bwild C00re Carbonflux caveat- cdash004 Cecen cfairles Ch3y3ZZE chalced changedNicks CharlieM75 Chaser chayin chayin__ cheese1756 chenwj Chestal ChibaPet chrisbuchholz ciaranm cic cinalyc cl0ud clang classix clipon CodeDroid_ coldpizza72i comawhite companion_cube computerghost coppro cortana2 cp133 Cr8 crib cribert- crl cruxeternus cryptic curfont cut^e cyberspace- cYmen d-old d1zzy d4de damir__ Danio dansan darkc0met daryl_ dau DavidChenware davv3 dbr DeadSix27 Deathzor decltype DeeTah Defaultti demi` dfletcher_ dflurker_ dh dhruvasagar dijital1 dindinx dinesh___ dirtydawg djfm djinni`_ Dobz Dolan_pls doodle77 Dotti Drajwer Dreadnaught dropdrive dross drummer306 drumr7 dumont DustyDin1o du|dx dv_ dvide dvoid Dweezahr edlinde Eelis efjboss Element9 Eleth elliottcable em enkomax envi EPIK ericP ernini_ et euphoria eusto evelyette explodus FabTG failingkid fasta felipe fhd_ Flannel Fleck flux Forge__ forrestv FriarTech FriskyKat froggey ftsf Fuco fulcan Fuuzetsu Fuxx gaten geeeek gemelen gencha General1337 Gentle Gentlecat geordi gerrrt gg7 gibberish gilead glenfe glenfern Godslastering googol Gorroth graphitemaster GrecKo Greg44 gregj Griwes gry gsvolt guest1239 Guest49313 Guest90058 guifre hackkitten HaltingState Hamled hannes3 hauron hays HeatHawk heatxsink heiner_ heinrich5991 Helios hello2you2 HerzogDeXtEr Hopkinz houmles hrehf hrnt hubbe3 hyperair hyperboreean hz i7c iceisfun ido iKlsR ikonia Imek Immutable impulse150 incognito_ InCognitO` ingenious Ingmar int0x27h Internet13 interop_madness Intrepido ircnode0 Irishmanluke iron0088 ironzorg isbric ivan\ iZeR_ izhak j`ey jackarain|2 jakoch jamesn Jannevaa jantje Jarvis javierHund Jaxan jayne JBlitzen jesuisuntorrent Jeuzz jhoepken jhunold jimster jinjonBoo jlen joel_falcou JohnHamelink JonathanD jonnyli1125 jophish jott JPeterson jrdnn jrgill JSharpe_ jweinberg K1rk k299 K3|Chris Kaltiz kalven kami KaneTW Kartagis Kartrohm Kasreyn kavakava kchodorow kcj KeatonT keyvan kharon Kicer86 KindOne kkimlabs kloeri klow Knio KoVadim Krabbe KrzaQ kszatan ktch ktos kuplatupsu kurti_ Kuukunen l0pher l2esonance ladder4 lahwran LAMMJohnson lanemeyer larks larles Lasher` levi501d lilalinux Lillia7 lilltiger LjL LNCP localhost loglaunch Lokomotiv LordCrc LordShiva loxley lpvb LRN lskaglsd ltxda luki- Lycanthropist lyindArk_ lyrae M-ou-se m3thyl mac^ Maccer maddoc maddog_ madmoose makissy Malediction mama manel2020 MaNI marga martiert Martin8412 Martty Matthias|PC maum maw_ maxorator mdkess mdkess_ megaTherion melba mertsas mf_ mgaunard mikalv_ mikroflops Minoulefou mishehu MissionCritical mitch0 mitsuhiko mlody moeSeth Mogget molixiaoge MoMo MonkeyMichael moo mordy___ morfin Mosu Motig mousetrap mrcan mrh2 mritz MrKronus mrmist mrtrop muep MulleDK19 mulvane Munnu muteki Mws mYute n00b101 n00b6502 Nach0z nahhh nahmaste naquad nauman neersighted nenolod Neo17 Neptu nero neunon neurodamage Nibato` Nickeeh niczkx_ nierob Nightmare Nik05 nikoJ NimeshNeema NinjaPenguin noj_ nolyc nor5trom nots nrd ntrb ntx nutron o] o^nd_ Obfuscate obs Obvious Octal_ ofan Olipro omni5cience orafu orbitz Orginator ormaaj ormandj Orphis OxDeadC0de Oxyd Ozm pa palach pankaj_ pappa parcs` PARLIAMENT patson pbor peanuter pedantic_ pedro_angelo Pelish peper perolsen petteyg Pfargtl pferdone pgas phax pheredhel phr phschwartz PigFlu Pilate Pilum piotr pippijn piti pix1 plasickoto Plee polysix Posterdati pragma- Praise pretty_function primepie_ Programmer_ PSIONIK pucko_ pwned pyjar qdii qknight Qub1t radiofree rangergord Rapp rchatsiri rcj_ rcxdude rdpate redec reko_t rendar RePaste_ Repentinus retornam rexou rhl rhodesd rhythmx Richard_Cavell richardwhiuk ricky26 riotz Rix rizzle rndbit robbyoconnor robert___ robink RockstarRaccoon roflin roivas_ RokerHRO roland_ Rolz ross` rstrong ruediger rurufufuss rush2end rvchangue ryanakca s0und saati SaBer sacrebleu SAHChandler Saint__ Sairon sam samek samii SanguineAnomaly Sausage savenger Scary|coding scharan Schoentoon schroedinbug Scorchin Scub SecretAgent semeion Sergonium SeriousJack SeySayux sh4wn shades shintah ShishKabab Shuba shundread Silex silverwind SimonP86 sirdancealot7 SixtyFold Skywing SlashLife slummer Snaker snarkyboojum snearch SNiLD snkl Soap__ solarised solrize SorcererX sorressean soulcake Spark spb sporous spq SpX sShintah standoo stanley Starfire SteelBanana stepnem stfn straterra Stryyker subanark sudokode SugarCube suiside sujeet sunfun SunnyD suppahsrv Sweet-P symm- synapt systemfault sze tayne tazle teotwaki Terminus- termos tesuji tgs3 The_CooIest the_real_crimper TheBeerinator TheFuzzball thelamb TheNull thore Thorn Tidus- Tiffy tigger0jk Timbo TinoDidriksen tk___ TMAnders1on TMinus36 TMM tmyklebu toddpratt Toes_ tomaw torsan trapni trey trigen_ Trin ttvd TuTizz tuxdev Twey tyl tzarc Ububegin uman unreal_ urlgrabber UukGoblin V-ille vdv vektor VeXocide ville Vinnie_win Vir voidcoder vsayer vskaddanki vsrao VvV_ walmis wd40s weeb1e_ WhatThePfargtl whh Wiz126 woggle wolfbyte wordToDaBird WormDrink wormphlegm wting wu_lmao wuj xandy xantores xConMz Xethron xilo xiphiasx_ Xjs|moonshine xnavor xxtjaxx Y_Ichiro yamamushi yan_ yandong ybit yeltzooo7 yessopie yorick Younos yroeht zap0 Zharf ZoB Zol ZsoL zyphex Zyrkon zyrtech]
2012-08-14 08:56:50	--	Channel ##c++: 741 nicks (0 ops, 0 halfops, 0 voices, 741 normals)
2012-08-14 08:57:01	-->	Alice3 (~Alice@cpc3-grim12-0-0-cust856.12-3.cable.virginmedia.com) has joined ##c++
2012-08-14 08:57:06	--	Mode ##c++ [+CPcflnpt #overflow 850]
2012-08-14 08:57:06	--	Channel created on Sat, 15 Sep 2001 04:15:35
2012-08-14 08:57:18	-->	Ormie (~ormie.sut@unaffiliated/ormie) has joined ##c++
2012-08-14 08:57:26	<--	Ormie (~ormie.sut@unaffiliated/ormie) has left ##c++
2012-08-14 08:57:55	tesuji	Hi I am getting my colleagues to rely more on the stl and boost, so I wrote operator>> and << for the mfc CString. While they work with stringstreams, cin cout and so on, I cannot get boost::lexical_cast to work with them. people for composit custom types like struct vector {double x; double y;}; who ovrloaded these, reported a very similar problem because lexical_cast unsets ios::skipws, but in my  case there is no whitespace around! the code in question is
2012-08-14 08:57:55	tesuji	 here: http://ideone.com/LA1HF  I feel like I am missing something trivial
2012-08-14 08:57:55	-->	iiyo (~iiyo@cpc1-linc6-0-0-cust945.12-1.cable.virginmedia.com) has joined ##c++
2012-08-14 08:58:01	-->	magellanicloud (~magellani@HSI-KBW-091-089-175-206.hsi2.kabel-badenwuerttemberg.de) has joined ##c++
2012-08-14 08:58:08	<--	jrgill (~jrgill@unaffiliated/jrgill) has quit (Ping timeout: 252 seconds)
2012-08-14 08:59:57	<--	RockstarRaccoon (~cchristia@c-98-208-155-216.hsd1.fl.comcast.net) has quit (Quit: YOUR KIND WILL NEVER BE SAFE IN OTTERLAND, YOU HEAR?)
2012-08-14 09:00:34	mitch0	you lied
2012-08-14 09:00:49	mitch0	"While they work with  stringstreams, cin cout and so on
2012-08-14 09:01:05	tesuji	the wide version
2012-08-14 09:01:32	morfin	actually
2012-08-14 09:01:37	tesuji	since lexical_cast specifies i should overload for either istream/ostream or wistream/wostream
2012-08-14 09:02:46	-->	nojhan (~nojhan@2001:4b10:100:5::2) has joined ##c++
2012-08-14 09:02:46	<--	nojhan (~nojhan@2001:4b10:100:5::2) has quit (Changing host)
2012-08-14 09:02:46	-->	nojhan (~nojhan@pdpc/supporter/active/nojhan) has joined ##c++
2012-08-14 09:02:47	<--	Lillia7 (~lillia7@6abb386d.t-net.ne.jp) has quit (Quit: Leaving...)
2012-08-14 09:05:34	<--	mYute (~stranded@unaffiliated/myute) has quit (Ping timeout: 244 seconds)
2012-08-14 09:05:50	-->	Lillia7 (~lillia7@6abb386d.t-net.ne.jp) has joined ##c++
2012-08-14 09:06:11	-->	syo (~Mew@host86-183-23-160.range86-183.btcentralplus.com) has joined ##c++
2012-08-14 09:06:22	morfin	why you're trying to lexical_cast CString?
2012-08-14 09:06:46	<--	palach (~Miranda@92.55.10.190) has quit (Quit: Miranda IM! Smaller, Faster, Easier. http://miranda-im.org)
2012-08-14 09:06:51	qdii	morfin, http://stackoverflow.com/questions/5905155/is-this-infinite-recursion-ub
2012-08-14 09:06:58	qdii	someone answered to you actually :P
2012-08-14 09:07:10	morfin	hey!
2012-08-14 09:07:14	morfin	even while (true) {} is UB
2012-08-14 09:07:26	M-ou-se	huh, why is that UB?
2012-08-14 09:08:39	morfin	interesting
2012-08-14 09:08:41	morfin	{volatile int a = 0; while(1);}
2012-08-14 09:08:47	tesuji	morfin: to get away from ms specific libraries to platform independent ones (step by step). the plan is to port this piece of software but the current version of course always needs to be runnable
2012-08-14 09:08:47	geordi	Killed
2012-08-14 09:09:03	tesuji	so it is just an adapter for the time being
2012-08-14 09:09:21	morfin	but should not you do something like s.c_str()?
2012-08-14 09:09:33	morfin	when doing lexical_cast?
2012-08-14 09:10:11	-->	nilg (~user@ALagny-551-1-177-48.w90-3.abo.wanadoo.fr) has joined ##c++
2012-08-14 09:10:30	morfin	{std::string str("10");boost::lexical_cast<int>(str);}
2012-08-14 09:10:32	geordi	<no output>
2012-08-14 09:10:38	morfin	{std::string str("10");cout<<boost::lexical_cast<int>(str);}
2012-08-14 09:10:40	geordi	10
2012-08-14 09:10:54	morfin	ok for std::string it's defined probably
2012-08-14 09:11:08	tesuji	yeah it is, i was hoping to do it for CString too
2012-08-14 09:11:16	<--	hauron (~hauron@cpc25-haye18-2-0-cust20.17-4.cable.virginmedia.com) has quit (Read error: Connection reset by peer)
2012-08-14 09:11:23	morfin	nope
2012-08-14 09:11:29	morfin	std::string is standard
2012-08-14 09:11:31	tesuji	at the moment, i am casting to wchar_t when using it
2012-08-14 09:12:04	tesuji	lexical_cast<int>(const wchar_t* (CString("3")));
2012-08-14 09:12:09	morfin	idk how exactly lexical_cast works but hm
2012-08-14 09:12:18	<--	impulse150 (~impulse15@188.183.95.151) has quit (Quit: ihavenolegs)
2012-08-14 09:12:25	morfin	i think that's wrong
2012-08-14 09:13:13	tesuji	i missed some brackets, sorry its LPCWSTR
2012-08-14 09:13:21	tesuji	anyway
2012-08-14 09:13:34	tesuji	i dont want to spend too much time on it, or waste too much of yours
2012-08-14 09:13:38	<--	alexluya (~alexluya@111.186.6.36) has quit (Quit: Leaving)
2012-08-14 09:13:42	tesuji	thanks though
2012-08-14 09:13:45	moo	maybe std::ostream &perator << (std::ostream &output, const CString &str) { output.write(str.Get..., str.GetLength()); }
2012-08-14 09:13:48	morfin	oh you're casting to it but internally doing c_str?
2012-08-14 09:13:58	moo	not sure if std::ostream should be something else, more basic type
2012-08-14 09:13:58	-->	alexluya (~alexluya@111.186.6.36) has joined ##c++
2012-08-14 09:14:20	<--	Programmer_ (~khaotic@unaffiliated/khaotic) has quit (Remote host closed the connection)
2012-08-14 09:14:23	morfin	oh but this would not work
2012-08-14 09:14:24	morfin	int i = boost::lexical_cast<int>(s);
2012-08-14 09:14:24	-->	impulse150 (~impulse15@188.183.95.151) has joined ##c++
2012-08-14 09:14:25	joel_falcou	ostream is enough
2012-08-14 09:14:26	<--	Nibato` (~nibato@97-89-70-171.dhcp.jcsn.tn.charter.com) has quit (Ping timeout: 246 seconds)
2012-08-14 09:14:40	tesuji	true ostream should be enough
2012-08-14 09:14:47	tesuji	let me look at it again
2012-08-14 09:14:49	morfin	for what?
2012-08-14 09:15:00	-->	Mossa (~Mossa@ov3.formidling.dk) has joined ##c++
2012-08-14 09:15:25	tesuji	only the result type needs operator>>
2012-08-14 09:15:56	-->	narfnarfnarf (~narfnarfn@vpn-ch.sonova.com) has joined ##c++
2012-08-14 09:17:52	Beket	Hey people. I wrote istringstream iss(somestring); and compiler says: variable std::istringstream iss has initializer but incomplete type
2012-08-14 09:17:56	qdii	morfin, from what I heard, the standard says : "The implementation may assume that any thread will eventually do one of the following: - terminate, -make a call to a library I/O function,, -access or modify a volatile object, or - perform a synchronization operation or an atomic operation. "
2012-08-14 09:17:57	Beket	Why is that ?
2012-08-14 09:18:12	morfin	and
2012-08-14 09:18:17	qdii	"the implementation assume ..." is another way of saying "if it does not do that, then it is UB"
2012-08-14 09:18:30	morfin	hmmmm
2012-08-14 09:18:46	mitch0	tesuji: where did you get the wstream stuff (regarding lexical_cast)? What I found only talks about "plain" streams
2012-08-14 09:18:54	<--	d4de (~olorin@unaffiliated/d4de) has quit (Ping timeout: 276 seconds)
2012-08-14 09:19:04	morfin	but that's fun:
2012-08-14 09:19:06	qdii	I’m not saying that, this guy is: http://blog.regehr.org/archives/161
2012-08-14 09:19:11	morfin	{volatile int a = 0; while(1);}
2012-08-14 09:19:16	geordi	Killed
2012-08-14 09:19:30	tesuji	mitch#: http://www.boost.org/doc/libs/1_50_0/doc/html/boost_lexical_cast/synopsis.html#boost_lexical_cast.synopsis.lexical_cast
2012-08-14 09:19:32	nolyc	<http://tinyurl.com/c6bomjb> (at www.boost.org)
2012-08-14 09:19:36	-->	wobster (~jan@ls12nb9.cs.uni-dortmund.de) has joined ##c++
2012-08-14 09:19:51	-->	foor (~chatzilla@124.254.4.91) has joined ##c++
2012-08-14 09:20:11	mitch0	hm
2012-08-14 09:20:22	-->	Programmer_ (~khaotic@unaffiliated/khaotic) has joined ##c++
2012-08-14 09:20:56	--	robert___ is now known as roberT_
2012-08-14 09:20:59	--	roberT_ is now known as robert_
2012-08-14 09:21:04	<--	robert_ (~hellspawn@static-96-254-212-18.tampfl.fios.verizon.net) has quit (Changing host)
2012-08-14 09:21:04	-->	robert_ (~hellspawn@objectx/robert) has joined ##c++
2012-08-14 09:22:23	<--	ftsf (~ftsf@2407:7800:200:1001:219:d1ff:fe3a:7058) has quit (Quit: Leaving)
2012-08-14 09:22:51	-->	floe (~flo@e179007171.adsl.alicedsl.de) has joined ##c++
2012-08-14 09:23:43	morfin	oooh
2012-08-14 09:23:43	morfin	may be assumed by the implementation to terminate.
2012-08-14 09:23:47	morfin	terminate
2012-08-14 09:24:06	-->	tom___ (~tom@cpc4-benw9-2-0-cust709.gate.cable.virginmedia.com) has joined ##c++
2012-08-14 09:24:15	morfin	so what if will do somethign like this
2012-08-14 09:24:22	morfin	{volatile int a = 0; while(1){a++;};}
2012-08-14 09:24:28	geordi	Killed
2012-08-14 09:24:31	qdii	well you have your answer, this is UB
2012-08-14 09:24:38	morfin	sad :(
2012-08-14 09:24:39	<--	KrzaQ (krzaq@krzaq.cc) has quit (Disconnected by services)
2012-08-14 09:24:55	-->	KrzaQ (krzaq@krzaq.cc) has joined ##c++
2012-08-14 09:25:01	qdii	wait or is it
2012-08-14 09:25:03	tesuji	mitch0: im giving up for the time being, it is not that important anyway
2012-08-14 09:25:10	tesuji	thanks guys
2012-08-14 09:25:11	qdii	because it does access a volatile object doesn’t it
2012-08-14 09:25:44	morfin	{volatile int a = 0; while(1){a++;};} does
2012-08-14 09:25:44	geordi	error: 'does' does not name a type
2012-08-14 09:25:52	morfin	{volatile int a = 0; while(1);} does not
2012-08-14 09:25:52	geordi	Same error.
2012-08-14 09:26:11	morfin	<<BARK;
2012-08-14 09:26:13	geordi	main(int, char**) 0
2012-08-14 09:26:47	<--	sze (~sze@c-24-19-210-193.hsd1.wa.comcast.net) has quit (Ping timeout: 244 seconds)
2012-08-14 09:26:48	-->	HajasLm (mouli@nat/nokia/x-wygiazzgehabxmpm) has joined ##c++
2012-08-14 09:26:55	<--	the_real_crimper (~crimper@cpe-98-154-91-166.socal.res.rr.com) has quit (Ping timeout: 260 seconds)
2012-08-14 09:26:57	qdii	I have a train in 20 min, I should get ready, but Im still looking for explanations on that thing :P
2012-08-14 09:27:46	-->	mtrd` (~mtrd@2a01:e35:2e61:ca70:92fb:a6ff:fee1:274b) has joined ##c++
2012-08-14 09:27:47	<--	mtrd` (~mtrd@2a01:e35:2e61:ca70:92fb:a6ff:fee1:274b) has quit (Changing host)
2012-08-14 09:27:47	-->	mtrd` (~mtrd@unaffiliated/waxon) has joined ##c++
2012-08-14 09:27:51	morfin	it's going to run forever
2012-08-14 09:28:19	-->	floe_ (~flo@f052096025.adsl.alicedsl.de) has joined ##c++
2012-08-14 09:29:01	qdii	morfin, I think its defined behavior but geordi gets bored
2012-08-14 09:29:16	<--	floe (~flo@e179007171.adsl.alicedsl.de) has quit (Ping timeout: 260 seconds)
2012-08-14 09:29:16	<--	CodeDroid_ (~CodeDroid@195.238.92.174) has quit (Quit: ~ Trillian Astra - www.trillian.im ~)
2012-08-14 09:29:36	qdii	now if you remove the "volatile" modifier, is it still defined behavior?
2012-08-14 09:29:49	<--	Ch3y3ZZE (~chatzilla@cpe-76-87-64-175.socal.res.rr.com) has quit (Ping timeout: 260 seconds)
2012-08-14 09:29:56	 *	qdii wanna miss his train
2012-08-14 09:30:19	morfin	seems like it becomes UB
2012-08-14 09:30:24	morfin	when not volatile
2012-08-14 09:30:40	qdii	funny
2012-08-14 09:30:52	morfin	{int a = 0; while(1);}
2012-08-14 09:30:58	geordi	Killed
2012-08-14 09:31:05	qdii	i mean, with the a++
2012-08-14 09:31:12	qdii	its accessing a non-volatile object
2012-08-14 09:31:13	morfin	{int a = 0; while(1){++a;};}
2012-08-14 09:31:15	<--	dirtydawg (dirtydawg@gateway/shell/blinkenshell.org/x-tlzyfvrzcgpyymle) has quit (Ping timeout: 240 seconds)
2012-08-14 09:31:16	<--	mf_ (~martin@188.113.102.22) has quit (Ping timeout: 240 seconds)
2012-08-14 09:31:17	geordi	Killed
2012-08-14 09:31:22	-->	dirtydawg (dirtydawg@gateway/shell/blinkenshell.org/x-gwbeykspcsubiyup) has joined ##c++
2012-08-14 09:31:29	morfin	i am going to go :(
2012-08-14 09:31:32	-->	mf_ (~martin@188.113.102.22) has joined ##c++
2012-08-14 09:31:33	qdii	that causes a slaughter
2012-08-14 09:31:34	SaBer	not all UB is detected by geordi
2012-08-14 09:31:45	-->	deSilva (~deSilva@144.187.32.17) has joined ##c++
2012-08-14 09:31:54	<--	asakura (~asakura@gateway/tor-sasl/asakura) has quit (Ping timeout: 276 seconds)
2012-08-14 09:31:56	morfin	but this one is
2012-08-14 09:31:59	<--	Programmer_ (~khaotic@unaffiliated/khaotic) has quit (Remote host closed the connection)
2012-08-14 09:32:21	morfin	geordi, void func(){func();} int main(){func();}
2012-08-14 09:32:22	geordi	Undefined behavior detected.
2012-08-14 09:33:11	qdii	okay guys, see ya later
2012-08-14 09:33:18	-->	CodeDroid_ (~DroidKree@195.238.92.174) has joined ##c++
2012-08-14 09:33:32	<--	qdii (~qdii@juv34-1-82-225-183-37.fbx.proxad.net) has quit (Quit: Leaving)
2012-08-14 09:33:34	<--	magellanicloud (~magellani@HSI-KBW-091-089-175-206.hsi2.kabel-badenwuerttemberg.de) has quit (Ping timeout: 265 seconds)
2012-08-14 09:34:24	<--	General1337 (~General13@71-93-97-115.dhcp.mtpk.ca.charter.com) has quit (Remote host closed the connection)
2012-08-14 09:35:07	-->	Nibato (~nibato@97-89-70-171.dhcp.jcsn.tn.charter.com) has joined ##c++
2012-08-14 09:36:12	-->	RazielZ (~Raziel@78.97.99.188) has joined ##c++
2012-08-14 09:36:20	-->	netmind (~mind@93-58-196-214.ip160.fastwebnet.it) has joined ##c++
2012-08-14 09:36:24	-->	nonick (~Alliz_Tah@p54BF6412.dip.t-dialin.net) has joined ##c++
2012-08-14 09:36:47	<--	ShishKabab (~vincent@195.191.202.173) has quit (Quit: Konversation terminated!)
2012-08-14 09:37:19	<--	dirtydawg (dirtydawg@gateway/shell/blinkenshell.org/x-gwbeykspcsubiyup) has quit (Ping timeout: 268 seconds)
2012-08-14 09:38:57	-->	Programmer_ (~khaotic@unaffiliated/khaotic) has joined ##c++
2012-08-14 09:39:43	-->	asakura (~asakura@gateway/tor-sasl/asakura) has joined ##c++
2012-08-14 09:40:24	<--	hays (~quassel@unaffiliated/hays) has quit (Ping timeout: 268 seconds)
2012-08-14 09:40:27	-->	Vert (~quassel@vlan116.pact.srf.ac.uk) has joined ##c++
2012-08-14 09:42:35	<--	glenfe (~glen@unaffiliated/glenfe) has quit (Ping timeout: 240 seconds)
2012-08-14 09:42:50	<--	floe_ (~flo@f052096025.adsl.alicedsl.de) has quit (Remote host closed the connection)
2012-08-14 09:42:51	-->	floe__ (~flo@f052096025.adsl.alicedsl.de) has joined ##c++
2012-08-14 09:43:43	<--	pedro_angelo (~pedro_ang@186-241-158-93.user.veloxzone.com.br) has quit (Read error: Connection reset by peer)
2012-08-14 09:44:27	<--	jophish (~jophish@cpc25-cmbg15-2-0-cust16.5-4.cable.virginmedia.com) has quit (Remote host closed the connection)
2012-08-14 09:44:31	-->	dirtydawg (~dirtydawg@cpc4-benw9-2-0-cust709.gate.cable.virginmedia.com) has joined ##c++
2012-08-14 09:44:31	<--	dirtydawg (~dirtydawg@cpc4-benw9-2-0-cust709.gate.cable.virginmedia.com) has quit (Changing host)
2012-08-14 09:44:31	-->	dirtydawg (~dirtydawg@unaffiliated/dirtydawg) has joined ##c++
2012-08-14 09:44:51	<--	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has quit (Read error: Connection reset by peer)
2012-08-14 09:45:04	-->	Lokomotiv (~ASAP@unaffiliated/lokomotiv) has joined ##c++
2012-08-14 09:45:27	-->	vchang (~chatzilla@118-163-10-190.HINET-IP.hinet.net) has joined ##c++
2012-08-14 09:45:39	<--	hz (~hz@unaffiliated/hz) has quit (Ping timeout: 272 seconds)
2012-08-14 09:46:03	-->	Sven_Shady (~quassel@p54891B64.dip.t-dialin.net) has joined ##c++
2012-08-14 09:46:41	<--	dirtydawg (~dirtydawg@unaffiliated/dirtydawg) has quit (Read error: Connection reset by peer)
2012-08-14 09:46:48	-->	rmunoz (~rmunoz@207.Red-79-156-22.staticIP.rima-tde.net) has joined ##c++
2012-08-14 09:46:58	-->	dirtydawg (~dirtydawg@unaffiliated/dirtydawg) has joined ##c++
2012-08-14 09:47:31	-->	Criztian (~criztian@239-210.198-178.cust.bluewin.ch) has joined ##c++
2012-08-14 09:48:30	<--	JBlitzen (JBlitzen@cpe-72-230-241-202.rochester.res.rr.com) has quit (Quit: <hollenjf> I'm interviewing for a SQL programming Monday. What functions does the role of an SQL programmer do?)
2012-08-14 09:49:05	<--	pferdone (~bla@pd95b81a3.dip0.t-ipconnect.de) has quit
2012-08-14 09:51:01	<--	dhruvasagar (~dhruvasag@122.172.230.166) has quit (Ping timeout: 256 seconds)
2012-08-14 09:51:38	-->	dhruvasagar (~dhruvasag@122.172.230.166) has joined ##c++
2012-08-14 09:53:55	<--	snearch (~snearch@pD4B887CE.dip.t-dialin.net) has quit (Quit: Verlassend)
2012-08-14 09:54:42	-->	delicado (~delicado2@121.54.44.225) has joined ##c++
2012-08-14 09:55:30	-->	Raziel_ (~Raziel@78.97.99.188) has joined ##c++
2012-08-14 09:55:42	-->	rougedragon (~rougedrag@c-98-252-4-77.hsd1.de.comcast.net) has joined ##c++
2012-08-14 09:56:07	-->	floe (~flo@f052098051.adsl.alicedsl.de) has joined ##c++
2012-08-14 09:56:42	<--	Matthias|PC (~Matthias@65.128-243-81.adsl-dyn.isp.belgacom.be) has quit (Read error: Connection reset by peer)
2012-08-14 09:57:07	-->	kumelk (and@2001:700:303:e:9803:5cae:428a:d0f2) has joined ##c++
2012-08-14 09:57:07	-->	hz (~hz@unaffiliated/hz) has joined ##c++
2012-08-14 09:57:44	<--	zap0 (~moofy@123-243-103-30.static.tpgi.com.au) has quit (Read error: Connection reset by peer)
2012-08-14 09:57:54	<--	floe__ (~flo@f052096025.adsl.alicedsl.de) has quit (Ping timeout: 276 seconds)
2012-08-14 09:58:16	<--	rougedragon (~rougedrag@c-98-252-4-77.hsd1.de.comcast.net) has quit (Read error: Connection reset by peer)
2012-08-14 09:59:01	<--	RazielZ (~Raziel@78.97.99.188) has quit (Ping timeout: 248 seconds)
2012-08-14 09:59:13	-->	assertsmart (~assertsma@78.97.253.170) has joined ##c++
2012-08-14 10:00:21	-->	rougedragon (~rougedrag@c-98-252-4-77.hsd1.de.comcast.net) has joined ##c++
2012-08-14 10:00:30	<--	dhruvasagar (~dhruvasag@122.172.230.166) has quit (Ping timeout: 248 seconds)
2012-08-14 10:00:37	-->	litb (~litb@ip-109-84-0-86.web.vodafone.de) has joined ##c++
2012-08-14 10:00:42	litb	hello folks
2012-08-14 10:00:48	<--	asakura (~asakura@gateway/tor-sasl/asakura) has quit (Remote host closed the connection)
2012-08-14 10:00:50	<--	Raziel_ (~Raziel@78.97.99.188) has quit (Read error: Connection reset by peer)
2012-08-14 10:00:52	reko_t	hi
2012-08-14 10:00:59	litb	whats up
2012-08-14 10:01:05	-->	RazielZ (~Raziel@78.97.99.188) has joined ##c++
2012-08-14 10:01:07	<--	assertsmart|2 (~assertsma@78.97.253.170) has quit (Ping timeout: 240 seconds)
2012-08-14 10:01:27	<--	KeatonT (~KeatonT@unaffiliated/keatont) has quit (Quit: Computer has gone to sleep.)
2012-08-14 10:01:39	-->	dhruvasagar (~dhruvasag@122.172.230.166) has joined ##c++
2012-08-14 10:02:04	-->	Yustme (~fasdfa@dhcp-089-098-055-230.chello.nl) has joined ##c++
2012-08-14 10:02:30	<--	floe (~flo@f052098051.adsl.alicedsl.de) has quit (Ping timeout: 260 seconds)
2012-08-14 10:02:54	<--	maum (~maum@210.119.60.152) has quit (Remote host closed the connection)
2012-08-14 10:02:55	-->	asakura (~asakura@gateway/tor-sasl/asakura) has joined ##c++
2012-08-14 10:03:15	<--	tigger0jk (~tigger0jk@c-71-202-39-119.hsd1.ca.comcast.net) has quit
2012-08-14 10:03:23	litb	v-ille the mobile version of googlegroups sucks :-(
2012-08-14 10:03:35	-->	Lleo (~Lleo@5355B522.cm-6-6c.dynamic.ziggo.nl) has joined ##c++
2012-08-14 10:04:26	-->	Matthias|PC (~Matthias@65.128-243-81.adsl-dyn.isp.belgacom.be) has joined ##c++
2012-08-14 10:04:33	-->	gusnan (~gusnan@h104n3c1o269.bredband.skanova.com) has joined ##c++
2012-08-14 10:04:55	-->	RockstarRaccoon (~cchristia@c-98-208-155-216.hsd1.fl.comcast.net) has joined ##c++
2012-08-14 10:05:03	<--	ApEk (43ead23e@gateway/web/freenode/ip.67.234.210.62) has left ##c++
2012-08-14 10:06:11	<--	PigFlu (~herp@unaffiliated/pigflu) has left ##c++ ("dthdrthdrth")
2012-08-14 10:09:03	-->	webit0 (~webit0@dhcp-41-5-dm-commercecity-65202-united-states.wellsite.slb.com) has joined ##c++
2012-08-14 10:09:58	-->	zeleni_zub (~zz@195.178.42.82) has joined ##c++
2012-08-14 10:12:05	<--	TheBeerinator (~TheBeerin@c-69-180-168-147.hsd1.mn.comcast.net) has quit
2012-08-14 10:12:49	-->	magellanicloud (~magellani@HSI-KBW-091-089-175-206.hsi2.kabel-badenwuerttemberg.de) has joined ##c++
2012-08-14 10:15:12	<--	alexluya (~alexluya@111.186.6.36) has quit (Quit: Leaving)
2012-08-14 10:15:47	-->	TheBeerinator (~TheBeerin@c-69-180-168-147.hsd1.mn.comcast.net) has joined ##c++
2012-08-14 10:17:15	<--	uman (~grammar_s@unaffiliated/uman) has quit (Quit: leaving)
2012-08-14 10:18:06	<--	yandong (~yandong@2400:dd01:1001:0:448d:a94c:1a2e:f694) has quit (Read error: Connection reset by peer)
2012-08-14 10:18:15	<--	magellanicloud (~magellani@HSI-KBW-091-089-175-206.hsi2.kabel-badenwuerttemberg.de) has quit (Ping timeout: 260 seconds)
2012-08-14 10:19:09	-->	mads- (~mar@nat.statsbiblioteket.dk) has joined ##c++
2012-08-14 10:19:41	-->	magellanicloud (~magellani@HSI-KBW-091-089-175-206.hsi2.kabel-badenwuerttemberg.de) has joined ##c++
2012-08-14 10:20:19	<--	Lleo (~Lleo@5355B522.cm-6-6c.dynamic.ziggo.nl) has left ##c++
2012-08-14 10:20:24	--	SteelBanana is now known as unknownbanana
2012-08-14 10:21:05	-->	ambro718 (~ambro@BSN-77-101-149.dsl.siol.net) has joined ##c++
2012-08-14 10:21:12	<--	magellanicloud (~magellani@HSI-KBW-091-089-175-206.hsi2.kabel-badenwuerttemberg.de) has quit (Client Quit)
2012-08-14 10:21:14	-->	snuggl (~krs@ip-91-123-200-160.kna.citycloud.se) has joined ##c++
2012-08-14 10:21:43	-->	Deadboys (~Deadboys@unaffiliated/deadboys) has joined ##c++
2012-08-14 10:23:01	<--	litb (~litb@ip-109-84-0-86.web.vodafone.de) has quit (Quit: Bye)
2012-08-14 10:23:38	RokerHRO	:-)
2012-08-14 10:23:54	<--	asakura (~asakura@gateway/tor-sasl/asakura) has quit (Ping timeout: 276 seconds)
2012-08-14 10:25:01	-->	peter__ (~peter@2001:610:674:68:1a03:73ff:fe4e:4a73) has joined ##c++
2012-08-14 10:25:04	-->	mire_ (~mire@85.222.222.254) has joined ##c++
2012-08-14 10:25:34	-->	Bofu (~Bofu2U@pool-108-3-191-153.bltmmd.fios.verizon.net) has joined ##c++
2012-08-14 10:25:51	<--	peter__ (~peter@2001:610:674:68:1a03:73ff:fe4e:4a73) has quit (Client Quit)
2012-08-14 10:29:07	-->	Domiiii (domi@1-162-89-239.dynamic.hinet.net) has joined ##c++
2012-08-14 10:29:20	-->	Patteh (~BOB@cpc9-hari15-2-0-cust297.20-2.cable.virginmedia.com) has joined ##c++
2012-08-14 10:29:21	<--	Boffers (~Bofu2U@pool-108-3-191-153.bltmmd.fios.verizon.net) has quit (Ping timeout: 272 seconds)
2012-08-14 10:29:26	<--	Patteh (~BOB@cpc9-hari15-2-0-cust297.20-2.cable.virginmedia.com) has quit (Changing host)
2012-08-14 10:29:26	-->	Patteh (~BOB@unaffiliated/patteh) has joined ##c++
2012-08-14 10:31:39	-->	infa1488 (~infa1488@host31-42-17-151.tvkdiana.pl) has joined ##c++
2012-08-14 10:31:57	-->	Matthias|Laptop (~matthias@65.128-243-81.adsl-dyn.isp.belgacom.be) has joined ##c++
2012-08-14 10:32:22	-->	Rajesh (~Rajesh@117.203.2.12) has joined ##c++
2012-08-14 10:32:24	-->	suy (~modpow@113.Red-83-54-203.dynamicIP.rima-tde.net) has joined ##c++
2012-08-14 10:32:45	--	Rajesh is now known as Guest87792
2012-08-14 10:32:47	<--	moo (~moo@lighttpd/moo) has quit (Remote host closed the connection)
2012-08-14 10:33:30	-->	jesyspa (~jesyspa@ip4da1331c.direct-adsl.nl) has joined ##c++
2012-08-14 10:35:22	-->	jem777 (~jem@dslb-188-096-221-215.pools.arcor-ip.net) has joined ##c++
2012-08-14 10:35:36	<--	nonick (~Alliz_Tah@p54BF6412.dip.t-dialin.net) has quit (Quit: ChatZilla 0.9.88.2 [Firefox 14.0.1/20120713134347])
2012-08-14 10:35:55	-->	TomyLobo (~foo@91-66-115-249-dynip.superkabel.de) has joined ##c++
2012-08-14 10:37:58	-->	SyouJyoA (~perfume@175.244.199.159) has joined ##c++
2012-08-14 10:38:44	-->	Rabenklaue (~Rabe@e179056043.adsl.alicedsl.de) has joined ##c++
2012-08-14 10:39:27	-->	Seppoz (~Invincibl@lvps83-169-0-164.dedicated.hosteurope.de) has joined ##c++
2012-08-14 10:39:27	<--	Seppoz (~Invincibl@lvps83-169-0-164.dedicated.hosteurope.de) has quit (Changing host)
2012-08-14 10:39:27	-->	Seppoz (~Invincibl@unaffiliated/seppoz) has joined ##c++
2012-08-14 10:40:23	Rabenklaue	Hi, does anyone have an idea for realising something like this: http://ideone.com/BSas5 (a JS-like initialization of C++ structs using named parameters). I've looked at Boosts implementation of named parameters, but I won't be able to use boost as a dependency.
2012-08-14 10:40:25	<--	davv3 (davve@tapir.haninge.kth.se) has quit (Ping timeout: 260 seconds)
2012-08-14 10:40:52	-->	uman (~grammar_s@unaffiliated/uman) has joined ##c++
2012-08-14 10:41:13	-->	thalassarche (~thalassar@unaffiliated/thalassarche) has joined ##c++
2012-08-14 10:41:42	<--	Bao (~bao@tcbl06.theophys.kth.se) has quit (Ping timeout: 245 seconds)
2012-08-14 10:41:50	-->	speedy (speedy@86.123.43.49) has joined ##c++
2012-08-14 10:42:02	speedy	crash on -O0 -g3 http://imagebin.org/224505
2012-08-14 10:42:31	speedy	how can gdb not display the function names?
2012-08-14 10:42:59	Rabenklaue	Furthermore named parameters are not what I want to do exactly, I need the ability for named member initialization. With c++11 there are initializer-lists, but they do not support multiple types, or? Only one: std::vector<int> v = {1,2,3,4} (here only ints) ?
2012-08-14 10:43:01	speedy	I have no idea where the segfault is happening
2012-08-14 10:43:02	<--	SyouJyoA (~perfume@175.244.199.159) has quit (Quit: Leaving~)
2012-08-14 10:43:13	Twey	Rabenklaue: C99 gives you designated initializers like { .foo = 5, .bar = "quux" }
2012-08-14 10:43:35	Twey	But I don't know if they're available in C++
2012-08-14 10:44:05	Rabenklaue	speedy: Looks like you're passing a nullptr to a std::string constructor?!?
2012-08-14 10:44:12	Twey	speedy: gdb can fail to display the function names if their compilation unit hasn't been compiled with debugging symbols
2012-08-14 10:45:21	speedy	well all my project is compiled with -O0 and -g3
2012-08-14 10:45:36	Rabenklaue	Twey: The designated initializers are exactly what I was looking for. Too bad they are not offically supported in C++...
2012-08-14 10:45:43	-->	DarkPeak (~DarkPeak@host-2-102-9-181.as13285.net) has joined ##c++
2012-08-14 10:45:43	<--	DarkPeak (~DarkPeak@host-2-102-9-181.as13285.net) has quit (Changing host)
2012-08-14 10:45:43	-->	DarkPeak (~DarkPeak@unaffiliated/darkpeak) has joined ##c++
2012-08-14 10:45:49	speedy	not sure if this is a limitation of gdb, a limitation of the IDE or it's just normal
2012-08-14 10:47:18	-->	inkjetunito (~fsww@unaffiliated/inkjetunit) has joined ##c++
2012-08-14 10:47:20	Twey	Rabenklaue: You could perhaps create a constructor that takes a std::map
2012-08-14 10:47:53	speedy	run gdb from command line, that's as much as gdb can produce, no further info
2012-08-14 10:47:56	Twey	Rabenklaue: std::maps can be constructed with an initializer list like {{"foo", 5}, {"bar", "quux"}}
2012-08-14 10:48:35	Twey	So you'd get something like your_struct strct({{"foo", 5}, {"bar", "quux"}});
2012-08-14 10:49:43	TinoDidriksen	!give speedy valgrind it
2012-08-14 10:49:44	nolyc	speedy: Install valgrind from your package manager or http://valgrind.org/, then compile your program with -O0 -g3, then run valgrind -v --leak-check=full ./myProgram and read the output.
2012-08-14 10:50:22	speedy	thanks
2012-08-14 10:50:48	-->	Deadboys_ (~Deadboys@cpe-24-242-38-140.hot.res.rr.com) has joined ##c++
2012-08-14 10:52:08	Twey	Rabenklaue: Of course, that would come with some runtime overhead
2012-08-14 10:52:17	-->	Palmik (~palmik@120-49-80-78.tmcz.cz) has joined ##c++
2012-08-14 10:52:25	Twey	And you lose some type-safety too
2012-08-14 10:52:26	<--	samii (~samii@sjfw1-a.adobe.com) has quit (Ping timeout: 252 seconds)
2012-08-14 10:53:31	-->	samii (~samii@sjfw1-a.adobe.com) has joined ##c++
2012-08-14 10:53:46	<--	DarkPeak (~DarkPeak@unaffiliated/darkpeak) has quit (Quit: Leaving)
2012-08-14 10:54:09	-->	davv3 (davve@tapir.haninge.kth.se) has joined ##c++
2012-08-14 10:54:15		irc: disconnected from server
2012-08-18 14:57:47	-->	JohnHamelink (~JohnHamel@ks393762.kimsufi.com) has joined ##c++
2012-08-18 14:57:47	--	Topic for ##c++ is "ISO/IEC 14882:2011 (a.k.a. C++11) is PUBLISHED!!  || Can't speak? Identify to NickServ || http://www.parashift.com/c++-faq-lite/ || pastes: http://ideone.com/ || other channels: ##c++-basic, ##c++-general, ##c++-social, ##iso-c++ || we don't do homework"
2012-08-18 14:57:47	--	Topic set by Eelis (~Eelis@unaffiliated/eelis) on Sat, 03 Sep 2011 19:59:56
2012-08-18 14:57:47	--	Nicks ##c++: [aarch ace2001ac acrocity Adran Adrinael aguai ahf aib|2 akiress alamar alastair AlbireoX_ alderz alek_br Alice3 AllenJB altin ambro718 ambroff an0maly_ anaconda Anasazi Anders_J Andon andres animorten ansiwen antto Apocalypse archangelpetro arnoldB aroga Arttu arun asakura ashfagg assertsmart atubbs Automorphism awx Azzkikr b_jonas BadDesign baedert Bamieater base84 bastii Bavo bburhans Belgarion0 Bigcheese bipul Bish bitlord blackace BlastHardcheese blenny blo Bloodust bloony bluebomber BoAnd bolosaur bolt BombStrike bone BoomBox boris`` boxofrox bps bratner Brklyn bryno BSDBlack Burgundy bvs Bwild C00re CaffeCorretto casion caveat- ceradon-away cfairles chalcedony CharlieM75 Chaser chayin chayin_ cheese1756 chenwj Chestal chewyDelicious chrisbuchholz ciaranm cinalyc CJKay cl0ud clang classix clipon coldpizza72i Collin comawhite companion_cube coppro cortana2 Count_Niedar cp133 Cr8 crib cribert- crl crocket cruxeternus cryptic cuqa curfont cyberspace- cYmen d-old d1zzy d3nys d4de damir__ dan_w dangerousdave Danio dansan DanyO83 darkc0met darkcon daryl_ dau DavidChenware davv3 DeadSix27 Deathzor decltype DeeTah Defaultti Delf demi` dethredic dflurker_ dh dhruvasagar Dicebot dijital1 dindinx dinesh___ dirtydawg dj_pi djinni`_ Dobz Domiiii doodle77 DorianG Dotti Drajwer_ drgreenthumb dropdrive dross drummer306 dumont DustyDin1o du|dx dv_ dvoid Dweezahr dyek__ Dynad dys eataix edlinde edr Eelis efjboss eko elbeardmorez Eleth elliottc1ble em enkomax envi EPIK ericP ernini Erryx evanz explodus FabTG_ failingkid Fapple fasta_ felipe fhd_ Fireblasto fisted Flannel Fleck flux Forge_ FrameFever FriskyKat froggey Fuco Fuuzetsu Fuxx Ganentcyz gaten gb_away geeeek gemelen gencha Gentle geordi Gerald_ gg7 gibberish gibsonfs gjvc glenfe Gnero gnusar Godslastering Gorroth graphitemaster GrecKo Greg44 gregj groupcat gsvolt Guest35179 Guest7221 Guest89947 Guest90058 guifre gusnan hackkitten HaltingState Hamled hannes3 Hasbro hayander hays HeatHawk[AP2] heatxsink heiner heinrich5991 Helios HerzogDeXtEr1 Hopkinz houmles hrehf hrnt hubbe3 hyperair hyperboreean hz i7c iceisfun ido IgnisInCaelum iiyo iKlsR ikonia iLogical_ incognito_ ineb infa1488 ingeniou1 Ingmar int0x27h Internet13 io2 ircnode0 Irishmanluke ironzorg isbric ivan\ iZeR_ j`ey jackarain jakoch jamesn Jannevaa jantje Jarvis javierHund Jaxan jayne jesuisuntorrent jesyspa jhoepken jimster jlen JohnHamelink JonathanD jonnyli1125 jott JPeterson jrdnn_ jrgill jrickman JSharpe_ julmuri- jweinberg K1rk k299 K3|Chris KAHR-Alpha kakashi_ Kaltiz kalven KaneTW karab44 Kartrohm Kasreyn kavakava kchodorow kcj keyvan Khoyo Kicer86 killerboy KindOne kkimlabs klipeto kloeri Knio KNRO Krabbe kramkram krs KrzaQ kszatan_ ktch Kulrak kumelk kuplatupsu kurti Kuukunen kvasir Kyzz l2esonance ladder4 lahwran lanemeyer larks larles Lasher` ldp_ leo2007 lilalinux Lillia7 lilltiger lim3 LjL lluu_ LNCP localhost loglaunch Lokomotiv LordShiva loxley LRN luki- Lycanthropist lyindArk_ M-ou-se m4ggus mac^ Maccer maddoc maddog_ madmoose Malediction mama manel2020 MaNI marga martiert Martin8412 Martty mattt_ maum_ch maw maxorator megaTherion melba mertsas mesger mexlex mf_ mgaunard mikalv mike4_ mikko777 mikroflops mindtheory Minoulefou mire__ mishehu MissionCritical mitch0 mitsuhiko miturn MK` moeSeth Mogget MoMo morfin mortalius_ Mosu mousetrap MrBeast mrbro mrh MrKronus mrOrangeChuck2 mtrd` muep mulvane Munnu muteki Mws n00b6502 Nach0z nahhh nahmaste naquad nauman navatwo neersighted nenolod Neo17 nero netrino neunon neurodamage newt0n Nibato Nickeeh nicolasph niczkx nierob Nightmare Nik05 nilg NimeshNeema NinjaPenguin noj_ nolyc nots nrd ntrb ntx nutron nyuszika7h o] o^nd_ Obfuscate Obvious Octal_ ofan Oflocet Olipro omni5cience Oohm orafu orbitz Orginator ormaaj Orphis overburn OxDeadC0de Oxyd Ozm pa Palmik patson paule32 paullik pbor peanuter pedantic peper perolsen peterolen petteyg Pfargtl pferor pgas pheredhel phschwartz PigFlu Pilate Pilum piotr pippijn piti pix1 plasickoto Plee plouffe polloscanfly Posterdati pragma- Praise primepie_ pucko pwned qdii qknight Questutis qwngknwkf r0bby radiofree__ rajkosto rangergord Rapp ratatata rcj_ rcxdude rdpate ReachingFarr real_tehtros redec reko_t rendar RePaste Repentinus retornam rexou rhythmx richardwhiuk rickytaylor26_ riotz Rix rndbit roadt roaet robert_ robink roflin roivas_ roland_ Rolz ross` rstrong ruediger rush2end rvchangue ryanakca ryonagana s0und saati_ SaBer Sachiru SAHChandler sakydpozrux sam samek samii SanguineAnomaly sarro Sausage savenger scharan Schoentoon schroedinbug Scorchin Scub SecretAgent SecretFire seion semeion Seppoz Sergonium setmeaway SeySayux sh4wn shades shdpl shintah ShishKabab Shuba Silex silverwind SimonP86 simonsays1980 sk0rv Skywing SlashLife slummer Snaker snarkyboojum SNiLD snkl snorble_ Soap__ solarised SorcererX sorressean soulcake Spark sphenxes sporous spq SpX squig Starfire stepnem stfn straterra Stryyker sudokode SugarCube suiside sujeet sunfun suppahsrv Sven_Shady sweet|kid symm- synapt systemfault tamurt tayne tazle teotwaki Terminus- termos thalassarche The_CooIest the_real_crimper TheBeerinator TheFuzzball thelamb TheNull thore Tidus- Tiffy Timbo TinoDidriksen tjadc tk_ TMAnders1on tmandry TMinus36 TMM tmnt tmyklebu toddpratt Toes tomaw toothr torsan trapni trigen trigger Trin ttvd tuxdev Twey tzarc Ububegin uman unreal urlgrabber UukGoblin V-ille vchang VeXocide VieiraN Villadelfia ville vjn voidcoder vsayer vskaddanki walmis wbooze wd40s_ weeb1e_ West- willll wilx woggle wolfbyte WormDrink wormphlegm wting wu_lmao wuj xandy xantores XaS XAVeRY xConMz xilo xiphiasx_ xissburg Xjs|moonshine xnavor xxtjaxx_ yamamushi yan_ yareally_ ybit yeltzooo7 yhager yorick Younos_ yroeht Yustme zhangxaochen_ Zharf ZoB Zol ZsoL zyphex Zyrkon zyrtech zzing_ z|Andy]
2012-08-18 14:57:47	--	Channel ##c++: 726 nicks (0 ops, 0 halfops, 0 voices, 726 normals)
2012-08-18 14:57:50	<--	rajkosto (~rajkosto@wan.rajkonet.info) has quit (Read error: Connection reset by peer)
2012-08-18 14:58:02	--	Mode ##c++ [+CPcflnpt #overflow 850]
2012-08-18 14:58:02	--	Channel created on Sat, 15 Sep 2001 04:15:35
2012-08-18 14:58:15	-->	rajkosto (~rajkosto@wan.rajkonet.info) has joined ##c++
2012-08-18 15:00:25	<--	simonsays1980 (~simonzehn@koln-4db4eeb3.pool.mediaWays.net) has quit (Quit: simonsays1980)
2012-08-18 15:01:00	<--	ineb (~ineb@flnb-d9bf90dd.pool.mediaWays.net) has quit (Ping timeout: 260 seconds)
2012-08-18 15:01:09	-->	Micom (~Micom@dynamic-78-8-14-31.ssp.dialog.net.pl) has joined ##c++
2012-08-18 15:01:10	<--	Micom (~Micom@dynamic-78-8-14-31.ssp.dialog.net.pl) has quit (Changing host)
2012-08-18 15:01:10	-->	Micom (~Micom@unaffiliated/micom) has joined ##c++
2012-08-18 15:02:59	<--	kcj (~casey@unaffiliated/kcj) has quit (Ping timeout: 246 seconds)
2012-08-18 15:04:07	<--	Sachiru (~Sachiru@120.29.81.121) has quit (Quit: Shutting Down)
2012-08-18 15:04:42	-->	Lleo (~Lleo@5355B522.cm-6-6c.dynamic.ziggo.nl) has joined ##c++
2012-08-18 15:05:46	<--	Lleo (~Lleo@5355B522.cm-6-6c.dynamic.ziggo.nl) has left ##c++
2012-08-18 15:06:24	<--	lilltiger (~sabayonus@h-31-229.a324.priv.bahnhof.se) has quit (Read error: Connection reset by peer)
2012-08-18 15:06:24	-->	nor5trom (~nor5trom@unaffiliated/nor5trom) has joined ##c++
2012-08-18 15:07:35	<--	kkimlabs (~kkimlabs@NYUFGA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has quit (Ping timeout: 244 seconds)
2012-08-18 15:07:50	-->	liberathor (~quassel@190.255.242.93) has joined ##c++
2012-08-18 15:07:52	<--	m4ggus (~marcus@unaffiliated/m4ggus) has quit
2012-08-18 15:08:23	-->	Astus (~Astus@unaffiliated/astus) has joined ##c++
2012-08-18 15:08:36	<--	Guest7221 (~private@2.94.17.31) has quit (Read error: Connection reset by peer)
2012-08-18 15:09:10	<--	shdpl (~shd@89-77-17-131.dynamic.chello.pl) has quit (Quit: Lost terminal)
2012-08-18 15:10:20	<--	archangelpetro (~petro@unaffiliated/archangelpetro) has quit (Ping timeout: 246 seconds)
2012-08-18 15:10:52	-->	argoneus (~argoneus@unaffiliated/argoneus) has joined ##c++
2012-08-18 15:12:40	-->	plasickoto2 (~plasickot@78-3-101-6.adsl.net.t-com.hr) has joined ##c++
2012-08-18 15:13:43	<--	FriskyKat (SomeWhere@027a7de0.bb.sky.com) has quit (Quit: I Think Its Time To Make The Floor Burn!!)
2012-08-18 15:13:53	<--	TMM (~hp@fsf/member/pdpc.professional.tmm) has quit (Ping timeout: 272 seconds)
2012-08-18 15:14:48	<--	plasickoto (~plasickot@78-3-101-6.adsl.net.t-com.hr) has quit (Ping timeout: 240 seconds)
2012-08-18 15:15:47	-->	vsrao (~quassel@unaffiliated/vsrao) has joined ##c++
2012-08-18 15:17:07	-->	TMM (~hp@fsf/member/pdpc.professional.tmm) has joined ##c++
2012-08-18 15:18:59	mindtheory	if i have a class instance that is dynamically allocated (new) in another class, what happens with its member variables? they all live on the heap as well?
2012-08-18 15:19:13	<--	overburn (5f4cc34b@gateway/web/freenode/ip.95.76.195.75) has quit (Quit: Page closed)
2012-08-18 15:19:26	TinoDidriksen	Yes, they're part of the object.
2012-08-18 15:19:27	mindtheory	in other words, is there any reason within my class to do something like: mCameraManager = new CameraManager?
2012-08-18 15:19:31	--	maum_ch is now known as maum
2012-08-18 15:19:44	mindtheory	TinoDidriksen: that makes sense, all one congruent part of memory
2012-08-18 15:20:06	TinoDidriksen	Don't think of it as stack or heap. Think in terms of lifetime...do you need new because you need to control when an object is freed?
2012-08-18 15:20:30	mindtheory	i don't, it should be alive for the whole lifetime of the class
2012-08-18 15:20:33	TinoDidriksen	You should generally avoid new whenever possible.
2012-08-18 15:20:34	mindtheory	instance
2012-08-18 15:20:36	mindtheory	ok
2012-08-18 15:20:46	mindtheory	thanks ;)
2012-08-18 15:20:49	-->	D3V0R3NT (~D3V0R3NT@c-69-244-156-28.hsd1.mi.comcast.net) has joined ##c++
2012-08-18 15:21:05	qdii	mindtheory, you could want to do that for many reasons. For instance, if you are using "new" on CameraManager, then your header file doesn’t have to include CameraManager.h, you can forward the declaration. It saves compile time
2012-08-18 15:21:21	TinoDidriksen	That is an awful reason for using new...
2012-08-18 15:21:22	-->	a0x (~a0x@unaffiliated/a0x) has joined ##c++
2012-08-18 15:21:44	qdii	it is.
2012-08-18 15:22:19	mindtheory	one quick other question.. If I want shared ownership of cameras between two classes - my main scene class and the CameraManager class.. should I use a vector of boost::shared_ptr?
2012-08-18 15:22:24	mindtheory	with CameraManager?
2012-08-18 15:22:27	-->	kkimlabs (~kkimlabs@NYUFGA-WLESSAUTHCLIENTS-01.NATPOOL.NYU.EDU) has joined ##c++
2012-08-18 15:22:30	-->	nocture (~nocture@3e6b4b9d.rev.stofanet.dk) has joined ##c++
2012-08-18 15:22:48	mindtheory	that way I can create them in the main scene, but add them to the CameraManager, while still being able to hold on to a persistent reference in the main file?
2012-08-18 15:23:01	TinoDidriksen	Who owns them?
2012-08-18 15:23:46	TinoDidriksen	shared_ptr will work, but if you can resolve ownership then you can just use normal pointers.
2012-08-18 15:23:50	-->	drinkycrow (~whoreface@c-98-212-215-137.hsd1.in.comcast.net) has joined ##c++
2012-08-18 15:23:51	mindtheory	I would say the main scene.. even though it's a camera manager class.. the CameraManager class is more about setting the active camera, debug drawing them, and beginning/ending the active camera
2012-08-18 15:24:09	<--	tamurt (~DoDina@lib59-3-82-233-189-179.fbx.proxad.net) has quit (Quit: Leaving.)
2012-08-18 15:24:58	<--	XaS (~rofl@jua06-2-88-163-170-48.fbx.proxad.net) has quit (Read error: Connection reset by peer)
2012-08-18 15:25:29	mindtheory	and getting the number of them, getting the active camera, etc.. it's more of a glorified collection of cameras
2012-08-18 15:26:06	-->	MrSassyPants (thephil@84-74-111-70.dclient.hispeed.ch) has joined ##c++
2012-08-18 15:26:27	<--	mikko777 (~quassel@dsl-hkibrasgw2-ff77c300-69.dhcp.inet.fi) has quit (Remote host closed the connection)
2012-08-18 15:26:47	mindtheory	a standard pointer would be faster
2012-08-18 15:27:24	<--	leo2007 (~leo@123.114.56.118) has quit (Read error: Connection reset by peer)
2012-08-18 15:28:15	-->	ruler501 (~ruler@pool-71-170-89-215.dllstx.fios.verizon.net) has joined ##c++
2012-08-18 15:29:32	-->	NikitaTrophimov (~ubuntu@109.195.84.139) has joined ##c++
2012-08-18 15:29:44	<--	NikitaTrophimov (~ubuntu@109.195.84.139) has quit (Client Quit)
2012-08-18 15:30:17	<--	Khoyo (~Khoyo@fsf/member/khoyo) has quit (Ping timeout: 246 seconds)
2012-08-18 15:30:46	-->	leo2007 (~leo@123.114.56.118) has joined ##c++
2012-08-18 15:30:47	<--	Gnero (~nero@201.75.148.149) has quit (Ping timeout: 240 seconds)
2012-08-18 15:31:41	<--	roadt (~roadt@114.96.132.176) has quit (Ping timeout: 246 seconds)
2012-08-18 15:31:54	-->	NikitaTrophimov (~ubuntu@109.195.84.139) has joined ##c++
2012-08-18 15:31:57	NikitaTrophimov	Hi all!
2012-08-18 15:32:12	mindtheory	isn't it unsafe to have a vector of regular pointers though?
2012-08-18 15:32:20	DanyO83	after doing std::free(ptr), can I assume ptr to be NULL?
2012-08-18 15:32:34	NikitaTrophimov	Dany083, nope
2012-08-18 15:32:40	io2	mindtheory: no, if you clean it up after you are done
2012-08-18 15:32:48	DanyO83	k, so it's left dangling then
2012-08-18 15:33:05	io2	but with c++11, using std::unique_ptr is practically as fast
2012-08-18 15:33:24	io2	so, there is really no need for raws in 90% of the scenarios involved
2012-08-18 15:33:29	-->	Cosmo-san (~Cosmo@unaffiliated/cosmo-san) has joined ##c++
2012-08-18 15:33:49	io2	shared_ptr is a reference counted smart ptr
2012-08-18 15:33:50	NikitaTrophimov	You can use macro like "#define SAFE_PTR_DELETE(PTR) do { delete ptr; ptr = nullptr; } while(0)"
2012-08-18 15:33:54	mindtheory	io2: thanks.. and if the vector of pointers and the objects they point to are both guaranteed to live for the life of the program, it's completely safe
2012-08-18 15:34:28	io2	mindtheory: it is your own kitchen, likely to burn your own food :)
2012-08-18 15:35:22	mindtheory	io2: haha I'll remember that ;) would it be better to use shared_ptr? any drawback to performance really if the vectors are very small (say maximum of 8 items)
2012-08-18 15:35:46	io2	shared_ptr vs unique_ptr = choice depends on semantics
2012-08-18 15:36:05	-->	Kasu (~Kasu@c83-253-20-105.bredband.comhem.se) has joined ##c++
2012-08-18 15:36:37	TinoDidriksen	mindtheory, your owning object can store them in unique_ptr - the using objects can have just regular pointers, if they're guaranteed to live shorter than the owner.
2012-08-18 15:36:44	io2	who is to own the pointer's actual resource
2012-08-18 15:36:56	<--	ShishKabab (~vincent@195.191.202.173) has quit (Quit: Konversation terminated!)
2012-08-18 15:37:02	<--	NikitaTrophimov (~ubuntu@109.195.84.139) has quit (Quit: leaving)
2012-08-18 15:37:36	<--	glenfe (~glen@unaffiliated/glenfe) has quit (Ping timeout: 246 seconds)
2012-08-18 15:37:50	mindtheory	TinoDidriksen: thanks, i'll look into that
2012-08-18 15:38:02	io2	bottom line is that you should be using as i said previously unique_ptr within vector containers if you want to live a hassle free life on the fast run (relatively) since you don't have to clean up the raw pointer vector afterwards
2012-08-18 15:38:04	mindtheory	io2: I guess that's where I'm struggling.. is the proper design of this
2012-08-18 15:38:34	io2	remember that shared_ptr is a sort of "last resort" solution in the "container of pointers" problem
2012-08-18 15:38:40	mindtheory	io2: would that make the vector container own it?
2012-08-18 15:39:41	<--	Lillia7 (~lillia7@6abb386d.t-net.ne.jp) has quit (Quit: Leaving...)
2012-08-18 15:39:48	<--	vjn (~vjn@216.239.45.130) has quit (Quit: vjn)
2012-08-18 15:40:16	io2	unique_ptr owns the resource
2012-08-18 15:40:30	io2	when a unique_ptr is within a vector for example
2012-08-18 15:40:38	<--	bolosaur (u5293@gateway/web/irccloud.com/x-zhblrlbtgdtsfosm) has left ##c++
2012-08-18 15:40:45	-->	vjn (~vjn@216.239.45.130) has joined ##c++
2012-08-18 15:41:39	io2	the owner, is unique_ptr<mytype> within the std::vector<unique_ptr<mytype>> container of OWNING (and pwning) the resource smart pointers
2012-08-18 15:41:54	io2	std::vector<mytype*> is ok
2012-08-18 15:41:55	io2	BUT
2012-08-18 15:41:58	mindtheory	ok that makes a lot of sense
2012-08-18 15:42:04	io2	you have to clean it up after you are done
2012-08-18 15:42:16	io2	unique_ptr cleans it up once your vector goes out of scope
2012-08-18 15:42:23	io2	or lifetime ends in general
2012-08-18 15:42:25	mindtheory	which is much better in this case
2012-08-18 15:42:31	mindtheory	thanks so much
2012-08-18 15:42:34	io2	i am looking for something for you to read
2012-08-18 15:42:34	<--	mesger (imac@178-117-103-18.access.telenet.be) has quit (Read error: Connection reset by peer)
2012-08-18 15:42:46	io2	mindtheory: http://www.informit.com/guides/content.aspx?g=cplusplus&seqNum=401
2012-08-18 15:42:48	io2	here
2012-08-18 15:42:51	-->	mesger (imac@178-117-103-18.access.telenet.be) has joined ##c++
2012-08-18 15:42:53	-->	plasickoto (~plasickot@78-3-101-6.adsl.net.t-com.hr) has joined ##c++
2012-08-18 15:43:53	mindtheory	i think my problem is my overall design.. in my main class I have a member variable called let's say mMainCamera - it's created and defined in the main class.. then I call a CameraManager.addCamera(&mMainCamera) which adds it to a vector in CameraManager
2012-08-18 15:43:56	io2	the best way to see if you have a bottleneck because of this design is always to benchmark; but i seriously doubt you will find anything seriously "hitting" your performance vs raw pointers
2012-08-18 15:44:03	-->	ubuntu___ (~ubuntu@109.195.84.139) has joined ##c++
2012-08-18 15:44:27	io2	what happens to mMainCamera ?
2012-08-18 15:44:37	mindtheory	stays in existence until the end of the program
2012-08-18 15:44:45	<--	ubuntu___ (~ubuntu@109.195.84.139) has quit (Quit: leaving)
2012-08-18 15:44:48	-->	wisey (~Steven@host86-130-49-164.range86-130.btcentralplus.com) has joined ##c++
2012-08-18 15:44:49	io2	do you need it to
2012-08-18 15:44:50	mindtheory	should i make cameraManager more of a factory class you think?
2012-08-18 15:45:01	-->	roadt (~roadt@114.96.133.146) has joined ##c++
2012-08-18 15:45:06	-->	Textmode (~boneidle@adsl-syd-3-77.ozonline.com.au) has joined ##c++
2012-08-18 15:45:08	mindtheory	CameraManager.createCamera() and have it return a pointer?
2012-08-18 15:45:11	-->	ubuntu___ (~ubuntu@109.195.84.139) has joined ##c++
2012-08-18 15:45:28	mindtheory	my ownership is all messed up i think
2012-08-18 15:45:32	io2	unique_ptr would kill you if mMainCamera
2012-08-18 15:45:35	io2	err
2012-08-18 15:45:36	<--	Micom (~Micom@unaffiliated/micom) has left ##c++
2012-08-18 15:45:36	-->	soryy708 (2e78d6b6@gateway/web/freenode/ip.46.120.214.182) has joined ##c++
2012-08-18 15:45:43	io2	unique_ptr with such a design would not do
2012-08-18 15:45:43	<--	plasickoto2 (~plasickot@78-3-101-6.adsl.net.t-com.hr) has quit (Ping timeout: 252 seconds)
2012-08-18 15:45:57	mindtheory	is it a bad design?
2012-08-18 15:45:57	io2	also i suspect that you are hidding globals someplace...
2012-08-18 15:46:13	io2	don't know where mMainCamera comes from :)
2012-08-18 15:46:24	-->	Anduin (~awithers@pdpc/supporter/professional/anduin) has joined ##c++
2012-08-18 15:47:33	io2	anyway, decide first how you want to do this
2012-08-18 15:47:33	-->	glenfe (~glen@unaffiliated/glenfe) has joined ##c++
2012-08-18 15:47:34	<--	mesger (imac@178-117-103-18.access.telenet.be) has quit (Read error: Connection reset by peer)
2012-08-18 15:47:40	-->	thelazydeveloper (~lazydevel@unaffiliated/thelazydeveloper) has joined ##c++
2012-08-18 15:47:51	-->	mesger (imac@178-117-103-18.access.telenet.be) has joined ##c++
2012-08-18 15:47:58	io2	having mMainCamera dancing somewhere where no man has gone before will not make the crew of the enterprise happy
2012-08-18 15:48:36	mindtheory	io2: haha full of the jokes today ;)
2012-08-18 15:48:41	-->	tehtros (~tehtros@user-12hclnh.cable.mindspring.com) has joined ##c++
2012-08-18 15:48:50	<--	assertsmart (~assertsma@78.97.253.170) has quit (Ping timeout: 260 seconds)
2012-08-18 15:48:56	<--	D3V0R3NT (~D3V0R3NT@c-69-244-156-28.hsd1.mi.comcast.net) has quit (Remote host closed the connection)
2012-08-18 15:49:10	mindtheory	io2: I think it would be best for me to change the CameraManager class to more of a factory design
2012-08-18 15:49:17	io2	:)
2012-08-18 15:49:19	mindtheory	and have it own everything
2012-08-18 15:50:12	<--	peterolen (~peter@78-69-135-134-no68.tbcn.telia.com) has quit (Ping timeout: 246 seconds)
2012-08-18 15:50:14	io2	avoid globals, avoid cleanups that all have to occur at the end of the program simultaneously
2012-08-18 15:50:16	mindtheory	while allowing the main application to hold references to the individual cameras stored within its collection
2012-08-18 15:50:38	mindtheory	vs. having to call a getter() every render
2012-08-18 15:50:39	io2	the more you are c-fu'ing c++ the more you get fuc++ked
2012-08-18 15:51:07	<--	Oohm (~Oohm@ip54550b7a.speed.planet.nl) has quit (Ping timeout: 240 seconds)
2012-08-18 15:51:21	-->	emes (~emes@pdpc/supporter/student/emes) has joined ##c++
2012-08-18 15:51:24	mindtheory	true, i'm really trying to leverage boost and managed objects vs. trying to manually do so.. just asking for trouble, especially with my lower knowledge
2012-08-18 15:51:28	<--	real_tehtros (~tehtros@user-12hclne.cable.mindspring.com) has quit (Ping timeout: 244 seconds)
2012-08-18 15:51:50	io2	are you using python/java/ruby etc ?
2012-08-18 15:52:04	-->	boru (~boru@unaffiliated/boru) has joined ##c++
2012-08-18 15:52:23	<--	manel2020 (~manel2020@44.158.165.83.dynamic.mundo-r.com) has quit (Remote host closed the connection)
2012-08-18 15:53:08	mindtheory	io2: have used java quite a bit
2012-08-18 15:53:21	-->	nachtwandler (~nachtwand@p57AD7B93.dip.t-dialin.net) has joined ##c++
2012-08-18 15:53:48	<--	symm- (~symm-@95.65.58.192) has quit (Ping timeout: 252 seconds)
2012-08-18 15:54:12	io2	read up on how to actually implement factory in C++ then
2012-08-18 15:54:21	io2	google is your friend as always
2012-08-18 15:54:52	mindtheory	io2: thanks for all the help.. i'm looking it up right now.. I think my biggest problem was not really settling on a design - I wanted no ownership I guess (shared), but that's not a good idea
2012-08-18 15:54:54	wisey	where can I get help on getting 'make' installed on my systems?
2012-08-18 15:55:11	mindtheory	io2: and when you kept asking me who owns it, it really made me think about that
2012-08-18 15:56:18	<--	ubuntu___ (~ubuntu@109.195.84.139) has quit (Quit: leaving)
2012-08-18 15:56:47	io2	np
2012-08-18 15:56:58	io2	wisey: not a C++ question
2012-08-18 15:56:59	<--	sweet|kid (nuraghe@unaffiliated/changednicks) has quit (Excess Flood)
2012-08-18 15:56:59	-->	imac_ (imac@178-117-103-18.access.telenet.be) has joined ##c++
2012-08-18 15:57:19	<--	Sven_Shady (~quassel@p54891D66.dip.t-dialin.net) has quit (Remote host closed the connection)
2012-08-18 15:57:22	<--	Astus (~Astus@unaffiliated/astus) has quit (Quit: Leaving)
2012-08-18 15:57:22	io2	but the answer is to look at your distro / os etc
2012-08-18 15:57:39	io2	find a channel about it and go there
2012-08-18 15:58:24	-->	sweet|kid (runer@unaffiliated/changednicks) has joined ##c++
2012-08-18 16:00:08	<--	mesger (imac@178-117-103-18.access.telenet.be) has quit (Ping timeout: 245 seconds)
2012-08-18 16:00:21	-->	sambio (~cc@190.57.227.107) has joined ##c++
2012-08-18 16:01:11	<--	Anders_J (~anders@unaffiliated/anders-j/x-0508776) has quit (Quit: Anders_J)
2012-08-18 16:02:11	-->	Henke37 (~Henrik@90-230-202-243-no203.tbcn.telia.com) has joined ##c++
2012-08-18 16:02:30	<--	iLogical_ (~iLogical@unaffiliated/ilogical) has quit (Remote host closed the connection)
2012-08-18 16:03:09	<--	dan_w (522ae315@gateway/web/freenode/ip.82.42.227.21) has quit (Quit: Page closed)
2012-08-18 16:04:41	-->	inkjetunito (~fsww@unaffiliated/inkjetunit) has joined ##c++
2012-08-18 16:05:58	<--	melba (~melba@unaffiliated/lazz0) has quit (Ping timeout: 244 seconds)
2012-08-18 16:06:35	-->	peterolen (~peter@78-69-135-134-no68.tbcn.telia.com) has joined ##c++
2012-08-18 16:06:49	-->	pmenon (~pmenon@bas5-unionville55-1177790873.dsl.bell.ca) has joined ##c++
2012-08-18 16:07:21	-->	Oohm (~Oohm@ip54550b7a.speed.planet.nl) has joined ##c++
2012-08-18 16:09:23	-->	graspee (~graspee@02dd1c1b.bb.sky.com) has joined ##c++
2012-08-18 16:09:37	<--	hz (~hz@unaffiliated/hz) has quit (Ping timeout: 272 seconds)
2012-08-18 16:09:49	-->	j0hnsm1th (~jubei@41-133-139-185.dsl.mweb.co.za) has joined ##c++
2012-08-18 16:09:53	--	Automorphism is now known as PointyHairedTrol
2012-08-18 16:09:58	-->	neurodrone (~neurodron@c-69-142-0-18.hsd1.pa.comcast.net) has joined ##c++
2012-08-18 16:10:02	<--	neurodrone (~neurodron@c-69-142-0-18.hsd1.pa.comcast.net) has quit (Changing host)
2012-08-18 16:10:02	-->	neurodrone (~neurodron@unaffiliated/neurodrone) has joined ##c++
2012-08-18 16:10:10	<--	PointyHairedTrol (~suckmy@unaffiliated/shinydarkness) has left ##c++
2012-08-18 16:10:26	mindtheory	io2: so if the CameraManager class was a factory that created Camera objects and returned them as a unique_ptr to the callee.. would the CameraManager class still be able to store them in a vector?
2012-08-18 16:11:06	-->	prest1ge (~prestige@p57B0D2CB.dip.t-dialin.net) has joined ##c++
2012-08-18 16:12:00		irc: disconnected from server
